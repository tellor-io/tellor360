{
  "id": "a49878edffde7af9a5d7062897a341e0",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.3",
  "solcLongVersion": "0.8.3+commit.8d00100c",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/oldContracts/contracts/testing/ForceSendEther.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.3;\n\ncontract ForceSendEther {\n    function forceSendEther(address payable _beneficiary) public payable {\n        selfdestruct(_beneficiary);\n    }\n    \n    receive() external payable {}\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 300
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/oldContracts/contracts/testing/ForceSendEther.sol": {
        "ForceSendEther": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address payable",
                  "name": "_beneficiary",
                  "type": "address"
                }
              ],
              "name": "forceSendEther",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b5060a98061001e6000396000f3fe608060405260043610601f5760003560e01c806306c4a68414602a576025565b36602557005b600080fd5b603960353660046047565b603b565b005b806001600160a01b0316ff5b6000602082840312156057578081fd5b81356001600160a01b0381168114606c578182fd5b939250505056fea2646970667358221220c8d247c9531888f7e692621386c7acb106c330b71bb89fdf5de18a87fc2bebe864736f6c63430008030033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xA9 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C4A684 EQ PUSH1 0x2A JUMPI PUSH1 0x25 JUMP JUMPDEST CALLDATASIZE PUSH1 0x25 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x39 PUSH1 0x35 CALLDATASIZE PUSH1 0x4 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x3B JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x57 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x6C JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0xD2 SELFBALANCE 0xC9 MSTORE8 XOR DUP9 0xF7 0xE6 SWAP3 PUSH3 0x1386C7 0xAC 0xB1 MOD 0xC3 ADDRESS 0xB7 SHL 0xB8 SWAP16 0xDF 0x5D 0xE1 DUP11 DUP8 0xFC 0x2B 0xEB 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ",
              "sourceMap": "56:183:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:353:1",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:1",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "92:259:1",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "138:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "147:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "155:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "140:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "140:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "140:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "113:7:1"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "122:9:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "109:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "109:23:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "134:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "105:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "105:32:1"
                              },
                              "nodeType": "YulIf",
                              "src": "102:2:1"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "173:36:1",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "199:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "186:12:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "186:23:1"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "177:5:1",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "295:26:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "304:6:1"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "312:6:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "297:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "297:22:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "297:22:1"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "231:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "242:5:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "249:42:1",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "238:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "238:54:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "228:2:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "228:65:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "221:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "221:73:1"
                              },
                              "nodeType": "YulIf",
                              "src": "218:2:1"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "330:15:1",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "340:5:1"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "330:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "58:9:1",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "69:7:1",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "81:6:1",
                            "type": ""
                          }
                        ],
                        "src": "14:337:1"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
                  "id": 1,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405260043610601f5760003560e01c806306c4a68414602a576025565b36602557005b600080fd5b603960353660046047565b603b565b005b806001600160a01b0316ff5b6000602082840312156057578081fd5b81356001600160a01b0381168114606c578182fd5b939250505056fea2646970667358221220c8d247c9531888f7e692621386c7acb106c330b71bb89fdf5de18a87fc2bebe864736f6c63430008030033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C4A684 EQ PUSH1 0x2A JUMPI PUSH1 0x25 JUMP JUMPDEST CALLDATASIZE PUSH1 0x25 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x39 PUSH1 0x35 CALLDATASIZE PUSH1 0x4 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x3B JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0x57 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x6C JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0xD2 SELFBALANCE 0xC9 MSTORE8 XOR DUP9 0xF7 0xE6 SWAP3 PUSH3 0x1386C7 0xAC 0xB1 MOD 0xC3 ADDRESS 0xB7 SHL 0xB8 SWAP16 0xDF 0x5D 0xE1 DUP11 DUP8 0xFC 0x2B 0xEB 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD SUB STOP CALLER ",
              "sourceMap": "56:183:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;86:112;;;;;;:::i;:::-;;:::i;:::-;;;178:12;-1:-1:-1;;;;;165:26:0;;14:337:1;;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;199:9;186:23;-1:-1:-1;;;;;242:5:1;238:54;231:5;228:65;218:2;;312:6;304;297:22;218:2;340:5;92:259;-1:-1:-1;;;92:259:1:o"
            },
            "methodIdentifiers": {
              "forceSendEther(address)": "06c4a684"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"forceSendEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oldContracts/contracts/testing/ForceSendEther.sol\":\"ForceSendEther\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"contracts/oldContracts/contracts/testing/ForceSendEther.sol\":{\"keccak256\":\"0x23e95add63b24c5a385b57e3b93d84e5fd312856389cb79dba08daae219f3964\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d39ca20eaf342eb348fb5c197aeabab205cc27f4bf6fdaf3e5aeda69a1401ac\",\"dweb:/ipfs/QmSEbjWbi8xxv1JK6GQPJfdsp7NrUe1yP7zEFfPKRXbw6S\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/oldContracts/contracts/testing/ForceSendEther.sol": {
        "ast": {
          "absolutePath": "contracts/oldContracts/contracts/testing/ForceSendEther.sol",
          "exportedSymbols": {
            "ForceSendEther": [
              16
            ]
          },
          "id": 17,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.8",
                ".3"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 16,
              "linearizedBaseContracts": [
                16
              ],
              "name": "ForceSendEther",
              "nameLocation": "65:14:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 10,
                    "nodeType": "Block",
                    "src": "155:43:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 7,
                              "name": "_beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3,
                              "src": "178:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 6,
                            "name": "selfdestruct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -21,
                            "src": "165:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                              "typeString": "function (address payable)"
                            }
                          },
                          "id": 8,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "165:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9,
                        "nodeType": "ExpressionStatement",
                        "src": "165:26:0"
                      }
                    ]
                  },
                  "functionSelector": "06c4a684",
                  "id": 11,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "forceSendEther",
                  "nameLocation": "95:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3,
                        "mutability": "mutable",
                        "name": "_beneficiary",
                        "nameLocation": "126:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "110:28:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 2,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "110:15:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "109:30:0"
                  },
                  "returnParameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "155:0:0"
                  },
                  "scope": 16,
                  "src": "86:112:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 14,
                    "nodeType": "Block",
                    "src": "235:2:0",
                    "statements": []
                  },
                  "id": 15,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "215:2:0"
                  },
                  "returnParameters": {
                    "id": 13,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "235:0:0"
                  },
                  "scope": 16,
                  "src": "208:29:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 17,
              "src": "56:183:0"
            }
          ],
          "src": "32:207:0"
        },
        "id": 0
      }
    }
  }
}
