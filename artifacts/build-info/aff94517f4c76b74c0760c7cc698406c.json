{
  "id": "aff94517f4c76b74c0760c7cc698406c",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.3",
  "solcLongVersion": "0.8.3+commit.8d00100c",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/oldContracts/contracts/interfaces/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.3;\n\ninterface IERC20 {\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n}"
      },
      "contracts/oldContracts/contracts/TellorFlex.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.3;\n\nimport \"./interfaces/IERC20.sol\";\n\n/**\n @author Tellor Inc.\n @title TellorFlex\n @dev This is a streamlined Tellor oracle system which handles staking, reporting,\n * slashing, and user data getters in one contract. This contract is controlled\n * by a single address known as 'governance', which could be an externally owned\n * account or a contract, allowing for a flexible, modular design.\n*/\ncontract TellorFlex {\n    IERC20 public token;\n    address public governance;\n    uint256 public stakeAmount; //amount required to be a staker\n    uint256 public totalStakeAmount; //total amount of tokens locked in contract (via stake)\n    uint256 public reportingLock; // base amount of time before a reporter is able to submit a value again\n    uint256 public timeOfLastNewValue = block.timestamp; // time of the last new submitted value, originally set to the block timestamp\n    mapping(bytes32 => Report) private reports; // mapping of query IDs to a report\n    mapping(address => StakeInfo) stakerDetails; //mapping from a persons address to their staking info\n\n    // Structs\n    struct Report {\n        uint256[] timestamps; // array of all newValueTimestamps reported\n        mapping(uint256 => uint256) timestampIndex; // mapping of timestamps to respective indices\n        mapping(uint256 => uint256) timestampToBlockNum; // mapping of timestamp to block number\n        mapping(uint256 => bytes) valueByTimestamp; // mapping of timestamps to values\n        mapping(uint256 => address) reporterByTimestamp; // mapping of timestamps to reporters\n    }\n\n    struct StakeInfo {\n        uint256 startDate; //stake start date\n        uint256 stakedBalance; // staked balance\n        uint256 lockedBalance; // amount locked for withdrawal\n        uint256 reporterLastTimestamp; // timestamp of reporter's last reported value\n        uint256 reportsSubmitted; // total number of reports submitted by reporter\n        mapping(bytes32 => uint256) reportsSubmittedByQueryId;\n    }\n\n    // Events\n    event NewGovernanceAddress(address _newGovernanceAddress);\n    event NewReport(\n        bytes32 _queryId,\n        uint256 _time,\n        bytes _value,\n        uint256 _nonce,\n        bytes _queryData,\n        address _reporter\n    );\n    event NewReportingLock(uint256 _newReportingLock);\n    event NewStakeAmount(uint256 _newStakeAmount);\n    event NewStaker(address _staker, uint256 _amount);\n    event ReporterSlashed(\n        address _reporter,\n        address _recipient,\n        uint256 _slashAmount\n    );\n    event StakeWithdrawRequested(address _staker, uint256 _amount);\n    event StakeWithdrawn(address _staker);\n    event ValueRemoved(bytes32 _queryId, uint256 _timestamp);\n\n    /**\n     * @dev Initializes system parameters\n     * @param _token address of token used for staking\n     * @param _governance address which controls system\n     * @param _stakeAmount amount of token needed to report oracle values\n     * @param _reportingLock base amount of time (seconds) before reporter is able to report again\n     */\n    constructor(\n        address _token,\n        address _governance,\n        uint256 _stakeAmount,\n        uint256 _reportingLock\n    ) {\n        require(_token != address(0), \"must set token address\");\n        require(_governance != address(0), \"must set governance address\");\n        token = IERC20(_token);\n        governance = _governance;\n        stakeAmount = _stakeAmount;\n        reportingLock = _reportingLock;\n    }\n\n    /**\n     * @dev Changes governance address\n     * @param _newGovernanceAddress new governance address\n     */\n    function changeGovernanceAddress(address _newGovernanceAddress) external {\n        require(msg.sender == governance, \"caller must be governance address\");\n        require(\n            _newGovernanceAddress != address(0),\n            \"must set governance address\"\n        );\n        governance = _newGovernanceAddress;\n        emit NewGovernanceAddress(_newGovernanceAddress);\n    }\n\n    /**\n     * @dev Changes base amount of time (seconds) before reporter is allowed to report again\n     * @param _newReportingLock new reporter lock time in seconds\n     */\n    function changeReportingLock(uint256 _newReportingLock) external {\n        require(msg.sender == governance, \"caller must be governance address\");\n        require(\n            _newReportingLock > 0,\n            \"reporting lock must be greater than zero\"\n        );\n        reportingLock = _newReportingLock;\n        emit NewReportingLock(_newReportingLock);\n    }\n\n    /**\n     * @dev Changes amount of token stake required to report values\n     * @param _newStakeAmount new reporter stake amount\n     */\n    function changeStakeAmount(uint256 _newStakeAmount) external {\n        require(msg.sender == governance, \"caller must be governance address\");\n        require(_newStakeAmount > 0, \"stake amount must be greater than zero\");\n        stakeAmount = _newStakeAmount;\n        emit NewStakeAmount(_newStakeAmount);\n    }\n\n    /**\n     * @dev Allows a reporter to submit stake\n     * @param _amount amount of tokens to stake\n     */\n    function depositStake(uint256 _amount) external {\n        StakeInfo storage _staker = stakerDetails[msg.sender];\n        if (_staker.lockedBalance > 0) {\n            if (_staker.lockedBalance >= _amount) {\n                _staker.lockedBalance -= _amount;\n            } else {\n                require(\n                    token.transferFrom(\n                        msg.sender,\n                        address(this),\n                        _amount - _staker.lockedBalance\n                    )\n                );\n                _staker.lockedBalance = 0;\n            }\n        } else {\n            require(token.transferFrom(msg.sender, address(this), _amount));\n        }\n        _staker.startDate = block.timestamp; // This resets their stake start date to now\n        _staker.stakedBalance += _amount;\n        totalStakeAmount += _amount;\n        emit NewStaker(msg.sender, _amount);\n    }\n\n    /**\n     * @dev Removes a value from the oracle.\n     * Note: this function is only callable by the Governance contract.\n     * @param _queryId is ID of the specific data feed\n     * @param _timestamp is the timestamp of the data value to remove\n     */\n    function removeValue(bytes32 _queryId, uint256 _timestamp) external {\n        require(msg.sender == governance, \"caller must be governance address\");\n        Report storage rep = reports[_queryId];\n        uint256 _index = rep.timestampIndex[_timestamp];\n        require(_timestamp == rep.timestamps[_index], \"invalid timestamp\");\n        // Shift all timestamps back to reflect deletion of value\n        for (uint256 _i = _index; _i < rep.timestamps.length - 1; _i++) {\n            rep.timestamps[_i] = rep.timestamps[_i + 1];\n            rep.timestampIndex[rep.timestamps[_i]] -= 1;\n        }\n        // Delete and reset timestamp and value\n        delete rep.timestamps[rep.timestamps.length - 1];\n        rep.timestamps.pop();\n        rep.valueByTimestamp[_timestamp] = \"\";\n        rep.timestampIndex[_timestamp] = 0;\n        emit ValueRemoved(_queryId, _timestamp);\n    }\n\n    /**\n     * @dev Allows a reporter to request to withdraw their stake\n     * @param _amount amount of staked tokens requesting to withdraw\n     */\n    function requestStakingWithdraw(uint256 _amount) external {\n        StakeInfo storage _staker = stakerDetails[msg.sender];\n        require(\n            _staker.stakedBalance >= _amount,\n            \"insufficient staked balance\"\n        );\n        _staker.startDate = block.timestamp;\n        _staker.lockedBalance += _amount;\n        _staker.stakedBalance -= _amount;\n        totalStakeAmount -= _amount;\n        emit StakeWithdrawRequested(msg.sender, _amount);\n    }\n\n    /**\n     * @dev Slashes a reporter and transfers their stake amount to the given recipient\n     * Note: this function is only callable by the governance address.\n     * @param _reporter is the address of the reporter being slashed\n     * @param _recipient is the address receiving the reporter's stake\n     * @return uint256 amount of token slashed and sent to recipient address\n     */\n    function slashReporter(address _reporter, address _recipient)\n        external\n        returns (uint256)\n    {\n        require(msg.sender == governance, \"only governance can slash reporter\");\n        StakeInfo storage _staker = stakerDetails[_reporter];\n        require(\n            _staker.stakedBalance + _staker.lockedBalance > 0,\n            \"zero staker balance\"\n        );\n        uint256 _slashAmount;\n        if (_staker.lockedBalance >= stakeAmount) {\n            _slashAmount = stakeAmount;\n            _staker.lockedBalance -= stakeAmount;\n        } else if (\n            _staker.lockedBalance + _staker.stakedBalance >= stakeAmount\n        ) {\n            _slashAmount = stakeAmount;\n            _staker.stakedBalance -= stakeAmount - _staker.lockedBalance;\n            totalStakeAmount -= stakeAmount - _staker.lockedBalance;\n            _staker.lockedBalance = 0;\n        } else {\n            _slashAmount = _staker.stakedBalance + _staker.lockedBalance;\n            totalStakeAmount -= _staker.stakedBalance;\n            _staker.stakedBalance = 0;\n            _staker.lockedBalance = 0;\n        }\n        token.transfer(_recipient, _slashAmount);\n        emit ReporterSlashed(_reporter, _recipient, _slashAmount);\n        return (_slashAmount);\n    }\n\n    /**\n     * @dev Allows a reporter to submit a value to the oracle\n     * @param _queryId is ID of the specific data feed. Equals keccak256(_queryData) for non-legacy IDs\n     * @param _value is the value the user submits to the oracle\n     * @param _nonce is the current value count for the query id\n     * @param _queryData is the data used to fulfill the data query\n     */\n    function submitValue(\n        bytes32 _queryId,\n        bytes calldata _value,\n        uint256 _nonce,\n        bytes memory _queryData\n    ) external {\n        Report storage rep = reports[_queryId];\n        require(\n            _nonce == rep.timestamps.length || _nonce == 0,\n            \"nonce must match timestamp index\"\n        );\n        StakeInfo storage _staker = stakerDetails[msg.sender];\n        require(\n            _staker.stakedBalance >= stakeAmount,\n            \"balance must be greater than stake amount\"\n        );\n        // Require reporter to abide by given reporting lock\n        require(\n            (block.timestamp - _staker.reporterLastTimestamp) * 1000 >\n                (reportingLock * 1000) / (_staker.stakedBalance / stakeAmount),\n            \"still in reporter time lock, please wait!\"\n        );\n        require(\n            _queryId == keccak256(_queryData) || uint256(_queryId) <= 100,\n            \"id must be hash of bytes data\"\n        );\n        _staker.reporterLastTimestamp = block.timestamp;\n        // Checks for no double reporting of timestamps\n        require(\n            rep.reporterByTimestamp[block.timestamp] == address(0),\n            \"timestamp already reported for\"\n        );\n        // Update number of timestamps, value for given timestamp, and reporter for timestamp\n        rep.timestampIndex[block.timestamp] = rep.timestamps.length;\n        rep.timestamps.push(block.timestamp);\n        rep.timestampToBlockNum[block.timestamp] = block.number;\n        rep.valueByTimestamp[block.timestamp] = _value;\n        rep.reporterByTimestamp[block.timestamp] = msg.sender;\n        // Update last oracle value and number of values submitted by a reporter\n        timeOfLastNewValue = block.timestamp;\n        _staker.reportsSubmitted++;\n        _staker.reportsSubmittedByQueryId[_queryId]++;\n        emit NewReport(\n            _queryId,\n            block.timestamp,\n            _value,\n            _nonce,\n            _queryData,\n            msg.sender\n        );\n    }\n\n    /**\n     * @dev Withdraws a reporter's stake\n     */\n    function withdrawStake() external {\n        StakeInfo storage _s = stakerDetails[msg.sender];\n        // Ensure reporter is locked and that enough time has passed\n        require(block.timestamp - _s.startDate >= 7 days, \"7 days didn't pass\");\n        require(_s.lockedBalance > 0, \"reporter not locked for withdrawal\");\n        token.transfer(msg.sender, _s.lockedBalance);\n        _s.lockedBalance = 0;\n        emit StakeWithdrawn(msg.sender);\n    }\n\n    //Getters\n    /**\n     * @dev Returns the block number at a given timestamp\n     * @param _queryId is ID of the specific data feed\n     * @param _timestamp is the timestamp to find the corresponding block number for\n     * @return uint256 block number of the timestamp for the given data ID\n     */\n    function getBlockNumberByTimestamp(bytes32 _queryId, uint256 _timestamp)\n        external\n        view\n        returns (uint256)\n    {\n        return reports[_queryId].timestampToBlockNum[_timestamp];\n    }\n\n    /**\n     * @dev Returns the current value of a data feed given a specific ID\n     * @param _queryId is the ID of the specific data feed\n     * @return bytes memory of the current value of data\n     */\n    function getCurrentValue(bytes32 _queryId)\n        external\n        view\n        returns (bytes memory)\n    {\n        return\n            reports[_queryId].valueByTimestamp[\n                reports[_queryId].timestamps[\n                    reports[_queryId].timestamps.length - 1\n                ]\n            ];\n    }\n\n    /**\n     * @dev Returns governance address\n     * @return address governance\n     */\n    function getGovernanceAddress() external view returns (address) {\n        return governance;\n    }\n\n    /**\n     * @dev Counts the number of values that have been submitted for the request.\n     * @param _queryId the id to look up\n     * @return uint256 count of the number of values received for the id\n     */\n    function getNewValueCountbyQueryId(bytes32 _queryId)\n        external\n        view\n        returns (uint256)\n    {\n        return reports[_queryId].timestamps.length;\n    }\n\n    /**\n     * @dev Returns reporter address and whether a value was removed for a given queryId and timestamp\n     * @param _queryId the id to look up\n     * @param _timestamp is the timestamp of the value to look up\n     * @return address reporter who submitted the value\n     * @return bool true if the value was removed\n     */\n    function getReportDetails(bytes32 _queryId, uint256 _timestamp)\n        external\n        view\n        returns (address, bool)\n    {\n        bool _wasRemoved = reports[_queryId].timestampIndex[_timestamp] == 0 &&\n            keccak256(reports[_queryId].valueByTimestamp[_timestamp]) ==\n            keccak256(bytes(\"\")) &&\n            reports[_queryId].reporterByTimestamp[_timestamp] != address(0);\n        return (reports[_queryId].reporterByTimestamp[_timestamp], _wasRemoved);\n    }\n\n    /**\n     * @dev Returns the address of the reporter who submitted a value for a data ID at a specific time\n     * @param _queryId is ID of the specific data feed\n     * @param _timestamp is the timestamp to find a corresponding reporter for\n     * @return address of the reporter who reported the value for the data ID at the given timestamp\n     */\n    function getReporterByTimestamp(bytes32 _queryId, uint256 _timestamp)\n        external\n        view\n        returns (address)\n    {\n        return reports[_queryId].reporterByTimestamp[_timestamp];\n    }\n\n    /**\n     * @dev Returns the timestamp of the reporter's last submission\n     * @param _reporter is address of the reporter\n     * @return uint256 timestamp of the reporter's last submission\n     */\n    function getReporterLastTimestamp(address _reporter)\n        external\n        view\n        returns (uint256)\n    {\n        return stakerDetails[_reporter].reporterLastTimestamp;\n    }\n\n    /**\n     * @dev Returns the reporting lock time, the amount of time a reporter must wait to submit again\n     * @return uint256 reporting lock time\n     */\n    function getReportingLock() external view returns (uint256) {\n        return reportingLock;\n    }\n\n    /**\n     * @dev Returns the number of values submitted by a specific reporter address\n     * @param _reporter is the address of a reporter\n     * @return uint256 of the number of values submitted by the given reporter\n     */\n    function getReportsSubmittedByAddress(address _reporter)\n        external\n        view\n        returns (uint256)\n    {\n        return stakerDetails[_reporter].reportsSubmitted;\n    }\n\n    /**\n     * @dev Returns the number of values submitted to a specific queryId by a specific reporter address\n     * @param _reporter is the address of a reporter\n     * @param _queryId is the ID of the specific data feed\n     * @return uint256 of the number of values submitted by the given reporter to the given queryId\n     */\n    function getReportsSubmittedByAddressAndQueryId(\n        address _reporter,\n        bytes32 _queryId\n    ) external view returns (uint256) {\n        return stakerDetails[_reporter].reportsSubmittedByQueryId[_queryId];\n    }\n\n    /**\n     * @dev Returns amount required to report oracle values\n     * @return uint256 stake amount\n     */\n    function getStakeAmount() external view returns (uint256) {\n        return stakeAmount;\n    }\n\n    /**\n     * @dev Allows users to retrieve all information about a staker\n     * @param _staker address of staker inquiring about\n     * @return uint startDate of staking\n     * @return uint current amount staked\n     * @return uint current amount locked for withdrawal\n     * @return uint reporter's last reported timestamp\n     * @return uint total number of reports submitted by reporter\n     */\n    function getStakerInfo(address _staker)\n        external\n        view\n        returns (\n            uint256,\n            uint256,\n            uint256,\n            uint256,\n            uint256\n        )\n    {\n        return (\n            stakerDetails[_staker].startDate,\n            stakerDetails[_staker].stakedBalance,\n            stakerDetails[_staker].lockedBalance,\n            stakerDetails[_staker].reporterLastTimestamp,\n            stakerDetails[_staker].reportsSubmitted\n        );\n    }\n\n    /**\n     * @dev Returns the timestamp for the last value of any ID from the oracle\n     * @return uint256 of timestamp of the last oracle value\n     */\n    function getTimeOfLastNewValue() external view returns (uint256) {\n        return timeOfLastNewValue;\n    }\n\n    /**\n     * @dev Gets the timestamp for the value based on their index\n     * @param _queryId is the id to look up\n     * @param _index is the value index to look up\n     * @return uint256 timestamp\n     */\n    function getTimestampbyQueryIdandIndex(bytes32 _queryId, uint256 _index)\n        external\n        view\n        returns (uint256)\n    {\n        return reports[_queryId].timestamps[_index];\n    }\n\n    /**\n     * @dev Returns the index of a reporter timestamp in the timestamp array for a specific data ID\n     * @param _queryId is ID of the specific data feed\n     * @param _timestamp is the timestamp to find in the timestamps array\n     * @return uint256 of the index of the reporter timestamp in the array for specific ID\n     */\n    function getTimestampIndexByTimestamp(bytes32 _queryId, uint256 _timestamp)\n        external\n        view\n        returns (uint256)\n    {\n        return reports[_queryId].timestampIndex[_timestamp];\n    }\n\n    /**\n     * @dev Returns the address of the token used for staking\n     * @return address of the token used for staking\n     */\n    function getTokenAddress() external view returns (address) {\n        return address(token);\n    }\n\n    /**\n     * @dev Returns total amount of token staked for reporting\n     * @return uint256 total amount of token staked\n     */\n    function getTotalStakeAmount() external view returns (uint256) {\n        return totalStakeAmount;\n    }\n\n    /**\n     * @dev Retrieve value from oracle based on timestamp\n     * @param _queryId being requested\n     * @param _timestamp to retrieve data/value from\n     * @return bytes value for timestamp submitted\n     */\n    function retrieveData(bytes32 _queryId, uint256 _timestamp)\n        external\n        view\n        returns (bytes memory)\n    {\n        return reports[_queryId].valueByTimestamp[_timestamp];\n    }\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 300
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/oldContracts/contracts/TellorFlex.sol": {
        "TellorFlex": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_governance",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_stakeAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_reportingLock",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_newGovernanceAddress",
                  "type": "address"
                }
              ],
              "name": "NewGovernanceAddress",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "_queryId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_time",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "_value",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_nonce",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes",
                  "name": "_queryData",
                  "type": "bytes"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_reporter",
                  "type": "address"
                }
              ],
              "name": "NewReport",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_newReportingLock",
                  "type": "uint256"
                }
              ],
              "name": "NewReportingLock",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_newStakeAmount",
                  "type": "uint256"
                }
              ],
              "name": "NewStakeAmount",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_staker",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "NewStaker",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_reporter",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_slashAmount",
                  "type": "uint256"
                }
              ],
              "name": "ReporterSlashed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_staker",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "StakeWithdrawRequested",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "_staker",
                  "type": "address"
                }
              ],
              "name": "StakeWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "_queryId",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "_timestamp",
                  "type": "uint256"
                }
              ],
              "name": "ValueRemoved",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_newGovernanceAddress",
                  "type": "address"
                }
              ],
              "name": "changeGovernanceAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newReportingLock",
                  "type": "uint256"
                }
              ],
              "name": "changeReportingLock",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newStakeAmount",
                  "type": "uint256"
                }
              ],
              "name": "changeStakeAmount",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "depositStake",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_queryId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_timestamp",
                  "type": "uint256"
                }
              ],
              "name": "getBlockNumberByTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_queryId",
                  "type": "bytes32"
                }
              ],
              "name": "getCurrentValue",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getGovernanceAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_queryId",
                  "type": "bytes32"
                }
              ],
              "name": "getNewValueCountbyQueryId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_queryId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_timestamp",
                  "type": "uint256"
                }
              ],
              "name": "getReportDetails",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_queryId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_timestamp",
                  "type": "uint256"
                }
              ],
              "name": "getReporterByTimestamp",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_reporter",
                  "type": "address"
                }
              ],
              "name": "getReporterLastTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getReportingLock",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_reporter",
                  "type": "address"
                }
              ],
              "name": "getReportsSubmittedByAddress",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_reporter",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "_queryId",
                  "type": "bytes32"
                }
              ],
              "name": "getReportsSubmittedByAddressAndQueryId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getStakeAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_staker",
                  "type": "address"
                }
              ],
              "name": "getStakerInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTimeOfLastNewValue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_queryId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_timestamp",
                  "type": "uint256"
                }
              ],
              "name": "getTimestampIndexByTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_queryId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_index",
                  "type": "uint256"
                }
              ],
              "name": "getTimestampbyQueryIdandIndex",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTokenAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTotalStakeAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "governance",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_queryId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_timestamp",
                  "type": "uint256"
                }
              ],
              "name": "removeValue",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "reportingLock",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "requestStakingWithdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_queryId",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_timestamp",
                  "type": "uint256"
                }
              ],
              "name": "retrieveData",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_reporter",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_recipient",
                  "type": "address"
                }
              ],
              "name": "slashReporter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "stakeAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_queryId",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "_value",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "_nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "_queryData",
                  "type": "bytes"
                }
              ],
              "name": "submitValue",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "timeOfLastNewValue",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalStakeAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdrawStake",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1331:2",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "74:117:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "84:22:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "99:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "93:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "93:13:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "84:5:2"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "169:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "178:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "181:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "171:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "171:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "171:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "128:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "139:5:2"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "154:3:2",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "159:1:2",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "150:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "150:11:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "163:1:2",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "146:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "146:19:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "135:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "135:31:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "125:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "125:42:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "118:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "118:50:2"
                              },
                              "nodeType": "YulIf",
                              "src": "115:2:2"
                            }
                          ]
                        },
                        "name": "abi_decode_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "53:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "64:5:2",
                            "type": ""
                          }
                        ],
                        "src": "14:177:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "328:294:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "375:26:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "384:6:2"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "392:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "377:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "377:22:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "377:22:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "349:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "358:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "345:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "345:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "370:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "341:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "341:33:2"
                              },
                              "nodeType": "YulIf",
                              "src": "338:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "410:50:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "450:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "420:29:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "420:40:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "410:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "469:59:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "513:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "524:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "509:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "509:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "479:29:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "479:49:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "469:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "537:35:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "557:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "568:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "553:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "553:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "547:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "547:25:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "537:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "581:35:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "601:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "612:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "597:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "597:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "591:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "591:25:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "581:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "270:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "281:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "293:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "301:6:2",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "309:6:2",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "317:6:2",
                            "type": ""
                          }
                        ],
                        "src": "196:426:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "801:177:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "818:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "829:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "811:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "811:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "811:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "852:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "863:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "848:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "848:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "868:2:2",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "841:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "841:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "841:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "891:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "902:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "887:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "887:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "907:29:2",
                                    "type": "",
                                    "value": "must set governance address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "880:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "880:57:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "880:57:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "946:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "958:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "969:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "954:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "954:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "946:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_bbe99581b496754cbdf40f2080b3f8a8bd5eb5791b11511c11875b879c05f940__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "778:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "792:4:2",
                            "type": ""
                          }
                        ],
                        "src": "627:351:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1157:172:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1174:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1185:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1167:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1167:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1167:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1208:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1219:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1204:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1204:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1224:2:2",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1197:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1197:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1197:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1247:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1258:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1243:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1243:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "1263:24:2",
                                    "type": "",
                                    "value": "must set token address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1236:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1236:52:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1236:52:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1297:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1309:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1320:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1305:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1305:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1297:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f114cd400c5a8fd3294566124a1c5773e7afb0f1e3d66ae9ad952e0269647070__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1134:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1148:4:2",
                            "type": ""
                          }
                        ],
                        "src": "983:346:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value0, value0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_bbe99581b496754cbdf40f2080b3f8a8bd5eb5791b11511c11875b879c05f940__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"must set governance address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f114cd400c5a8fd3294566124a1c5773e7afb0f1e3d66ae9ad952e0269647070__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"must set token address\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "6080604052426005553480156200001557600080fd5b5060405162001f3d38038062001f3d833981016040819052620000389162000148565b6001600160a01b038416620000945760405162461bcd60e51b815260206004820152601660248201527f6d7573742073657420746f6b656e20616464726573730000000000000000000060448201526064015b60405180910390fd5b6001600160a01b038316620000ec5760405162461bcd60e51b815260206004820152601b60248201527f6d7573742073657420676f7665726e616e63652061646472657373000000000060448201526064016200008b565b600080546001600160a01b039586166001600160a01b03199182161790915560018054949095169316929092179092556002919091556004556200018f565b80516001600160a01b03811681146200014357600080fd5b919050565b600080600080608085870312156200015e578384fd5b62000169856200012b565b935062000179602086016200012b565b6040860151606090960151949790965092505050565b611d9e806200019f6000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c8063722580b61161011a578063adf1639d116100ad578063ca79b5a91161007c578063ca79b5a9146104e6578063cb82cc8f146104f9578063ce5e11bf1461050c578063e07c54861461051f578063fc0c546a14610557576101fb565b8063adf1639d146104a3578063bed9d861146104c3578063c0f95d52146104cb578063c5958af9146104d3576101fb565b80638929f4c6116100e95780638929f4c614610429578063935408d01461043c57806394409a561461046b5780639d9b16ed14610474576101fb565b8063722580b614610382578063732524941461038a578063733bdef01461039b57806377b03e0d14610409576101fb565b80634dfc2a34116101925780635d183cfa116101615780635d183cfa1461034a5780635eaa9ced1461035d57806360c7dc47146103705780636fd4f22914610379576101fb565b80634dfc2a34146102e557806350005b83146102f85780635aa6e675146103245780635b5edcfc14610337576101fb565b80632b6696a7116101ce5780632b6696a71461028f5780633321fc41146102c15780633878293e146102ca578063460c33a2146102dd576101fb565b80630636769e1461020057806310fe9ae81461021557806311938e081461023f57806314c2a1bc14610287575b600080fd5b61021361020e366004611957565b61056a565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61027961024d3660046119aa565b6001600160a01b0391909116600090815260076020908152604080832093835260059093019052205490565b604051908152602001610236565b600354610279565b6102a261029d366004611ab0565b610648565b604080516001600160a01b039093168352901515602083015201610236565b61027960045481565b6102796102d8366004611957565b61072f565b600454610279565b6102796102f3366004611978565b610751565b610279610306366004611957565b6001600160a01b031660009081526007602052604090206003015490565b600154610222906001600160a01b031681565b610213610345366004611ab0565b6109f5565b6102136103583660046119f3565b610c83565b61021361036b366004611a0b565b610d43565b61027960025481565b61027960055481565b600254610279565b6001546001600160a01b0316610222565b6103e16103a9366004611957565b6001600160a01b0316600090815260076020526040902080546001820154600283015460038401546004909401549294919390929091565b604080519586526020860194909452928401919091526060830152608082015260a001610236565b6102796104173660046119f3565b60009081526006602052604090205490565b6102136104373660046119f3565b61108e565b61027961044a366004611ab0565b60009182526006602090815260408084209284526002909201905290205490565b61027960035481565b610279610482366004611ab0565b60009182526006602090815260408084209284526001909201905290205490565b6104b66104b13660046119f3565b611182565b6040516102369190611c24565b61021361126f565b600554610279565b6104b66104e1366004611ab0565b6113f3565b6102136104f43660046119f3565b6114a4565b6102136105073660046119f3565b611562565b61027961051a366004611ab0565b61176b565b61022261052d366004611ab0565b6000918252600660209081526040808420928452600490920190529020546001600160a01b031690565b600054610222906001600160a01b031681565b6001546001600160a01b0316331461059d5760405162461bcd60e51b815260040161059490611c37565b60405180910390fd5b6001600160a01b0381166105f35760405162461bcd60e51b815260206004820152601b60248201527f6d7573742073657420676f7665726e616e6365206164647265737300000000006044820152606401610594565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f682527aafb5b7e86077049b38534cd433dd39d523b92b0455dab09a16dc0a7db906020015b60405180910390a150565b6000828152600660209081526040808320848452600101909152812054819081901580156106ce5750604080516020808201835260009182905287825260068152828220878352600301905281902090517fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470916106c491611b1c565b6040518091039020145b80156106fe575060008581526006602090815260408083208784526004019091529020546001600160a01b031615155b60009586526006602090815260408088209688526004909601905293909420546001600160a01b0316949293505050565b6001600160a01b0381166000908152600760205260409020600401545b919050565b6001546000906001600160a01b031633146107b95760405162461bcd60e51b815260206004820152602260248201527f6f6e6c7920676f7665726e616e63652063616e20736c617368207265706f727460448201526132b960f11b6064820152608401610594565b6001600160a01b0383166000908152600760205260408120600281015460018201549192916107e89190611c78565b1161082b5760405162461bcd60e51b81526020600482015260136024820152727a65726f207374616b65722062616c616e636560681b6044820152606401610594565b60006002548260020154106108605760025490506002548260020160008282546108559190611ccf565b9091555061091b9050565b600254826001015483600201546108779190611c78565b106108db5750600280549082015461088f9082611ccf565b8260010160008282546108a29190611ccf565b909155505060028083015490546108b99190611ccf565b600360008282546108ca9190611ccf565b90915550506000600283015561091b565b816002015482600101546108ef9190611c78565b90508160010154600360008282546109079190611ccf565b909155505060006001830181905560028301555b60005460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b15801561096957600080fd5b505af115801561097d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a191906119d3565b50604080516001600160a01b038088168252861660208201529081018290527f4317784407a22e643706ef000f5c0eea399dea3632613786167ab71c9446e3ac9060600160405180910390a1949350505050565b6001546001600160a01b03163314610a1f5760405162461bcd60e51b815260040161059490611c37565b600082815260066020908152604080832084845260018101909252909120548154829082908110610a6057634e487b7160e01b600052603260045260246000fd5b90600052602060002001548314610aad5760405162461bcd60e51b81526020600482015260116024820152700696e76616c69642074696d657374616d7607c1b6044820152606401610594565b805b8254610abd90600190611ccf565b811015610b955782610ad0826001611c78565b81548110610aee57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154836000018281548110610b1c57634e487b7160e01b600052603260045260246000fd5b90600052602060002001819055506001836001016000856000018481548110610b5557634e487b7160e01b600052603260045260246000fd5b906000526020600020015481526020019081526020016000206000828254610b7d9190611ccf565b90915550819050610b8d81611d21565b915050610aaf565b5081548290610ba690600190611ccf565b81548110610bc457634e487b7160e01b600052603260045260246000fd5b60009182526020822001558154829080610bee57634e487b7160e01b600052603160045260246000fd5b600082815260208082208301600019908101839055909201909255604080518083018083528482528785526003870190935292209151610c2f9291906117ac565b50600083815260018301602090815260408083209290925581518681529081018590527fb326db0e54476c677e2b35b75856ac6f4d8bbfb0a6de6690582ebe4dabce0de7910160405180910390a150505050565b6001546001600160a01b03163314610cad5760405162461bcd60e51b815260040161059490611c37565b60008111610d0e5760405162461bcd60e51b815260206004820152602860248201527f7265706f7274696e67206c6f636b206d7573742062652067726561746572207460448201526768616e207a65726f60c01b6064820152608401610594565b60048190556040518181527f15585049a76f383bbfc7c421ee17aeb528a0947dc478a0c796166239a452ba579060200161063d565b60008581526006602052604090208054831480610d5e575082155b610daa5760405162461bcd60e51b815260206004820181905260248201527f6e6f6e6365206d757374206d617463682074696d657374616d7020696e6465786044820152606401610594565b33600090815260076020526040902060025460018201541015610e215760405162461bcd60e51b815260206004820152602960248201527f62616c616e6365206d7573742062652067726561746572207468616e207374616044820152681ad948185b5bdd5b9d60ba1b6064820152608401610594565b6002548160010154610e339190611c90565b600454610e42906103e8611cb0565b610e4c9190611c90565b6003820154610e5b9042611ccf565b610e67906103e8611cb0565b11610ec65760405162461bcd60e51b815260206004820152602960248201527f7374696c6c20696e207265706f727465722074696d65206c6f636b2c20706c6560448201526861736520776169742160b81b6064820152608401610594565b82516020840120871480610edb575060648711155b610f275760405162461bcd60e51b815260206004820152601d60248201527f6964206d7573742062652068617368206f6620627974657320646174610000006044820152606401610594565b426003820181905560009081526004830160205260409020546001600160a01b031615610f965760405162461bcd60e51b815260206004820152601e60248201527f74696d657374616d7020616c7265616479207265706f7274656420666f7200006044820152606401610594565b81544260008181526001808601602090815260408084208690559185018755868352808320909401839055918152600285018352818120439055600385019092529020610fe4908787611830565b5042600081815260048085016020526040822080546001600160a01b0319163317905560059290925590820180549161101c83611d21565b90915550506000878152600582016020526040812080549161103d83611d21565b91905055507f48e9e2c732ba278de6ac88a3a57a5c5ba13d3d8370e709b3b98333a57876ca958742888888883360405161107d9796959493929190611bb7565b60405180910390a150505050505050565b33600090815260076020526040902060018101548211156110f15760405162461bcd60e51b815260206004820152601b60248201527f696e73756666696369656e74207374616b65642062616c616e636500000000006044820152606401610594565b42815560028101805483919060009061110b908490611c78565b92505081905550818160010160008282546111269190611ccf565b92505081905550816003600082825461113f9190611ccf565b909155505060408051338152602081018490527f3d8d9df4bd0172df32e557fa48e96435cd7f2cac06aaffacfaee608e6f7898ef91015b60405180910390a15050565b60008181526006602052604081208054606092600383019290916111a890600190611ccf565b815481106111c657634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002080546111ea90611ce6565b80601f016020809104026020016040519081016040528092919081815260200182805461121690611ce6565b80156112635780601f1061123857610100808354040283529160200191611263565b820191906000526020600020905b81548152906001019060200180831161124657829003601f168201915b50505050509050919050565b336000908152600760205260409020805462093a809061128f9042611ccf565b10156112d25760405162461bcd60e51b8152602060048201526012602482015271372064617973206469646e2774207061737360701b6044820152606401610594565b60008160020154116113315760405162461bcd60e51b815260206004820152602260248201527f7265706f72746572206e6f74206c6f636b656420666f72207769746864726177604482015261185b60f21b6064820152608401610594565b600054600282015460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561138357600080fd5b505af1158015611397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bb91906119d3565b50600060028201556040513381527f4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec9060200161063d565b6000828152600660209081526040808320848452600301909152902080546060919061141e90611ce6565b80601f016020809104026020016040519081016040528092919081815260200182805461144a90611ce6565b80156114975780601f1061146c57610100808354040283529160200191611497565b820191906000526020600020905b81548152906001019060200180831161147a57829003601f168201915b5050505050905092915050565b6001546001600160a01b031633146114ce5760405162461bcd60e51b815260040161059490611c37565b6000811161152d5760405162461bcd60e51b815260206004820152602660248201527f7374616b6520616d6f756e74206d7573742062652067726561746572207468616044820152656e207a65726f60d01b6064820152608401610594565b60028190556040518181527f1af37d6aaef3c5ef293c3c63d0ac302f60db7fde22eb9f5e96ebd569928321109060200161063d565b33600090815260076020526040902060028101541561166a57818160020154106115a5578181600201600082825461159a9190611ccf565b909155506116659050565b60005460028201546001600160a01b03909116906323b872dd90339030906115cd9087611ccf565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561161c57600080fd5b505af1158015611630573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165491906119d3565b61165d57600080fd5b600060028201555b6116fd565b6000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156116bc57600080fd5b505af11580156116d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f491906119d3565b6116fd57600080fd5b428155600181018054839190600090611717908490611c78565b9250508190555081600360008282546117309190611c78565b909155505060408051338152602081018490527fa96c2cce65119a2170d1711a6e82f18f2006448828483ba7545e5954765436479101611176565b600082815260066020526040812080548390811061179957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b8280546117b890611ce6565b90600052602060002090601f0160209004810192826117da5760008555611820565b82601f106117f357805160ff1916838001178555611820565b82800160010185558215611820579182015b82811115611820578251825591602001919060010190611805565b5061182c9291506118a4565b5090565b82805461183c90611ce6565b90600052602060002090601f01602090048101928261185e5760008555611820565b82601f106118775782800160ff19823516178555611820565b82800160010185558215611820579182015b82811115611820578235825591602001919060010190611889565b5b8082111561182c57600081556001016118a5565b80356001600160a01b038116811461074c57600080fd5b600082601f8301126118e0578081fd5b813567ffffffffffffffff808211156118fb576118fb611d52565b604051601f8301601f19908116603f0116810190828211818310171561192357611923611d52565b8160405283815286602085880101111561193b578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611968578081fd5b611971826118b9565b9392505050565b6000806040838503121561198a578081fd5b611993836118b9565b91506119a1602084016118b9565b90509250929050565b600080604083850312156119bc578182fd5b6119c5836118b9565b946020939093013593505050565b6000602082840312156119e4578081fd5b81518015158114611971578182fd5b600060208284031215611a04578081fd5b5035919050565b600080600080600060808688031215611a22578081fd5b85359450602086013567ffffffffffffffff80821115611a40578283fd5b818801915088601f830112611a53578283fd5b813581811115611a61578384fd5b896020828501011115611a72578384fd5b60208301965080955050604088013593506060880135915080821115611a96578283fd5b50611aa3888289016118d0565b9150509295509295909350565b60008060408385031215611ac2578182fd5b50508035926020909101359150565b60008151808452815b81811015611af657602081850181015186830182015201611ada565b81811115611b075782602083870101525b50601f01601f19169290920160200192915050565b600080835482600182811c915080831680611b3857607f831692505b6020808410821415611b5857634e487b7160e01b87526022600452602487fd5b818015611b6c5760018114611b7d57611ba9565b60ff19861689528489019650611ba9565b60008a815260209020885b86811015611ba15781548b820152908501908301611b88565b505084890196505b509498975050505050505050565b600088825287602083015260c060408301528560c0830152858760e08401378060e08784010152601f19601f870116820185606084015260e0838203016080840152611c0660e0820186611ad1565b9150506001600160a01b03831660a083015298975050505050505050565b6000602082526119716020830184611ad1565b60208082526021908201527f63616c6c6572206d75737420626520676f7665726e616e6365206164647265736040820152607360f81b606082015260800190565b60008219821115611c8b57611c8b611d3c565b500190565b600082611cab57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611cca57611cca611d3c565b500290565b600082821015611ce157611ce1611d3c565b500390565b600181811c90821680611cfa57607f821691505b60208210811415611d1b57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611d3557611d35611d3c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122086944903ad045b119ab3fe11e3834da1309096fb2119975569503be54ff38c3564736f6c63430008030033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE TIMESTAMP PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1F3D CODESIZE SUB DUP1 PUSH3 0x1F3D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x38 SWAP2 PUSH3 0x148 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D7573742073657420746F6B656E206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0xEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D7573742073657420676F7665726E616E636520616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x8B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP5 SWAP1 SWAP6 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x2 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x4 SSTORE PUSH3 0x18F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x15E JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x169 DUP6 PUSH3 0x12B JUMP JUMPDEST SWAP4 POP PUSH3 0x179 PUSH1 0x20 DUP7 ADD PUSH3 0x12B JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1D9E DUP1 PUSH3 0x19F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x722580B6 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xADF1639D GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCA79B5A9 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCA79B5A9 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0xCB82CC8F EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xCE5E11BF EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xE07C5486 EQ PUSH2 0x51F JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x557 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xADF1639D EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xBED9D861 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xC0F95D52 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xC5958AF9 EQ PUSH2 0x4D3 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x8929F4C6 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8929F4C6 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x935408D0 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x94409A56 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x9D9B16ED EQ PUSH2 0x474 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x722580B6 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x73252494 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x733BDEF0 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x77B03E0D EQ PUSH2 0x409 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x4DFC2A34 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x5D183CFA GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x5D183CFA EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x5EAA9CED EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x60C7DC47 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x6FD4F229 EQ PUSH2 0x379 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x4DFC2A34 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x50005B83 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x5B5EDCFC EQ PUSH2 0x337 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x2B6696A7 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x2B6696A7 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x3321FC41 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x3878293E EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x460C33A2 EQ PUSH2 0x2DD JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x636769E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x10FE9AE8 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x11938E08 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x14C2A1BC EQ PUSH2 0x287 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x279 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB0 JUMP JUMPDEST PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x236 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x279 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x222 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB0 JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0B JUMP JUMPDEST PUSH2 0xD43 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x279 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x222 JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x236 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x417 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x108E JUMP JUMPDEST PUSH2 0x279 PUSH2 0x44A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x482 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4B6 PUSH2 0x4B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x279 JUMP JUMPDEST PUSH2 0x4B6 PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB0 JUMP JUMPDEST PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x4F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x14A4 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x507 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x1562 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x51A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB0 JUMP JUMPDEST PUSH2 0x176B JUMP JUMPDEST PUSH2 0x222 PUSH2 0x52D CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x222 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x59D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D7573742073657420676F7665726E616E636520616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x682527AAFB5B7E86077049B38534CD433DD39D523B92B0455DAB09A16DC0A7DB SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 ISZERO DUP1 ISZERO PUSH2 0x6CE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE DUP8 DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP8 DUP4 MSTORE PUSH1 0x3 ADD SWAP1 MSTORE DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP2 PUSH2 0x6C4 SWAP2 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST DUP1 ISZERO PUSH2 0x6FE JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x4 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP9 KECCAK256 SWAP7 DUP9 MSTORE PUSH1 0x4 SWAP1 SWAP7 ADD SWAP1 MSTORE SWAP4 SWAP1 SWAP5 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920676F7665726E616E63652063616E20736C617368207265706F7274 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x7E8 SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST GT PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x7A65726F207374616B65722062616C616E6365 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH1 0x2 ADD SLOAD LT PUSH2 0x860 JUMPI PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x2 SLOAD DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x855 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x91B SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 PUSH1 0x1 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x877 SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST LT PUSH2 0x8DB JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 DUP3 ADD SLOAD PUSH2 0x88F SWAP1 DUP3 PUSH2 0x1CCF JUMP JUMPDEST DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8A2 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 DUP4 ADD SLOAD SWAP1 SLOAD PUSH2 0x8B9 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0x91B JUMP JUMPDEST DUP2 PUSH1 0x2 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x97D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A1 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x4317784407A22E643706EF000F5C0EEA399DEA3632613786167AB71C9446E3AC SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP2 SLOAD DUP3 SWAP1 DUP3 SWAP1 DUP2 LT PUSH2 0xA60 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP4 EQ PUSH2 0xAAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x696E76616C69642074696D657374616D7 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST DUP1 JUMPDEST DUP3 SLOAD PUSH2 0xABD SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB95 JUMPI DUP3 PUSH2 0xAD0 DUP3 PUSH1 0x1 PUSH2 0x1C78 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xAEE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB1C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xB55 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB7D SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xB8D DUP2 PUSH2 0x1D21 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAAF JUMP JUMPDEST POP DUP2 SLOAD DUP3 SWAP1 PUSH2 0xBA6 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBC4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SSTORE DUP2 SLOAD DUP3 SWAP1 DUP1 PUSH2 0xBEE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 ADD DUP1 DUP4 MSTORE DUP5 DUP3 MSTORE DUP8 DUP6 MSTORE PUSH1 0x3 DUP8 ADD SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP2 MLOAD PUSH2 0xC2F SWAP3 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0xB326DB0E54476C677E2B35B75856AC6F4D8BBFB0A6DE6690582EBE4DABCE0DE7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xD0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7265706F7274696E67206C6F636B206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x68616E207A65726F PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x15585049A76F383BBFC7C421EE17AEB528A0947DC478A0C796166239A452BA57 SWAP1 PUSH1 0x20 ADD PUSH2 0x63D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 EQ DUP1 PUSH2 0xD5E JUMPI POP DUP3 ISZERO JUMPDEST PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F6E6365206D757374206D617463682074696D657374616D7020696E646578 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 SLOAD PUSH1 0x1 DUP3 ADD SLOAD LT ISZERO PUSH2 0xE21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62616C616E6365206D7573742062652067726561746572207468616E20737461 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1AD948185B5BDD5B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0xE33 SWAP2 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xE42 SWAP1 PUSH2 0x3E8 PUSH2 0x1CB0 JUMP JUMPDEST PUSH2 0xE4C SWAP2 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD PUSH2 0xE5B SWAP1 TIMESTAMP PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0xE67 SWAP1 PUSH2 0x3E8 PUSH2 0x1CB0 JUMP JUMPDEST GT PUSH2 0xEC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7374696C6C20696E207265706F727465722074696D65206C6F636B2C20706C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x617365207761697421 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD KECCAK256 DUP8 EQ DUP1 PUSH2 0xEDB JUMPI POP PUSH1 0x64 DUP8 GT ISZERO JUMPDEST PUSH2 0xF27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6964206D7573742062652068617368206F662062797465732064617461000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST TIMESTAMP PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xF96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74696D657374616D7020616C7265616479207265706F7274656420666F720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST DUP2 SLOAD TIMESTAMP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 SWAP1 SSTORE SWAP2 DUP6 ADD DUP8 SSTORE DUP7 DUP4 MSTORE DUP1 DUP4 KECCAK256 SWAP1 SWAP5 ADD DUP4 SWAP1 SSTORE SWAP2 DUP2 MSTORE PUSH1 0x2 DUP6 ADD DUP4 MSTORE DUP2 DUP2 KECCAK256 NUMBER SWAP1 SSTORE PUSH1 0x3 DUP6 ADD SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 PUSH2 0xFE4 SWAP1 DUP8 DUP8 PUSH2 0x1830 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 DUP3 ADD DUP1 SLOAD SWAP2 PUSH2 0x101C DUP4 PUSH2 0x1D21 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x103D DUP4 PUSH2 0x1D21 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x48E9E2C732BA278DE6AC88A3A57A5C5BA13D3D8370E709B3B98333A57876CA95 DUP8 TIMESTAMP DUP9 DUP9 DUP9 DUP9 CALLER PUSH1 0x40 MLOAD PUSH2 0x107D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP3 GT ISZERO PUSH2 0x10F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST TIMESTAMP DUP2 SSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x110B SWAP1 DUP5 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1126 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x113F SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x3D8D9DF4BD0172DF32E557FA48E96435CD7F2CAC06AAFFACFAEE608E6F7898EF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 PUSH1 0x3 DUP4 ADD SWAP3 SWAP1 SWAP2 PUSH2 0x11A8 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x11C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x11EA SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1216 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1263 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1238 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1263 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1246 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH3 0x93A80 SWAP1 PUSH2 0x128F SWAP1 TIMESTAMP PUSH2 0x1CCF JUMP JUMPDEST LT ISZERO PUSH2 0x12D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x372064617973206469646E27742070617373 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x1331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7265706F72746572206E6F74206C6F636B656420666F72207769746864726177 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x185B PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1397 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13BB SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x4A7934670BD8304E7DA22378BE1368F7C4FEF17C5AEE81804BEDA8638FE428EC SWAP1 PUSH1 0x20 ADD PUSH2 0x63D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x141E SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x144A SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1497 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x146C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1497 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x147A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x152D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7374616B6520616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E207A65726F PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x1AF37D6AAEF3C5EF293C3C63D0AC302F60DB7FDE22EB9F5E96EBD56992832110 SWAP1 PUSH1 0x20 ADD PUSH2 0x63D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD ISZERO PUSH2 0x166A JUMPI DUP2 DUP2 PUSH1 0x2 ADD SLOAD LT PUSH2 0x15A5 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x159A SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1665 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH2 0x15CD SWAP1 DUP8 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x161C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1630 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1654 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x165D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16F4 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x16FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1717 SWAP1 DUP5 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1730 SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xA96C2CCE65119A2170D1711A6E82F18F2006448828483BA7545E595476543647 SWAP2 ADD PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x1799 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x17B8 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x17DA JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1820 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x17F3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1820 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1820 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1820 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1805 JUMP JUMPDEST POP PUSH2 0x182C SWAP3 SWAP2 POP PUSH2 0x18A4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x183C SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x185E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1820 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1877 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x1820 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1820 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1820 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1889 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x182C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18A5 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18E0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18FB JUMPI PUSH2 0x18FB PUSH2 0x1D52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1923 JUMPI PUSH2 0x1923 PUSH2 0x1D52 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x193B JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP3 DUP4 ADD PUSH1 0x20 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1968 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1971 DUP3 PUSH2 0x18B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x198A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1993 DUP4 PUSH2 0x18B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A1 PUSH1 0x20 DUP5 ADD PUSH2 0x18B9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19BC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x19C5 DUP4 PUSH2 0x18B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1971 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A04 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A22 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A40 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A53 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1A61 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1A72 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP7 POP DUP1 SWAP6 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A96 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1AA3 DUP9 DUP3 DUP10 ADD PUSH2 0x18D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AC2 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AF6 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1ADA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1B07 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP3 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x1B38 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x1B58 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1B6C JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1B7D JUMPI PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP9 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1BA1 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x1B88 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP9 DUP3 MSTORE DUP8 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP4 ADD MSTORE DUP6 PUSH1 0xC0 DUP4 ADD MSTORE DUP6 DUP8 PUSH1 0xE0 DUP5 ADD CALLDATACOPY DUP1 PUSH1 0xE0 DUP8 DUP5 ADD ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP8 ADD AND DUP3 ADD DUP6 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 DUP3 SUB ADD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1C06 PUSH1 0xE0 DUP3 ADD DUP7 PUSH2 0x1AD1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1971 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206D75737420626520676F7665726E616E636520616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1C8B JUMPI PUSH2 0x1C8B PUSH2 0x1D3C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1CAB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CCA JUMPI PUSH2 0x1CCA PUSH2 0x1D3C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1CE1 JUMPI PUSH2 0x1CE1 PUSH2 0x1D3C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1CFA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1D1B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1D35 JUMPI PUSH2 0x1D35 PUSH2 0x1D3C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 SWAP5 0x49 SUB 0xAD DIV JUMPDEST GT SWAP11 0xB3 INVALID GT 0xE3 DUP4 0x4D LOG1 ADDRESS SWAP1 SWAP7 0xFB 0x21 NOT SWAP8 SSTORE PUSH10 0x503BE54FF38C3564736F PUSH13 0x63430008030033000000000000 ",
              "sourceMap": "449:19790:0:-:0;;;832:15;796:51;;3082:422;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3233:20:0;;3225:55;;;;-1:-1:-1;;;3225:55:0;;1185:2:2;3225:55:0;;;1167:21:2;1224:2;1204:18;;;1197:30;1263:24;1243:18;;;1236:52;1305:18;;3225:55:0;;;;;;;;;-1:-1:-1;;;;;3298:25:0;;3290:65;;;;-1:-1:-1;;;3290:65:0;;829:2:2;3290:65:0;;;811:21:2;868:2;848:18;;;841:30;907:29;887:18;;;880:57;954:18;;3290:65:0;801:177:2;3290:65:0;3365:5;:22;;-1:-1:-1;;;;;3365:22:0;;;-1:-1:-1;;;;;;3365:22:0;;;;;;;;3397:24;;;;;;;;;;;;;;;3431:11;:26;;;;3467:13;:30;449:19790;;14:177:2;93:13;;-1:-1:-1;;;;;135:31:2;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:426::-;;;;;370:3;358:9;349:7;345:23;341:33;338:2;;;392:6;384;377:22;338:2;420:40;450:9;420:40;:::i;:::-;410:50;;479:49;524:2;513:9;509:18;479:49;:::i;:::-;568:2;553:18;;547:25;612:2;597:18;;;591:25;328:294;;469:59;;-1:-1:-1;328:294:2;-1:-1:-1;;;328:294:2:o;1157:172::-;449:19790:0;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:15997:2",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "63:147:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "73:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:20:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:5:2"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "188:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "197:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "200:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "190:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "190:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "190:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "124:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "135:5:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "142:42:2",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "131:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "131:54:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "121:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "121:65:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "114:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "114:73:2"
                              },
                              "nodeType": "YulIf",
                              "src": "111:2:2"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "42:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:2",
                            "type": ""
                          }
                        ],
                        "src": "14:196:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "267:686:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "316:24:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "325:5:2"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "332:5:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "318:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "318:20:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "318:20:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "295:6:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "303:4:2",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "291:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "291:17:2"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "310:3:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "287:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "287:27:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "280:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "280:35:2"
                              },
                              "nodeType": "YulIf",
                              "src": "277:2:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "349:30:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "372:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "359:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "359:20:2"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "353:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "388:28:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "398:18:2",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "392:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "439:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "441:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "441:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "441:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "431:2:2"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "435:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "428:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "428:10:2"
                              },
                              "nodeType": "YulIf",
                              "src": "425:2:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "470:17:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "484:2:2",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "480:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "480:7:2"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "474:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "496:23:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "516:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "510:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "510:9:2"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "500:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "528:71:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "550:6:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "574:2:2"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "578:4:2",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "570:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "570:13:2"
                                              },
                                              {
                                                "name": "_3",
                                                "nodeType": "YulIdentifier",
                                                "src": "585:2:2"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "566:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "566:22:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "590:2:2",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "562:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "562:31:2"
                                      },
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "595:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "558:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "558:40:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "546:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "546:53:2"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "532:10:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "658:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "660:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "660:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "660:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "617:10:2"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "629:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "614:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "614:18:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "637:10:2"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "649:6:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "634:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "634:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "611:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "611:46:2"
                              },
                              "nodeType": "YulIf",
                              "src": "608:2:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "696:2:2",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "700:10:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "689:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "689:22:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "689:22:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "727:6:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "735:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "720:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "720:18:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "720:18:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "786:24:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "795:5:2"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "802:5:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "788:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "788:20:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "788:20:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "761:6:2"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "769:2:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "757:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "757:15:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "774:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "753:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "753:26:2"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "781:3:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "750:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "750:35:2"
                              },
                              "nodeType": "YulIf",
                              "src": "747:2:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "836:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "844:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "832:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "832:17:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "855:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "863:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "851:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "851:17:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "870:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "819:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "819:54:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "819:54:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nodeType": "YulIdentifier",
                                            "src": "897:6:2"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "905:2:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "893:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "893:15:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "910:4:2",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "889:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "889:26:2"
                                  },
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "917:5:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "882:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "882:41:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "882:41:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "932:15:2",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "941:6:2"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "932:5:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_bytes",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "241:6:2",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "249:3:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "257:5:2",
                            "type": ""
                          }
                        ],
                        "src": "215:738:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1028:126:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1074:26:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1083:6:2"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1091:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1076:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1076:22:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1076:22:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1049:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1058:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1045:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1045:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1070:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1041:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1041:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1038:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1109:39:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1138:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1119:18:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1119:29:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1109:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "994:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1005:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1017:6:2",
                            "type": ""
                          }
                        ],
                        "src": "958:196:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1246:183:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1292:26:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1301:6:2"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1309:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1294:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1294:22:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1294:22:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1267:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1276:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1263:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1263:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1288:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1259:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1259:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1256:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1327:39:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1356:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1337:18:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1337:29:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1327:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1375:48:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1408:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1419:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1404:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1404:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1385:18:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1385:38:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1375:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1204:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1215:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1227:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1235:6:2",
                            "type": ""
                          }
                        ],
                        "src": "1159:270:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1521:177:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1567:26:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1576:6:2"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1584:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1569:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1569:22:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1569:22:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1542:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1551:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1538:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1538:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1563:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1534:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1534:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1531:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1602:39:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1631:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1612:18:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1612:29:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1602:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1650:42:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1677:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1688:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1673:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1673:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1660:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1660:32:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1650:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1479:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1490:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1502:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1510:6:2",
                            "type": ""
                          }
                        ],
                        "src": "1434:264:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1781:219:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1827:26:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1836:6:2"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1844:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1829:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1829:22:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1829:22:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1802:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1811:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1798:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1798:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1823:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1794:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1794:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1791:2:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1862:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1881:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1875:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1875:16:2"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "1866:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1944:26:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1953:6:2"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1961:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1946:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1946:22:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1946:22:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1913:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "1934:5:2"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "1927:6:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1927:13:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1920:6:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1920:21:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1910:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1910:32:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1903:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1903:40:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1900:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1979:15:2",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1989:5:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1979:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1747:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1758:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1770:6:2",
                            "type": ""
                          }
                        ],
                        "src": "1703:297:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2075:120:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2121:26:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2130:6:2"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2138:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2123:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2123:22:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2123:22:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2096:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2105:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2092:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2092:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2117:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2088:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2088:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2085:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2156:33:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2179:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2166:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2166:23:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2156:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2041:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2052:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2064:6:2",
                            "type": ""
                          }
                        ],
                        "src": "2005:190:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2349:837:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2396:26:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2405:6:2"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2413:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2398:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2398:22:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2398:22:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2370:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2379:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2366:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2366:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2391:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2362:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2362:33:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2359:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2431:33:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2454:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2441:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2441:23:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2431:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2473:46:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2504:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2515:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2500:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2500:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2487:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2487:32:2"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "2477:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2528:28:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2538:18:2",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2532:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2583:26:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2592:6:2"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2600:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2585:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2585:22:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2585:22:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2571:6:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2579:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2568:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2568:14:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2565:2:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2618:32:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2632:9:2"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2643:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2628:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2628:22:2"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "2622:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2698:26:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2707:6:2"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2715:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2700:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2700:22:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2700:22:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "2677:2:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2681:4:2",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2673:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2673:13:2"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2688:7:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2669:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2669:27:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2662:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2662:35:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2659:2:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2733:30:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "2760:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2747:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2747:16:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "2737:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2790:26:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2799:6:2"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2807:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2792:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2792:22:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2792:22:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2778:6:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2786:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2775:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2775:14:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2772:2:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2866:26:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2875:6:2"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2883:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2868:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2868:22:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2868:22:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "2839:2:2"
                                          },
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "2843:6:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2835:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2835:15:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2852:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2831:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2831:24:2"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2857:7:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2828:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2828:37:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2825:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2901:21:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "2915:2:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2919:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2911:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2911:11:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2901:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2931:16:2",
                              "value": {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2941:6:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2931:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2956:42:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2983:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2994:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2979:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2979:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2966:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2966:32:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2956:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3007:48:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3040:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3051:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3036:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3036:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3023:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3023:32:2"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3011:8:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3084:26:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "3093:6:2"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "3101:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3086:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3086:22:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3086:22:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3070:8:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3080:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3067:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3067:16:2"
                              },
                              "nodeType": "YulIf",
                              "src": "3064:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3119:61:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3150:9:2"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3161:8:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3146:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3146:24:2"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3172:7:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "3129:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3129:51:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "3119:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_bytes_calldata_ptrt_uint256t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2283:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2294:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2306:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2314:6:2",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2322:6:2",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2330:6:2",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "2338:6:2",
                            "type": ""
                          }
                        ],
                        "src": "2200:986:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3278:171:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3324:26:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3333:6:2"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3341:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3326:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3326:22:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3326:22:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3299:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3308:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3295:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3295:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3320:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3291:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3291:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "3288:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3359:33:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3382:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3369:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3369:23:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3359:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3401:42:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3428:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3439:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3424:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3424:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3411:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3411:32:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3401:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3236:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3247:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3259:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3267:6:2",
                            "type": ""
                          }
                        ],
                        "src": "3191:258:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3524:120:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3570:26:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3579:6:2"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3587:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3572:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3572:22:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3572:22:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3545:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3554:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3541:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3541:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3566:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3537:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3537:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "3534:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3605:33:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3628:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3615:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3615:23:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3605:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3490:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3501:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3513:6:2",
                            "type": ""
                          }
                        ],
                        "src": "3454:190:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3698:426:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3708:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3728:5:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3722:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3722:12:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "3712:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3750:3:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3755:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3743:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3743:19:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3743:19:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3771:12:2",
                              "value": {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "3780:3:2"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "3775:1:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3844:110:2",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "3858:14:2",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3868:4:2",
                                      "type": "",
                                      "value": "0x20"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulTypedName",
                                        "src": "3862:2:2",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "pos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3900:3:2"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3905:1:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "3896:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3896:11:2"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "3909:2:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "3892:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3892:20:2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3928:5:2"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "3935:1:2"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3924:3:2"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "3924:13:2"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3939:2:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "3920:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3920:22:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "3914:5:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3914:29:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3885:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3885:59:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3885:59:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "3803:1:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3806:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3800:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3800:13:2"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "3814:21:2",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3816:17:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3825:1:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3828:4:2",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3821:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3821:12:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "3816:1:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "3796:3:2",
                                "statements": []
                              },
                              "src": "3792:162:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3988:64:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "pos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4017:3:2"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4022:6:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "4013:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4013:16:2"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4031:4:2",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4009:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4009:27:2"
                                        },
                                        {
                                          "name": "end",
                                          "nodeType": "YulIdentifier",
                                          "src": "4038:3:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4002:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4002:40:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4002:40:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "3969:1:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3972:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3966:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3966:13:2"
                              },
                              "nodeType": "YulIf",
                              "src": "3963:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4061:57:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "4076:3:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "4089:6:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4097:2:2",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4085:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4085:15:2"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4106:2:2",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "4102:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4102:7:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "4081:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4081:29:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4072:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4072:39:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4113:4:2",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4068:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4068:50:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4061:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_bytes",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3675:5:2",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3682:3:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3690:3:2",
                            "type": ""
                          }
                        ],
                        "src": "3649:475:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4263:966:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4273:14:2",
                              "value": {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "4284:3:2"
                              },
                              "variables": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulTypedName",
                                  "src": "4277:3:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4296:30:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4319:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "sload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4313:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4313:13:2"
                              },
                              "variables": [
                                {
                                  "name": "slotValue",
                                  "nodeType": "YulTypedName",
                                  "src": "4300:9:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4335:17:2",
                              "value": {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "4349:3:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "4339:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4361:11:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4371:1:2",
                                "type": "",
                                "value": "1"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4365:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4381:28:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4395:2:2"
                                  },
                                  {
                                    "name": "slotValue",
                                    "nodeType": "YulIdentifier",
                                    "src": "4399:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "4391:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4391:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "4381:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4418:44:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "slotValue",
                                    "nodeType": "YulIdentifier",
                                    "src": "4448:9:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4459:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4444:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4444:18:2"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "4422:18:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4501:31:2",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "4503:27:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "4517:6:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4525:4:2",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "4513:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4513:17:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "4503:6:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "4481:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4474:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4474:26:2"
                              },
                              "nodeType": "YulIf",
                              "src": "4471:2:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4541:12:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4551:2:2",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "4545:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4612:115:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "end",
                                          "nodeType": "YulIdentifier",
                                          "src": "4633:3:2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4642:3:2",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4647:10:2",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "4638:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4638:20:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4626:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4626:33:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4626:33:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4679:1:2",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4682:4:2",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4672:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4672:15:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4672:15:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "end",
                                          "nodeType": "YulIdentifier",
                                          "src": "4707:3:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4712:4:2",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4700:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4700:17:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4700:17:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "4568:18:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "4591:6:2"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "4599:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "4588:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4588:14:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "4565:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4565:38:2"
                              },
                              "nodeType": "YulIf",
                              "src": "4562:2:2"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "4777:97:2",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "4798:3:2"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "slotValue",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4807:9:2"
                                                },
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "4822:3:2",
                                                      "type": "",
                                                      "value": "255"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "not",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4818:3:2"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "4818:8:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "and",
                                                "nodeType": "YulIdentifier",
                                                "src": "4803:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "4803:24:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "4791:6:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4791:37:2"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "4791:37:2"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "4841:23:2",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "4852:3:2"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "4857:6:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4848:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4848:16:2"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "ret",
                                            "nodeType": "YulIdentifier",
                                            "src": "4841:3:2"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "4770:104:2",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4775:1:2",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "4890:314:2",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "4904:51:2",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "value0",
                                              "nodeType": "YulIdentifier",
                                              "src": "4948:6:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_bytes_storage",
                                            "nodeType": "YulIdentifier",
                                            "src": "4919:28:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4919:36:2"
                                        },
                                        "variables": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulTypedName",
                                            "src": "4908:7:2",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "4968:12:2",
                                        "value": {
                                          "name": "end",
                                          "nodeType": "YulIdentifier",
                                          "src": "4977:3:2"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulTypedName",
                                            "src": "4972:1:2",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "5047:111:2",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "pos",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "5076:3:2"
                                                      },
                                                      {
                                                        "name": "i",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "5081:1:2"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5072:3:2"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "5072:11:2"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "dataPos",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "5091:7:2"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "sload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "5085:5:2"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "5085:14:2"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5065:6:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "5065:35:2"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "5065:35:2"
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "5117:27:2",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dataPos",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5132:7:2"
                                                  },
                                                  {
                                                    "name": "_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5141:2:2"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5128:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "5128:16:2"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dataPos",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5117:7:2"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "5004:1:2"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "5007:6:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "5001:2:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5001:13:2"
                                        },
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nodeType": "YulBlock",
                                          "src": "5015:19:2",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "5017:15:2",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5026:1:2"
                                                  },
                                                  {
                                                    "name": "_2",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "5029:2:2"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5022:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "5022:10:2"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "5017:1:2"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nodeType": "YulBlock",
                                          "src": "4997:3:2",
                                          "statements": []
                                        },
                                        "src": "4993:165:2"
                                      },
                                      {
                                        "nodeType": "YulAssignment",
                                        "src": "5171:23:2",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "5182:3:2"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "5187:6:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5178:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5178:16:2"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "ret",
                                            "nodeType": "YulIdentifier",
                                            "src": "5171:3:2"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "4883:321:2",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4888:1:2",
                                    "type": "",
                                    "value": "1"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "4743:18:2"
                              },
                              "nodeType": "YulSwitch",
                              "src": "4736:468:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5213:10:2",
                              "value": {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "5220:3:2"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5213:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_storage__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4239:3:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4244:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4255:3:2",
                            "type": ""
                          }
                        ],
                        "src": "4129:1100:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5335:125:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5345:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5357:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5368:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5353:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5353:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5345:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5387:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5402:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5410:42:2",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5398:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5398:55:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5380:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5380:74:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5380:74:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5304:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5315:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5326:4:2",
                            "type": ""
                          }
                        ],
                        "src": "5234:226:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5622:241:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5632:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5644:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5655:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5640:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5640:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5632:4:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5667:52:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5677:42:2",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5671:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5735:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5750:6:2"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5758:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5746:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5746:15:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5728:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5728:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5728:34:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5782:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5793:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5778:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5778:18:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5802:6:2"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5810:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5798:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5798:15:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5771:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5771:43:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5771:43:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5834:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5845:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5830:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5830:18:2"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5850:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5823:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5823:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5823:34:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5575:9:2",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5586:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5594:6:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5602:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5613:4:2",
                            "type": ""
                          }
                        ],
                        "src": "5465:398:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5991:184:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6001:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6013:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6024:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6009:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6009:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6001:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6043:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6058:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6066:42:2",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6054:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6054:55:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6036:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6036:74:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6036:74:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6130:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6141:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6126:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6126:18:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value1",
                                            "nodeType": "YulIdentifier",
                                            "src": "6160:6:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "6153:6:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6153:14:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "6146:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6146:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6119:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6119:50:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6119:50:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5952:9:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5963:6:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5971:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5982:4:2",
                            "type": ""
                          }
                        ],
                        "src": "5868:307:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6309:168:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6319:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6331:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6342:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6327:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6327:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6319:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6361:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6376:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6384:42:2",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6372:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6372:55:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6354:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6354:74:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6354:74:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6448:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6459:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6444:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6444:18:2"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6464:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6437:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6437:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6437:34:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6270:9:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6281:6:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6289:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6300:4:2",
                            "type": ""
                          }
                        ],
                        "src": "6180:297:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6611:119:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6621:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6633:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6644:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6629:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6629:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6621:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6663:9:2"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6674:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6656:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6656:25:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6656:25:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6701:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6712:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6697:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6697:18:2"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6717:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6690:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6690:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6690:34:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6572:9:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6583:6:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6591:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6602:4:2",
                            "type": ""
                          }
                        ],
                        "src": "6482:248:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7022:602:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7039:9:2"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7050:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7032:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7032:25:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7032:25:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7077:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7088:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7073:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7073:18:2"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7093:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7066:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7066:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7066:34:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7120:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7131:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7116:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7116:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7136:3:2",
                                    "type": "",
                                    "value": "192"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7109:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7109:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7109:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7160:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7171:3:2",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7156:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7156:19:2"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "7177:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7149:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7149:35:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7149:35:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7210:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7221:3:2",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7206:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7206:19:2"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "7227:6:2"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "7235:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "7193:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7193:49:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7193:49:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "7266:9:2"
                                          },
                                          {
                                            "name": "value3",
                                            "nodeType": "YulIdentifier",
                                            "src": "7277:6:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7262:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7262:22:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7286:3:2",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7258:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7258:32:2"
                                  },
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "7292:4:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7251:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7251:46:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7251:46:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7306:55:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7320:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value3",
                                            "nodeType": "YulIdentifier",
                                            "src": "7339:6:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7347:2:2",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "7335:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7335:15:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7356:2:2",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "7352:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7352:7:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "7331:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7331:29:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7316:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7316:45:2"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7310:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7381:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7392:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7377:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7377:18:2"
                                  },
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "7397:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7370:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7370:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7370:34:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7424:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7435:3:2",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7420:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7420:19:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "7449:2:2"
                                          },
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "7453:9:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "7445:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7445:18:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7465:3:2",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7441:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7441:28:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7413:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7413:57:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7413:57:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7479:46:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "7504:6:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7516:2:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7520:3:2",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7512:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7512:12:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "7487:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7487:38:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7479:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7545:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7556:3:2",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7541:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7541:19:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value6",
                                        "nodeType": "YulIdentifier",
                                        "src": "7566:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7574:42:2",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "7562:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7562:55:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7534:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7534:84:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7534:84:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32_t_uint256_t_bytes_calldata_ptr_t_uint256_t_bytes_memory_ptr_t_address__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256_t_bytes_memory_ptr_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6943:9:2",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "6954:6:2",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "6962:6:2",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "6970:6:2",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "6978:6:2",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "6986:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6994:6:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7002:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7013:4:2",
                            "type": ""
                          }
                        ],
                        "src": "6735:889:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7748:98:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7765:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7776:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7758:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7758:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7758:21:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7788:52:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7813:6:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7825:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7836:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7821:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7821:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "7796:16:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7796:44:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7788:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7717:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7728:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7739:4:2",
                            "type": ""
                          }
                        ],
                        "src": "7629:217:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7967:125:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7977:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7989:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8000:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7985:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7985:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7977:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8019:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "8034:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8042:42:2",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "8030:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8030:55:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8012:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8012:74:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8012:74:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$1264__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7936:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7947:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7958:4:2",
                            "type": ""
                          }
                        ],
                        "src": "7851:241:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8271:224:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8288:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8299:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8281:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8281:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8281:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8322:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8333:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8318:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8318:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8338:2:2",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8311:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8311:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8311:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8361:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8372:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8357:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8357:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8377:34:2",
                                    "type": "",
                                    "value": "only governance can slash report"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8350:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8350:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8350:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8432:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8443:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8428:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8428:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8448:4:2",
                                    "type": "",
                                    "value": "er"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8421:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8421:32:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8421:32:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8462:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8474:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8485:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8470:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8470:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8462:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_23d2505d9b9a455858ac547072cc1fb48e6613ddf816d1d5af3621bf20b50229__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8248:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8262:4:2",
                            "type": ""
                          }
                        ],
                        "src": "8097:398:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8674:223:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8691:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8702:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8684:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8684:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8684:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8725:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8736:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8721:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8721:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8741:2:2",
                                    "type": "",
                                    "value": "33"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8714:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8714:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8714:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8764:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8775:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8760:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8760:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8780:34:2",
                                    "type": "",
                                    "value": "caller must be governance addres"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8753:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8753:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8753:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8835:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8846:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8831:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8831:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8851:3:2",
                                    "type": "",
                                    "value": "s"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8824:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8824:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8824:31:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8864:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8876:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8887:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8872:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8872:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8864:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_2fc6a9b17f3032be7c5732e8726a5ecef9cd40af648e6d6a8e6ccf2071f4a1cb__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8651:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8665:4:2",
                            "type": ""
                          }
                        ],
                        "src": "8500:397:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9076:179:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9093:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9104:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9086:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9086:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9086:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9127:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9138:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9123:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9123:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9143:2:2",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9116:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9116:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9116:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9166:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9177:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9162:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9162:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9182:31:2",
                                    "type": "",
                                    "value": "id must be hash of bytes data"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9155:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9155:59:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9155:59:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9223:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9235:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9246:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9231:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9231:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9223:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_365165a3cc331b03e63440264952201ac1cbb1ccd5c356779f410908d37b2f0f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9053:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9067:4:2",
                            "type": ""
                          }
                        ],
                        "src": "8902:353:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9434:167:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9451:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9462:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9444:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9444:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9444:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9485:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9496:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9481:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9481:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9501:2:2",
                                    "type": "",
                                    "value": "17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9474:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9474:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9474:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9524:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9535:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9520:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9520:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9540:19:2",
                                    "type": "",
                                    "value": "invalid timestamp"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9513:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9513:47:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9513:47:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9569:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9581:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9592:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9577:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9577:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9569:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3a07df7939b5ccbd3c356d849b8deaf4b43e0de6adbd96a0feb242ccf507b152__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9411:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9425:4:2",
                            "type": ""
                          }
                        ],
                        "src": "9260:341:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9780:228:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9797:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9808:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9790:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9790:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9790:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9831:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9842:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9827:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9827:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9847:2:2",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9820:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9820:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9820:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9870:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9881:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9866:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9866:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9886:34:2",
                                    "type": "",
                                    "value": "stake amount must be greater tha"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9859:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9859:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9859:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9941:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9952:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9937:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9937:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9957:8:2",
                                    "type": "",
                                    "value": "n zero"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9930:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9930:36:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9930:36:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9975:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9987:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9998:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9983:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9983:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9975:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4fcea4fb0313a745edc64b881b016c9f3a568de1393f3bf2136337a2e3f04def__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9757:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9771:4:2",
                            "type": ""
                          }
                        ],
                        "src": "9606:402:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10187:168:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10204:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10215:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10197:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10197:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10197:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10238:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10249:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10234:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10234:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10254:2:2",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10227:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10227:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10227:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10277:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10288:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10273:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10273:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10293:20:2",
                                    "type": "",
                                    "value": "7 days didn't pass"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10266:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10266:48:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10266:48:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10323:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10335:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10346:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10331:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10331:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10323:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5164376a34f3fc53325bb8adc1cd7d656523d5ae2d49ee3ed4e8e2f54a5d3790__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10164:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10178:4:2",
                            "type": ""
                          }
                        ],
                        "src": "10013:342:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10534:182:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10551:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10562:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10544:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10544:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10544:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10585:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10596:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10581:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10581:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10601:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10574:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10574:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10574:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10624:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10635:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10620:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10620:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10640:34:2",
                                    "type": "",
                                    "value": "nonce must match timestamp index"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10613:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10613:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10613:62:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10684:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10696:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10707:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10692:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10692:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10684:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7b15e51d279d80d81e1fc0908dcc556966bdf31135ced551977dc05553339722__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10511:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10525:4:2",
                            "type": ""
                          }
                        ],
                        "src": "10360:356:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10895:231:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10912:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10923:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10905:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10905:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10905:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10946:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10957:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10942:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10942:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10962:2:2",
                                    "type": "",
                                    "value": "41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10935:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10935:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10935:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10985:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10996:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10981:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10981:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11001:34:2",
                                    "type": "",
                                    "value": "balance must be greater than sta"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10974:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10974:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10974:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11056:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11067:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11052:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11052:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11072:11:2",
                                    "type": "",
                                    "value": "ke amount"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11045:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11045:39:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11045:39:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11093:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11105:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11116:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11101:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11101:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11093:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7e1efbb043fa6ec74f24242163f1616774ee8060f734746ea5be09c5f4cc0a3b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10872:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10886:4:2",
                            "type": ""
                          }
                        ],
                        "src": "10721:405:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11305:169:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11322:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11333:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11315:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11315:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11315:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11356:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11367:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11352:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11352:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11372:2:2",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11345:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11345:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11345:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11395:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11406:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11391:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11391:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11411:21:2",
                                    "type": "",
                                    "value": "zero staker balance"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11384:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11384:49:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11384:49:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11442:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11454:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11465:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11450:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11450:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11442:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a3a4c5b477f2cbe1c094512a4b8095c70ddae050077cd51c2c2e7685b3ec68d6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11282:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11296:4:2",
                            "type": ""
                          }
                        ],
                        "src": "11131:343:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11653:177:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11670:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11681:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11663:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11663:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11663:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11704:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11715:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11700:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11700:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11720:2:2",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11693:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11693:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11693:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11743:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11754:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11739:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11739:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11759:29:2",
                                    "type": "",
                                    "value": "must set governance address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11732:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11732:57:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11732:57:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11798:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11810:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11821:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11806:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11806:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11798:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_bbe99581b496754cbdf40f2080b3f8a8bd5eb5791b11511c11875b879c05f940__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11630:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11644:4:2",
                            "type": ""
                          }
                        ],
                        "src": "11479:351:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12009:224:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12026:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12037:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12019:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12019:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12019:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12060:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12071:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12056:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12056:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12076:2:2",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12049:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12049:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12049:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12099:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12110:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12095:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12095:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12115:34:2",
                                    "type": "",
                                    "value": "reporter not locked for withdraw"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12088:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12088:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12088:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12170:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12181:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12166:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12166:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12186:4:2",
                                    "type": "",
                                    "value": "al"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12159:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12159:32:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12159:32:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12200:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12212:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12223:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12208:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12208:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12200:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c41f72c59331ebb81fb9f07a8ed7914d4a048f238f80301189e2a9368bbeb774__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11986:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12000:4:2",
                            "type": ""
                          }
                        ],
                        "src": "11835:398:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12412:230:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12429:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12440:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12422:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12422:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12422:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12463:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12474:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12459:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12459:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12479:2:2",
                                    "type": "",
                                    "value": "40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12452:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12452:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12452:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12502:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12513:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12498:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12498:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12518:34:2",
                                    "type": "",
                                    "value": "reporting lock must be greater t"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12491:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12491:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12491:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12573:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12584:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12569:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12569:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12589:10:2",
                                    "type": "",
                                    "value": "han zero"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12562:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12562:38:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12562:38:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12609:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12621:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12632:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12617:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12617:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12609:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cb2905567c66577046abb9c5db6a5e52162cad2a3fd5cafe7f5837343aacc143__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12389:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12403:4:2",
                            "type": ""
                          }
                        ],
                        "src": "12238:404:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12821:180:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12838:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12849:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12831:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12831:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12831:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12872:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12883:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12868:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12868:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12888:2:2",
                                    "type": "",
                                    "value": "30"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12861:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12861:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12861:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12911:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12922:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12907:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12907:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12927:32:2",
                                    "type": "",
                                    "value": "timestamp already reported for"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12900:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12900:60:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12900:60:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12969:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12981:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12992:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12977:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12977:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12969:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d541686ca6297aaf5fdbb7b57ddce3782e7a3f89c7d209c488e689b7919b2c40__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12798:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12812:4:2",
                            "type": ""
                          }
                        ],
                        "src": "12647:354:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13180:231:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13197:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13208:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13190:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13190:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13190:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13231:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13242:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13227:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13227:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13247:2:2",
                                    "type": "",
                                    "value": "41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13220:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13220:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13220:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13270:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13281:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13266:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13266:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13286:34:2",
                                    "type": "",
                                    "value": "still in reporter time lock, ple"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13259:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13259:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13259:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13341:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13352:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13337:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13337:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13357:11:2",
                                    "type": "",
                                    "value": "ase wait!"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13330:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13330:39:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13330:39:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13378:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13390:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13401:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13386:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13386:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13378:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d81ec119481359bdd127efa2e03f66c477f0a2ffdb643db5706370fef44fb00e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13157:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13171:4:2",
                            "type": ""
                          }
                        ],
                        "src": "13006:405:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13590:177:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13607:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13618:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13600:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13600:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13600:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13641:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13652:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13637:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13637:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13657:2:2",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13630:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13630:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13630:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13680:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13691:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13676:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13676:18:2"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13696:29:2",
                                    "type": "",
                                    "value": "insufficient staked balance"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13669:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13669:57:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13669:57:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13735:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13747:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13758:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13743:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13743:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13735:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d8d4cb8e01b84ee20a4e50dd6369720cccce60f70a5f340975bb2a78d6c776db__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13567:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13581:4:2",
                            "type": ""
                          }
                        ],
                        "src": "13416:351:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13873:76:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13883:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13895:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13906:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13891:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13891:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13883:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13925:9:2"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "13936:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13918:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13918:25:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13918:25:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13842:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "13853:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13864:4:2",
                            "type": ""
                          }
                        ],
                        "src": "13772:177:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14167:250:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14177:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14189:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14200:3:2",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14185:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14185:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14177:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14220:9:2"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "14231:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14213:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14213:25:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14213:25:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14258:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14269:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14254:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14254:18:2"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "14274:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14247:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14247:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14247:34:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14301:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14312:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14297:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14297:18:2"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "14317:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14290:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14290:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14290:34:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14344:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14355:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14340:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14340:18:2"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "14360:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14333:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14333:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14333:34:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14387:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14398:3:2",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14383:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14383:19:2"
                                  },
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "14404:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14376:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14376:35:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14376:35:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14104:9:2",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "14115:6:2",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "14123:6:2",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "14131:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "14139:6:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "14147:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14158:4:2",
                            "type": ""
                          }
                        ],
                        "src": "13954:463:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14477:71:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "14494:4:2"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "14500:3:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14487:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14487:17:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14487:17:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14513:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "14531:4:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14537:4:2",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "14521:9:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14521:21:2"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "14513:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_bytes_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "14460:3:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "14468:4:2",
                            "type": ""
                          }
                        ],
                        "src": "14422:126:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14601:80:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14628:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "14630:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14630:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14630:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14617:1:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "14624:1:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "14620:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14620:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "14614:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14614:13:2"
                              },
                              "nodeType": "YulIf",
                              "src": "14611:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14659:16:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14670:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14673:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14666:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14666:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "14659:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "14584:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "14587:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "14593:3:2",
                            "type": ""
                          }
                        ],
                        "src": "14553:128:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14732:171:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "14763:111:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "r",
                                          "nodeType": "YulIdentifier",
                                          "src": "14784:1:2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "14791:3:2",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "14796:10:2",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "14787:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14787:20:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "14777:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14777:31:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14777:31:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14828:1:2",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14831:4:2",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "14821:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14821:15:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14821:15:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "r",
                                          "nodeType": "YulIdentifier",
                                          "src": "14856:1:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "14859:4:2",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "14849:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14849:15:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14849:15:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14752:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14745:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14745:9:2"
                              },
                              "nodeType": "YulIf",
                              "src": "14742:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14883:14:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14892:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "14895:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "14888:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14888:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "14883:1:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "14717:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "14720:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "14726:1:2",
                            "type": ""
                          }
                        ],
                        "src": "14686:217:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14960:116:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15019:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "15021:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15021:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15021:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "14991:1:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "14984:6:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14984:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "14977:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14977:17:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "14999:1:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "15010:1:2",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "15006:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "15006:6:2"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "15014:1:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "15002:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15002:14:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "14996:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14996:21:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14973:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14973:45:2"
                              },
                              "nodeType": "YulIf",
                              "src": "14970:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15050:20:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15065:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15068:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "15061:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15061:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "15050:7:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "14939:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "14942:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "14948:7:2",
                            "type": ""
                          }
                        ],
                        "src": "14908:168:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15130:76:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15152:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "15154:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15154:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15154:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15146:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15149:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "15143:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15143:8:2"
                              },
                              "nodeType": "YulIf",
                              "src": "15140:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15183:17:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "15195:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "15198:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "15191:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15191:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "15183:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "15112:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "15115:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "15121:4:2",
                            "type": ""
                          }
                        ],
                        "src": "15081:125:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15266:325:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15276:22:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15290:1:2",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "15293:4:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "15286:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15286:12:2"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "15276:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15307:38:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "15337:4:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15343:1:2",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15333:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15333:12:2"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "15311:18:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15384:31:2",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "15386:27:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "15400:6:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15408:4:2",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "15396:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15396:17:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "15386:6:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "15364:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "15357:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15357:26:2"
                              },
                              "nodeType": "YulIf",
                              "src": "15354:2:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15474:111:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15495:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "15502:3:2",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "15507:10:2",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "15498:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15498:20:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15488:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15488:31:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15488:31:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15539:1:2",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15542:4:2",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "15532:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15532:15:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15532:15:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15567:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "15570:4:2",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15560:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15560:15:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15560:15:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "15430:18:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "15453:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15461:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "15450:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15450:14:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "15427:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15427:38:2"
                              },
                              "nodeType": "YulIf",
                              "src": "15424:2:2"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "15246:4:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "15255:6:2",
                            "type": ""
                          }
                        ],
                        "src": "15211:380:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15643:88:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "15674:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "15676:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15676:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15676:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "15659:5:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15670:1:2",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "15666:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15666:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "15656:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15656:17:2"
                              },
                              "nodeType": "YulIf",
                              "src": "15653:2:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15705:20:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "15716:5:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15723:1:2",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15712:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15712:13:2"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "15705:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "15625:5:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "15635:3:2",
                            "type": ""
                          }
                        ],
                        "src": "15596:135:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15768:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15785:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15792:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15797:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "15788:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15788:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15778:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15778:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15778:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15825:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15828:4:2",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15818:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15818:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15818:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15849:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15852:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "15842:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15842:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15842:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "15736:127:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15900:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15917:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15924:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15929:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "15920:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15920:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15910:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15910:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15910:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15957:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15960:4:2",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15950:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15950:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15950:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15981:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15984:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "15974:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15974:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15974:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "15868:127:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_calldata_ptrt_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value4, value4) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value4, value4) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value4, value4) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value4, value4) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value4, value4) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(value4, value4) }\n        value4 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_storage__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := end\n        let slotValue := sload(value0)\n        let length := end\n        let _1 := 1\n        length := shr(_1, slotValue)\n        let outOfPlaceEncoding := and(slotValue, _1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        let _2 := 32\n        if eq(outOfPlaceEncoding, lt(length, _2))\n        {\n            mstore(end, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(end, 0x24)\n        }\n        switch outOfPlaceEncoding\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            let dataPos := array_dataslot_bytes_storage(value0)\n            let i := end\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_bytes_calldata_ptr_t_uint256_t_bytes_memory_ptr_t_address__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_uint256_t_bytes_memory_ptr_t_address__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 192)\n        mstore(add(headStart, 192), value3)\n        calldatacopy(add(headStart, 224), value2, value3)\n        mstore(add(add(headStart, value3), 224), tail)\n        let _1 := add(headStart, and(add(value3, 31), not(31)))\n        mstore(add(headStart, 96), value4)\n        mstore(add(headStart, 128), add(sub(_1, headStart), 224))\n        tail := abi_encode_bytes(value5, add(_1, 224))\n        mstore(add(headStart, 160), and(value6, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1264__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_23d2505d9b9a455858ac547072cc1fb48e6613ddf816d1d5af3621bf20b50229__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"only governance can slash report\")\n        mstore(add(headStart, 96), \"er\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2fc6a9b17f3032be7c5732e8726a5ecef9cd40af648e6d6a8e6ccf2071f4a1cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"caller must be governance addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_365165a3cc331b03e63440264952201ac1cbb1ccd5c356779f410908d37b2f0f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"id must be hash of bytes data\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3a07df7939b5ccbd3c356d849b8deaf4b43e0de6adbd96a0feb242ccf507b152__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"invalid timestamp\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4fcea4fb0313a745edc64b881b016c9f3a568de1393f3bf2136337a2e3f04def__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"stake amount must be greater tha\")\n        mstore(add(headStart, 96), \"n zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5164376a34f3fc53325bb8adc1cd7d656523d5ae2d49ee3ed4e8e2f54a5d3790__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"7 days didn't pass\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7b15e51d279d80d81e1fc0908dcc556966bdf31135ced551977dc05553339722__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"nonce must match timestamp index\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7e1efbb043fa6ec74f24242163f1616774ee8060f734746ea5be09c5f4cc0a3b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"balance must be greater than sta\")\n        mstore(add(headStart, 96), \"ke amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a3a4c5b477f2cbe1c094512a4b8095c70ddae050077cd51c2c2e7685b3ec68d6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"zero staker balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bbe99581b496754cbdf40f2080b3f8a8bd5eb5791b11511c11875b879c05f940__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"must set governance address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c41f72c59331ebb81fb9f07a8ed7914d4a048f238f80301189e2a9368bbeb774__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"reporter not locked for withdraw\")\n        mstore(add(headStart, 96), \"al\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cb2905567c66577046abb9c5db6a5e52162cad2a3fd5cafe7f5837343aacc143__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"reporting lock must be greater t\")\n        mstore(add(headStart, 96), \"han zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d541686ca6297aaf5fdbb7b57ddce3782e7a3f89c7d209c488e689b7919b2c40__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"timestamp already reported for\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d81ec119481359bdd127efa2e03f66c477f0a2ffdb643db5706370fef44fb00e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"still in reporter time lock, ple\")\n        mstore(add(headStart, 96), \"ase wait!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d8d4cb8e01b84ee20a4e50dd6369720cccce60f70a5f340975bb2a78d6c776db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"insufficient staked balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(data, ptr)\n        data := keccak256(data, 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106101fb5760003560e01c8063722580b61161011a578063adf1639d116100ad578063ca79b5a91161007c578063ca79b5a9146104e6578063cb82cc8f146104f9578063ce5e11bf1461050c578063e07c54861461051f578063fc0c546a14610557576101fb565b8063adf1639d146104a3578063bed9d861146104c3578063c0f95d52146104cb578063c5958af9146104d3576101fb565b80638929f4c6116100e95780638929f4c614610429578063935408d01461043c57806394409a561461046b5780639d9b16ed14610474576101fb565b8063722580b614610382578063732524941461038a578063733bdef01461039b57806377b03e0d14610409576101fb565b80634dfc2a34116101925780635d183cfa116101615780635d183cfa1461034a5780635eaa9ced1461035d57806360c7dc47146103705780636fd4f22914610379576101fb565b80634dfc2a34146102e557806350005b83146102f85780635aa6e675146103245780635b5edcfc14610337576101fb565b80632b6696a7116101ce5780632b6696a71461028f5780633321fc41146102c15780633878293e146102ca578063460c33a2146102dd576101fb565b80630636769e1461020057806310fe9ae81461021557806311938e081461023f57806314c2a1bc14610287575b600080fd5b61021361020e366004611957565b61056a565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61027961024d3660046119aa565b6001600160a01b0391909116600090815260076020908152604080832093835260059093019052205490565b604051908152602001610236565b600354610279565b6102a261029d366004611ab0565b610648565b604080516001600160a01b039093168352901515602083015201610236565b61027960045481565b6102796102d8366004611957565b61072f565b600454610279565b6102796102f3366004611978565b610751565b610279610306366004611957565b6001600160a01b031660009081526007602052604090206003015490565b600154610222906001600160a01b031681565b610213610345366004611ab0565b6109f5565b6102136103583660046119f3565b610c83565b61021361036b366004611a0b565b610d43565b61027960025481565b61027960055481565b600254610279565b6001546001600160a01b0316610222565b6103e16103a9366004611957565b6001600160a01b0316600090815260076020526040902080546001820154600283015460038401546004909401549294919390929091565b604080519586526020860194909452928401919091526060830152608082015260a001610236565b6102796104173660046119f3565b60009081526006602052604090205490565b6102136104373660046119f3565b61108e565b61027961044a366004611ab0565b60009182526006602090815260408084209284526002909201905290205490565b61027960035481565b610279610482366004611ab0565b60009182526006602090815260408084209284526001909201905290205490565b6104b66104b13660046119f3565b611182565b6040516102369190611c24565b61021361126f565b600554610279565b6104b66104e1366004611ab0565b6113f3565b6102136104f43660046119f3565b6114a4565b6102136105073660046119f3565b611562565b61027961051a366004611ab0565b61176b565b61022261052d366004611ab0565b6000918252600660209081526040808420928452600490920190529020546001600160a01b031690565b600054610222906001600160a01b031681565b6001546001600160a01b0316331461059d5760405162461bcd60e51b815260040161059490611c37565b60405180910390fd5b6001600160a01b0381166105f35760405162461bcd60e51b815260206004820152601b60248201527f6d7573742073657420676f7665726e616e6365206164647265737300000000006044820152606401610594565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f682527aafb5b7e86077049b38534cd433dd39d523b92b0455dab09a16dc0a7db906020015b60405180910390a150565b6000828152600660209081526040808320848452600101909152812054819081901580156106ce5750604080516020808201835260009182905287825260068152828220878352600301905281902090517fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470916106c491611b1c565b6040518091039020145b80156106fe575060008581526006602090815260408083208784526004019091529020546001600160a01b031615155b60009586526006602090815260408088209688526004909601905293909420546001600160a01b0316949293505050565b6001600160a01b0381166000908152600760205260409020600401545b919050565b6001546000906001600160a01b031633146107b95760405162461bcd60e51b815260206004820152602260248201527f6f6e6c7920676f7665726e616e63652063616e20736c617368207265706f727460448201526132b960f11b6064820152608401610594565b6001600160a01b0383166000908152600760205260408120600281015460018201549192916107e89190611c78565b1161082b5760405162461bcd60e51b81526020600482015260136024820152727a65726f207374616b65722062616c616e636560681b6044820152606401610594565b60006002548260020154106108605760025490506002548260020160008282546108559190611ccf565b9091555061091b9050565b600254826001015483600201546108779190611c78565b106108db5750600280549082015461088f9082611ccf565b8260010160008282546108a29190611ccf565b909155505060028083015490546108b99190611ccf565b600360008282546108ca9190611ccf565b90915550506000600283015561091b565b816002015482600101546108ef9190611c78565b90508160010154600360008282546109079190611ccf565b909155505060006001830181905560028301555b60005460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b15801561096957600080fd5b505af115801561097d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a191906119d3565b50604080516001600160a01b038088168252861660208201529081018290527f4317784407a22e643706ef000f5c0eea399dea3632613786167ab71c9446e3ac9060600160405180910390a1949350505050565b6001546001600160a01b03163314610a1f5760405162461bcd60e51b815260040161059490611c37565b600082815260066020908152604080832084845260018101909252909120548154829082908110610a6057634e487b7160e01b600052603260045260246000fd5b90600052602060002001548314610aad5760405162461bcd60e51b81526020600482015260116024820152700696e76616c69642074696d657374616d7607c1b6044820152606401610594565b805b8254610abd90600190611ccf565b811015610b955782610ad0826001611c78565b81548110610aee57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154836000018281548110610b1c57634e487b7160e01b600052603260045260246000fd5b90600052602060002001819055506001836001016000856000018481548110610b5557634e487b7160e01b600052603260045260246000fd5b906000526020600020015481526020019081526020016000206000828254610b7d9190611ccf565b90915550819050610b8d81611d21565b915050610aaf565b5081548290610ba690600190611ccf565b81548110610bc457634e487b7160e01b600052603260045260246000fd5b60009182526020822001558154829080610bee57634e487b7160e01b600052603160045260246000fd5b600082815260208082208301600019908101839055909201909255604080518083018083528482528785526003870190935292209151610c2f9291906117ac565b50600083815260018301602090815260408083209290925581518681529081018590527fb326db0e54476c677e2b35b75856ac6f4d8bbfb0a6de6690582ebe4dabce0de7910160405180910390a150505050565b6001546001600160a01b03163314610cad5760405162461bcd60e51b815260040161059490611c37565b60008111610d0e5760405162461bcd60e51b815260206004820152602860248201527f7265706f7274696e67206c6f636b206d7573742062652067726561746572207460448201526768616e207a65726f60c01b6064820152608401610594565b60048190556040518181527f15585049a76f383bbfc7c421ee17aeb528a0947dc478a0c796166239a452ba579060200161063d565b60008581526006602052604090208054831480610d5e575082155b610daa5760405162461bcd60e51b815260206004820181905260248201527f6e6f6e6365206d757374206d617463682074696d657374616d7020696e6465786044820152606401610594565b33600090815260076020526040902060025460018201541015610e215760405162461bcd60e51b815260206004820152602960248201527f62616c616e6365206d7573742062652067726561746572207468616e207374616044820152681ad948185b5bdd5b9d60ba1b6064820152608401610594565b6002548160010154610e339190611c90565b600454610e42906103e8611cb0565b610e4c9190611c90565b6003820154610e5b9042611ccf565b610e67906103e8611cb0565b11610ec65760405162461bcd60e51b815260206004820152602960248201527f7374696c6c20696e207265706f727465722074696d65206c6f636b2c20706c6560448201526861736520776169742160b81b6064820152608401610594565b82516020840120871480610edb575060648711155b610f275760405162461bcd60e51b815260206004820152601d60248201527f6964206d7573742062652068617368206f6620627974657320646174610000006044820152606401610594565b426003820181905560009081526004830160205260409020546001600160a01b031615610f965760405162461bcd60e51b815260206004820152601e60248201527f74696d657374616d7020616c7265616479207265706f7274656420666f7200006044820152606401610594565b81544260008181526001808601602090815260408084208690559185018755868352808320909401839055918152600285018352818120439055600385019092529020610fe4908787611830565b5042600081815260048085016020526040822080546001600160a01b0319163317905560059290925590820180549161101c83611d21565b90915550506000878152600582016020526040812080549161103d83611d21565b91905055507f48e9e2c732ba278de6ac88a3a57a5c5ba13d3d8370e709b3b98333a57876ca958742888888883360405161107d9796959493929190611bb7565b60405180910390a150505050505050565b33600090815260076020526040902060018101548211156110f15760405162461bcd60e51b815260206004820152601b60248201527f696e73756666696369656e74207374616b65642062616c616e636500000000006044820152606401610594565b42815560028101805483919060009061110b908490611c78565b92505081905550818160010160008282546111269190611ccf565b92505081905550816003600082825461113f9190611ccf565b909155505060408051338152602081018490527f3d8d9df4bd0172df32e557fa48e96435cd7f2cac06aaffacfaee608e6f7898ef91015b60405180910390a15050565b60008181526006602052604081208054606092600383019290916111a890600190611ccf565b815481106111c657634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002080546111ea90611ce6565b80601f016020809104026020016040519081016040528092919081815260200182805461121690611ce6565b80156112635780601f1061123857610100808354040283529160200191611263565b820191906000526020600020905b81548152906001019060200180831161124657829003601f168201915b50505050509050919050565b336000908152600760205260409020805462093a809061128f9042611ccf565b10156112d25760405162461bcd60e51b8152602060048201526012602482015271372064617973206469646e2774207061737360701b6044820152606401610594565b60008160020154116113315760405162461bcd60e51b815260206004820152602260248201527f7265706f72746572206e6f74206c6f636b656420666f72207769746864726177604482015261185b60f21b6064820152608401610594565b600054600282015460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561138357600080fd5b505af1158015611397573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bb91906119d3565b50600060028201556040513381527f4a7934670bd8304e7da22378be1368f7c4fef17c5aee81804beda8638fe428ec9060200161063d565b6000828152600660209081526040808320848452600301909152902080546060919061141e90611ce6565b80601f016020809104026020016040519081016040528092919081815260200182805461144a90611ce6565b80156114975780601f1061146c57610100808354040283529160200191611497565b820191906000526020600020905b81548152906001019060200180831161147a57829003601f168201915b5050505050905092915050565b6001546001600160a01b031633146114ce5760405162461bcd60e51b815260040161059490611c37565b6000811161152d5760405162461bcd60e51b815260206004820152602660248201527f7374616b6520616d6f756e74206d7573742062652067726561746572207468616044820152656e207a65726f60d01b6064820152608401610594565b60028190556040518181527f1af37d6aaef3c5ef293c3c63d0ac302f60db7fde22eb9f5e96ebd569928321109060200161063d565b33600090815260076020526040902060028101541561166a57818160020154106115a5578181600201600082825461159a9190611ccf565b909155506116659050565b60005460028201546001600160a01b03909116906323b872dd90339030906115cd9087611ccf565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561161c57600080fd5b505af1158015611630573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165491906119d3565b61165d57600080fd5b600060028201555b6116fd565b6000546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156116bc57600080fd5b505af11580156116d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f491906119d3565b6116fd57600080fd5b428155600181018054839190600090611717908490611c78565b9250508190555081600360008282546117309190611c78565b909155505060408051338152602081018490527fa96c2cce65119a2170d1711a6e82f18f2006448828483ba7545e5954765436479101611176565b600082815260066020526040812080548390811061179957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b8280546117b890611ce6565b90600052602060002090601f0160209004810192826117da5760008555611820565b82601f106117f357805160ff1916838001178555611820565b82800160010185558215611820579182015b82811115611820578251825591602001919060010190611805565b5061182c9291506118a4565b5090565b82805461183c90611ce6565b90600052602060002090601f01602090048101928261185e5760008555611820565b82601f106118775782800160ff19823516178555611820565b82800160010185558215611820579182015b82811115611820578235825591602001919060010190611889565b5b8082111561182c57600081556001016118a5565b80356001600160a01b038116811461074c57600080fd5b600082601f8301126118e0578081fd5b813567ffffffffffffffff808211156118fb576118fb611d52565b604051601f8301601f19908116603f0116810190828211818310171561192357611923611d52565b8160405283815286602085880101111561193b578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215611968578081fd5b611971826118b9565b9392505050565b6000806040838503121561198a578081fd5b611993836118b9565b91506119a1602084016118b9565b90509250929050565b600080604083850312156119bc578182fd5b6119c5836118b9565b946020939093013593505050565b6000602082840312156119e4578081fd5b81518015158114611971578182fd5b600060208284031215611a04578081fd5b5035919050565b600080600080600060808688031215611a22578081fd5b85359450602086013567ffffffffffffffff80821115611a40578283fd5b818801915088601f830112611a53578283fd5b813581811115611a61578384fd5b896020828501011115611a72578384fd5b60208301965080955050604088013593506060880135915080821115611a96578283fd5b50611aa3888289016118d0565b9150509295509295909350565b60008060408385031215611ac2578182fd5b50508035926020909101359150565b60008151808452815b81811015611af657602081850181015186830182015201611ada565b81811115611b075782602083870101525b50601f01601f19169290920160200192915050565b600080835482600182811c915080831680611b3857607f831692505b6020808410821415611b5857634e487b7160e01b87526022600452602487fd5b818015611b6c5760018114611b7d57611ba9565b60ff19861689528489019650611ba9565b60008a815260209020885b86811015611ba15781548b820152908501908301611b88565b505084890196505b509498975050505050505050565b600088825287602083015260c060408301528560c0830152858760e08401378060e08784010152601f19601f870116820185606084015260e0838203016080840152611c0660e0820186611ad1565b9150506001600160a01b03831660a083015298975050505050505050565b6000602082526119716020830184611ad1565b60208082526021908201527f63616c6c6572206d75737420626520676f7665726e616e6365206164647265736040820152607360f81b606082015260800190565b60008219821115611c8b57611c8b611d3c565b500190565b600082611cab57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611cca57611cca611d3c565b500290565b600082821015611ce157611ce1611d3c565b500390565b600181811c90821680611cfa57607f821691505b60208210811415611d1b57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611d3557611d35611d3c565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122086944903ad045b119ab3fe11e3834da1309096fb2119975569503be54ff38c3564736f6c63430008030033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x722580B6 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xADF1639D GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCA79B5A9 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xCA79B5A9 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0xCB82CC8F EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xCE5E11BF EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xE07C5486 EQ PUSH2 0x51F JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x557 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0xADF1639D EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xBED9D861 EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xC0F95D52 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0xC5958AF9 EQ PUSH2 0x4D3 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x8929F4C6 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8929F4C6 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x935408D0 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x94409A56 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x9D9B16ED EQ PUSH2 0x474 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x722580B6 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x73252494 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x733BDEF0 EQ PUSH2 0x39B JUMPI DUP1 PUSH4 0x77B03E0D EQ PUSH2 0x409 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x4DFC2A34 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x5D183CFA GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x5D183CFA EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x5EAA9CED EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x60C7DC47 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x6FD4F229 EQ PUSH2 0x379 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x4DFC2A34 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x50005B83 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x5AA6E675 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x5B5EDCFC EQ PUSH2 0x337 JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x2B6696A7 GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x2B6696A7 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x3321FC41 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x3878293E EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x460C33A2 EQ PUSH2 0x2DD JUMPI PUSH2 0x1FB JUMP JUMPDEST DUP1 PUSH4 0x636769E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x10FE9AE8 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x11938E08 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x14C2A1BC EQ PUSH2 0x287 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP4 ADD SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x236 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x279 JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB0 JUMP JUMPDEST PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x236 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x2D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x279 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1978 JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x306 CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x222 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB0 JUMP JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x1A0B JUMP JUMPDEST PUSH2 0xD43 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x279 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x222 JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x236 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x417 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x108E JUMP JUMPDEST PUSH2 0x279 PUSH2 0x44A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x279 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x482 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4B6 PUSH2 0x4B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1C24 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x279 JUMP JUMPDEST PUSH2 0x4B6 PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB0 JUMP JUMPDEST PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x4F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x14A4 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x507 CALLDATASIZE PUSH1 0x4 PUSH2 0x19F3 JUMP JUMPDEST PUSH2 0x1562 JUMP JUMPDEST PUSH2 0x279 PUSH2 0x51A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB0 JUMP JUMPDEST PUSH2 0x176B JUMP JUMPDEST PUSH2 0x222 PUSH2 0x52D CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP5 MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x222 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x59D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D7573742073657420676F7665726E616E636520616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x682527AAFB5B7E86077049B38534CD433DD39D523B92B0455DAB09A16DC0A7DB SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x1 ADD SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 ISZERO DUP1 ISZERO PUSH2 0x6CE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP1 MSTORE DUP8 DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE DUP3 DUP3 KECCAK256 DUP8 DUP4 MSTORE PUSH1 0x3 ADD SWAP1 MSTORE DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP2 PUSH2 0x6C4 SWAP2 PUSH2 0x1B1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 EQ JUMPDEST DUP1 ISZERO PUSH2 0x6FE JUMPI POP PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x4 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST PUSH1 0x0 SWAP6 DUP7 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP9 KECCAK256 SWAP7 DUP9 MSTORE PUSH1 0x4 SWAP1 SWAP7 ADD SWAP1 MSTORE SWAP4 SWAP1 SWAP5 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C7920676F7665726E616E63652063616E20736C617368207265706F7274 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x7E8 SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST GT PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x7A65726F207374616B65722062616C616E6365 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH1 0x2 ADD SLOAD LT PUSH2 0x860 JUMPI PUSH1 0x2 SLOAD SWAP1 POP PUSH1 0x2 SLOAD DUP3 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x855 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x91B SWAP1 POP JUMP JUMPDEST PUSH1 0x2 SLOAD DUP3 PUSH1 0x1 ADD SLOAD DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x877 SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST LT PUSH2 0x8DB JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 DUP3 ADD SLOAD PUSH2 0x88F SWAP1 DUP3 PUSH2 0x1CCF JUMP JUMPDEST DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8A2 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 DUP4 ADD SLOAD SWAP1 SLOAD PUSH2 0x8B9 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8CA SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0x91B JUMP JUMPDEST DUP2 PUSH1 0x2 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x907 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x1 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x969 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x97D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A1 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP3 MSTORE DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x4317784407A22E643706EF000F5C0EEA399DEA3632613786167AB71C9446E3AC SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x1 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP2 SLOAD DUP3 SWAP1 DUP3 SWAP1 DUP2 LT PUSH2 0xA60 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP4 EQ PUSH2 0xAAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x696E76616C69642074696D657374616D7 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST DUP1 JUMPDEST DUP3 SLOAD PUSH2 0xABD SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB95 JUMPI DUP3 PUSH2 0xAD0 DUP3 PUSH1 0x1 PUSH2 0x1C78 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xAEE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB1C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP6 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xB55 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB7D SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0xB8D DUP2 PUSH2 0x1D21 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAAF JUMP JUMPDEST POP DUP2 SLOAD DUP3 SWAP1 PUSH2 0xBA6 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBC4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SSTORE DUP2 SLOAD DUP3 SWAP1 DUP1 PUSH2 0xBEE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP4 ADD PUSH1 0x0 NOT SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE SWAP1 SWAP3 ADD SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 ADD DUP1 DUP4 MSTORE DUP5 DUP3 MSTORE DUP8 DUP6 MSTORE PUSH1 0x3 DUP8 ADD SWAP1 SWAP4 MSTORE SWAP3 KECCAK256 SWAP2 MLOAD PUSH2 0xC2F SWAP3 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0xB326DB0E54476C677E2B35B75856AC6F4D8BBFB0A6DE6690582EBE4DABCE0DE7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCAD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xD0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7265706F7274696E67206C6F636B206D75737420626520677265617465722074 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x68616E207A65726F PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x15585049A76F383BBFC7C421EE17AEB528A0947DC478A0C796166239A452BA57 SWAP1 PUSH1 0x20 ADD PUSH2 0x63D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 EQ DUP1 PUSH2 0xD5E JUMPI POP DUP3 ISZERO JUMPDEST PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F6E6365206D757374206D617463682074696D657374616D7020696E646578 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 SLOAD PUSH1 0x1 DUP3 ADD SLOAD LT ISZERO PUSH2 0xE21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62616C616E6365206D7573742062652067726561746572207468616E20737461 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1AD948185B5BDD5B9D PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 PUSH1 0x1 ADD SLOAD PUSH2 0xE33 SWAP2 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xE42 SWAP1 PUSH2 0x3E8 PUSH2 0x1CB0 JUMP JUMPDEST PUSH2 0xE4C SWAP2 SWAP1 PUSH2 0x1C90 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD PUSH2 0xE5B SWAP1 TIMESTAMP PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0xE67 SWAP1 PUSH2 0x3E8 PUSH2 0x1CB0 JUMP JUMPDEST GT PUSH2 0xEC6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7374696C6C20696E207265706F727465722074696D65206C6F636B2C20706C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x617365207761697421 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD KECCAK256 DUP8 EQ DUP1 PUSH2 0xEDB JUMPI POP PUSH1 0x64 DUP8 GT ISZERO JUMPDEST PUSH2 0xF27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6964206D7573742062652068617368206F662062797465732064617461000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST TIMESTAMP PUSH1 0x3 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xF96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74696D657374616D7020616C7265616479207265706F7274656420666F720000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST DUP2 SLOAD TIMESTAMP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP1 DUP7 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 SWAP1 SSTORE SWAP2 DUP6 ADD DUP8 SSTORE DUP7 DUP4 MSTORE DUP1 DUP4 KECCAK256 SWAP1 SWAP5 ADD DUP4 SWAP1 SSTORE SWAP2 DUP2 MSTORE PUSH1 0x2 DUP6 ADD DUP4 MSTORE DUP2 DUP2 KECCAK256 NUMBER SWAP1 SSTORE PUSH1 0x3 DUP6 ADD SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 PUSH2 0xFE4 SWAP1 DUP8 DUP8 PUSH2 0x1830 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 DUP6 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 DUP3 ADD DUP1 SLOAD SWAP2 PUSH2 0x101C DUP4 PUSH2 0x1D21 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x5 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x103D DUP4 PUSH2 0x1D21 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x48E9E2C732BA278DE6AC88A3A57A5C5BA13D3D8370E709B3B98333A57876CA95 DUP8 TIMESTAMP DUP9 DUP9 DUP9 DUP9 CALLER PUSH1 0x40 MLOAD PUSH2 0x107D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP3 GT ISZERO PUSH2 0x10F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E74207374616B65642062616C616E63650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST TIMESTAMP DUP2 SSTORE PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x110B SWAP1 DUP5 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1126 SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x113F SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x3D8D9DF4BD0172DF32E557FA48E96435CD7F2CAC06AAFFACFAEE608E6F7898EF SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP3 PUSH1 0x3 DUP4 ADD SWAP3 SWAP1 SWAP2 PUSH2 0x11A8 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x11C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x11EA SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1216 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1263 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1238 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1263 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1246 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH3 0x93A80 SWAP1 PUSH2 0x128F SWAP1 TIMESTAMP PUSH2 0x1CCF JUMP JUMPDEST LT ISZERO PUSH2 0x12D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x372064617973206469646E27742070617373 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x1331 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7265706F72746572206E6F74206C6F636B656420666F72207769746864726177 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x185B PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1397 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13BB SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x4A7934670BD8304E7DA22378BE1368F7C4FEF17C5AEE81804BEDA8638FE428EC SWAP1 PUSH1 0x20 ADD PUSH2 0x63D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE PUSH1 0x3 ADD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x141E SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x144A SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1497 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x146C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1497 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x147A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x1C37 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x152D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7374616B6520616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E207A65726F PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x1AF37D6AAEF3C5EF293C3C63D0AC302F60DB7FDE22EB9F5E96EBD56992832110 SWAP1 PUSH1 0x20 ADD PUSH2 0x63D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SLOAD ISZERO PUSH2 0x166A JUMPI DUP2 DUP2 PUSH1 0x2 ADD SLOAD LT PUSH2 0x15A5 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x159A SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1665 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH2 0x15CD SWAP1 DUP8 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x161C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1630 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1654 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x165D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16F4 SWAP2 SWAP1 PUSH2 0x19D3 JUMP JUMPDEST PUSH2 0x16FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1717 SWAP1 DUP5 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1730 SWAP2 SWAP1 PUSH2 0x1C78 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xA96C2CCE65119A2170D1711A6E82F18F2006448828483BA7545E595476543647 SWAP2 ADD PUSH2 0x1176 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x1799 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x17B8 SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x17DA JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1820 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x17F3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1820 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1820 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1820 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1805 JUMP JUMPDEST POP PUSH2 0x182C SWAP3 SWAP2 POP PUSH2 0x18A4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x183C SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x185E JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1820 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1877 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x1820 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1820 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1820 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1889 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x182C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18A5 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18E0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x18FB JUMPI PUSH2 0x18FB PUSH2 0x1D52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1923 JUMPI PUSH2 0x1923 PUSH2 0x1D52 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x193B JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP3 DUP4 ADD PUSH1 0x20 ADD SWAP4 SWAP1 SWAP4 MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1968 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1971 DUP3 PUSH2 0x18B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x198A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1993 DUP4 PUSH2 0x18B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x19A1 PUSH1 0x20 DUP5 ADD PUSH2 0x18B9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19BC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x19C5 DUP4 PUSH2 0x18B9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19E4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1971 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A04 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A22 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A40 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A53 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1A61 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1A72 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP7 POP DUP1 SWAP6 POP POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1A96 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1AA3 DUP9 DUP3 DUP10 ADD PUSH2 0x18D0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AC2 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1AF6 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1ADA JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1B07 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLOAD DUP3 PUSH1 0x1 DUP3 DUP2 SHR SWAP2 POP DUP1 DUP4 AND DUP1 PUSH2 0x1B38 JUMPI PUSH1 0x7F DUP4 AND SWAP3 POP JUMPDEST PUSH1 0x20 DUP1 DUP5 LT DUP3 EQ ISZERO PUSH2 0x1B58 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1B6C JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1B7D JUMPI PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0xFF NOT DUP7 AND DUP10 MSTORE DUP5 DUP10 ADD SWAP7 POP PUSH2 0x1BA9 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP9 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1BA1 JUMPI DUP2 SLOAD DUP12 DUP3 ADD MSTORE SWAP1 DUP6 ADD SWAP1 DUP4 ADD PUSH2 0x1B88 JUMP JUMPDEST POP POP DUP5 DUP10 ADD SWAP7 POP JUMPDEST POP SWAP5 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP9 DUP3 MSTORE DUP8 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xC0 PUSH1 0x40 DUP4 ADD MSTORE DUP6 PUSH1 0xC0 DUP4 ADD MSTORE DUP6 DUP8 PUSH1 0xE0 DUP5 ADD CALLDATACOPY DUP1 PUSH1 0xE0 DUP8 DUP5 ADD ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP8 ADD AND DUP3 ADD DUP6 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 DUP3 SUB ADD PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1C06 PUSH1 0xE0 DUP3 ADD DUP7 PUSH2 0x1AD1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0xA0 DUP4 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x1971 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AD1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206D75737420626520676F7665726E616E636520616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1C8B JUMPI PUSH2 0x1C8B PUSH2 0x1D3C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1CAB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CCA JUMPI PUSH2 0x1CCA PUSH2 0x1D3C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1CE1 JUMPI PUSH2 0x1CE1 PUSH2 0x1D3C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1CFA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1D1B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1D35 JUMPI PUSH2 0x1D35 PUSH2 0x1D3C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 SWAP5 0x49 SUB 0xAD DIV JUMPDEST GT SWAP11 0xB3 INVALID GT 0xE3 DUP4 0x4D LOG1 ADDRESS SWAP1 SWAP7 0xFB 0x21 NOT SWAP8 SSTORE PUSH10 0x503BE54FF38C3564736F PUSH13 0x63430008030033000000000000 ",
              "sourceMap": "449:19790:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3624:381;;;;;;:::i;:::-;;:::i;:::-;;19482:97;19532:7;19566:5;-1:-1:-1;;;;;19566:5:0;19482:97;;;-1:-1:-1;;;;;5398:55:2;;;5380:74;;5368:2;5353:18;19482:97:0;;;;;;;;16783:223;;;;;;:::i;:::-;-1:-1:-1;;;;;16939:24:0;;;;16913:7;16939:24;;;:13;:24;;;;;;;;:60;;;:50;;;;:60;;;;;16783:223;;;;13918:25:2;;;13906:2;13891:18;16783:223:0;13873:76:2;19716:103:0;19796:16;;19716:103;;14326:484;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;6054:55:2;;;6036:74;;6153:14;;6146:22;6141:2;6126:18;;6119:50;6009:18;14326:484:0;5991:184:2;689:28:0;;;;;;16263:182;;;;;;:::i;:::-;;:::i;15930:97::-;16007:13;;15930:97;;8179:1265;;;;;;:::i;:::-;;:::i;15581:183::-;;;;;;:::i;:::-;-1:-1:-1;;;;;15711:24:0;15681:7;15711:24;;;:13;:24;;;;;:46;;;;15581:183;500:25;;;;;-1:-1:-1;;;;;500:25:0;;;6282:876;;;;;;:::i;:::-;;:::i;4186:363::-;;;;;;:::i;:::-;;:::i;9830:2018::-;;;;;;:::i;:::-;;:::i;531:26::-;;;;;;796:51;;;;;;17124:93;17199:11;;17124:93;;13500:98;13581:10;;-1:-1:-1;;;;;13581:10:0;13500:98;;17624:497;;;;;;:::i;:::-;-1:-1:-1;;;;;17861:22:0;17724:7;17861:22;;;:13;:22;;;;;:32;;17907:36;;;;17957;;;;18007:44;;;;18065:39;;;;;17861:32;;17907:36;;17957;;18007:44;;17624:497;;;;;14213:25:2;;;14269:2;14254:18;;14247:34;;;;14297:18;;;14290:34;;;;14355:2;14340:18;;14333:34;14398:3;14383:19;;14376:35;14200:3;14185:19;17624:497:0;14167:250:2;13816:172:0;;;;;;:::i;:::-;13916:7;13946:17;;;:7;:17;;;;;:35;;13816:172;7314:468;;;;;;:::i;:::-;;:::i;12671:206::-;;;;;;:::i;:::-;12791:7;12821:17;;;:7;:17;;;;;;;;:49;;;:37;;;;:49;;;;;;12671:206;596:31;;;;;;19141:204;;;;;;:::i;:::-;19264:7;19294:17;;;:7;:17;;;;;;;;:44;;;:32;;;;:44;;;;;;19141:204;13088:317;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11911:451::-;;;:::i;18283:107::-;18365:18;;18283:107;;20042:195;;;;;;:::i;:::-;;:::i;4695:313::-;;;;;;:::i;:::-;;:::i;5124:894::-;;;;;;:::i;:::-;;:::i;18606:193::-;;;;;;:::i;:::-;;:::i;15170:203::-;;;;;;:::i;:::-;15287:7;15317:17;;;:7;:17;;;;;;;;:49;;;:37;;;;:49;;;;;-1:-1:-1;;;;;15317:49:0;;15170:203;475:19;;;;;-1:-1:-1;;;;;475:19:0;;;3624:381;3729:10;;-1:-1:-1;;;;;3729:10:0;3715;:24;3707:70;;;;-1:-1:-1;;;3707:70:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;3808:35:0;;3787:109;;;;-1:-1:-1;;;3787:109:0;;11681:2:2;3787:109:0;;;11663:21:2;11720:2;11700:18;;;11693:30;11759:29;11739:18;;;11732:57;11806:18;;3787:109:0;11653:177:2;3787:109:0;3906:10;:34;;-1:-1:-1;;;;;;3906:34:0;-1:-1:-1;;;;;3906:34:0;;;;;;;;3955:43;;5380:74:2;;;3955:43:0;;5368:2:2;5353:18;3955:43:0;;;;;;;;3624:381;:::o;14326:484::-;14437:7;14485:17;;;:7;:17;;;;;;;;:44;;;:32;;:44;;;;;;14437:7;;;;14485:49;:158;;;;-1:-1:-1;14633:9:0;;;;;;;;;-1:-1:-1;14633:9:0;;;;14560:17;;;:7;:17;;;;;:46;;;:34;;:46;;;;;14550:57;;14623:20;;14550:57;;;:::i;:::-;;;;;;;;:93;14485:158;:237;;;;-1:-1:-1;14720:1:0;14659:17;;;:7;:17;;;;;;;;:49;;;:37;;:49;;;;;;-1:-1:-1;;;;;14659:49:0;:63;;14485:237;14740:17;;;;:7;:17;;;;;;;;:49;;;:37;;;;:49;;;;;;;-1:-1:-1;;;;;14740:49:0;;14466:256;;-1:-1:-1;;;14326:484:0:o;16263:182::-;-1:-1:-1;;;;;16397:24:0;;16367:7;16397:24;;;:13;:24;;;;;:41;;;16263:182;;;;:::o;8179:1265::-;8320:10;;8275:7;;-1:-1:-1;;;;;8320:10:0;8306;:24;8298:71;;;;-1:-1:-1;;;8298:71:0;;8299:2:2;8298:71:0;;;8281:21:2;8338:2;8318:18;;;8311:30;8377:34;8357:18;;;8350:62;-1:-1:-1;;;8428:18:2;;;8421:32;8470:19;;8298:71:0;8271:224:2;8298:71:0;-1:-1:-1;;;;;8407:24:0;;8379:25;8407:24;;;:13;:24;;;;;8486:21;;;;8462;;;;8407:24;;8379:25;8462:45;;8486:21;8462:45;:::i;:::-;:49;8441:115;;;;-1:-1:-1;;;8441:115:0;;11333:2:2;8441:115:0;;;11315:21:2;11372:2;11352:18;;;11345:30;-1:-1:-1;;;11391:18:2;;;11384:49;11450:18;;8441:115:0;11305:169:2;8441:115:0;8566:20;8625:11;;8600:7;:21;;;:36;8596:694;;8667:11;;8652:26;;8717:11;;8692:7;:21;;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;8596:694:0;;-1:-1:-1;8596:694:0;;8811:11;;8786:7;:21;;;8762:7;:21;;;:45;;;;:::i;:::-;:60;8745:545;;-1:-1:-1;8862:11:0;;;8926:21;;;;8912:35;;8862:11;8912:35;:::i;:::-;8887:7;:21;;;:60;;;;;;;:::i;:::-;;;;-1:-1:-1;;8995:21:0;;;;;8981:11;;:35;;8995:21;8981:35;:::i;:::-;8961:16;;:55;;;;;;;:::i;:::-;;;;-1:-1:-1;;9054:1:0;9030:21;;;:25;8745:545;;;9125:7;:21;;;9101:7;:21;;;:45;;;;:::i;:::-;9086:60;;9180:7;:21;;;9160:16;;:41;;;;;;;:::i;:::-;;;;-1:-1:-1;;9239:1:0;9215:21;;;:25;;;9254:21;;;:25;8745:545;9299:5;;:40;;-1:-1:-1;;;9299:40:0;;-1:-1:-1;;;;;6372:55:2;;;9299:40:0;;;6354:74:2;6444:18;;;6437:34;;;9299:5:0;;;;:14;;6327:18:2;;9299:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9354:52:0;;;-1:-1:-1;;;;;5746:15:2;;;5728:34;;5798:15;;5793:2;5778:18;;5771:43;5830:18;;;5823:34;;;9354:52:0;;5655:2:2;5640:18;9354:52:0;;;;;;;9424:12;8179:1265;-1:-1:-1;;;;8179:1265:0:o;6282:876::-;6382:10;;-1:-1:-1;;;;;6382:10:0;6368;:24;6360:70;;;;-1:-1:-1;;;6360:70:0;;;;;;;:::i;:::-;6440:18;6461:17;;;:7;:17;;;;;;;;6505:30;;;:18;;;:30;;;;;;;6567:22;;6461:17;;6505:30;;6567:22;;;;-1:-1:-1;;;6567:22:0;;;;;;;;;;;;;;;;;6553:10;:36;6545:66;;;;-1:-1:-1;;;6545:66:0;;9462:2:2;6545:66:0;;;9444:21:2;9501:2;9481:18;;;9474:30;-1:-1:-1;;;9520:18:2;;;9513:47;9577:18;;6545:66:0;9434:167:2;6545:66:0;6705:6;6687:189;6718:21;;:25;;6742:1;;6718:25;:::i;:::-;6713:2;:30;6687:189;;;6786:3;6801:6;:2;6806:1;6801:6;:::i;:::-;6786:22;;;;;;-1:-1:-1;;;6786:22:0;;;;;;;;;;;;;;;;;6765:3;:14;;6780:2;6765:18;;;;;;-1:-1:-1;;;6765:18:0;;;;;;;;;;;;;;;;:43;;;;6864:1;6822:3;:18;;:38;6841:3;:14;;6856:2;6841:18;;;;;;-1:-1:-1;;;6841:18:0;;;;;;;;;;;;;;;;;6822:38;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;-1:-1:-1;6745:4:0;;-1:-1:-1;6745:4:0;;;:::i;:::-;;;;6687:189;;;-1:-1:-1;6955:21:0;;6940:3;;6955:25;;6979:1;;6955:25;:::i;:::-;6940:41;;;;;;-1:-1:-1;;;6940:41:0;;;;;;;;;;;;;;;;;6933:48;6991:20;;:3;;:20;;;-1:-1:-1;;;6991:20:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6991:20:0;;;;;;;;;;;;7021:37;;;;;;;;;;;;:32;;;:20;;;:32;;;;;:37;;;;:32;:37;;:::i;:::-;-1:-1:-1;7101:1:0;7068:30;;;:18;;;:30;;;;;;;;:34;;;;7117;;6656:25:2;;;6697:18;;;6690:34;;;7117::0;;6629:18:2;7117:34:0;;;;;;;6282:876;;;;:::o;4186:363::-;4283:10;;-1:-1:-1;;;;;4283:10:0;4269;:24;4261:70;;;;-1:-1:-1;;;4261:70:0;;;;;;;:::i;:::-;4382:1;4362:17;:21;4341:108;;;;-1:-1:-1;;;4341:108:0;;12440:2:2;4341:108:0;;;12422:21:2;12479:2;12459:18;;;12452:30;12518:34;12498:18;;;12491:62;-1:-1:-1;;;12569:18:2;;;12562:38;12617:19;;4341:108:0;12412:230:2;4341:108:0;4459:13;:33;;;4507:35;;13918:25:2;;;4507:35:0;;13906:2:2;13891:18;4507:35:0;13873:76:2;9830:2018:0;9990:18;10011:17;;;:7;:17;;;;;10069:21;;10059:31;;;:46;;-1:-1:-1;10094:11:0;;10059:46;10038:125;;;;-1:-1:-1;;;10038:125:0;;10562:2:2;10038:125:0;;;10544:21:2;;;10581:18;;;10574:30;10640:34;10620:18;;;10613:62;10692:18;;10038:125:0;10534:182:2;10038:125:0;10215:10;10173:25;10201;;;:13;:25;;;;;10282:11;;10257:21;;;;:36;;10236:124;;;;-1:-1:-1;;;10236:124:0;;10923:2:2;10236:124:0;;;10905:21:2;10962:2;10942:18;;;10935:30;11001:34;10981:18;;;10974:62;-1:-1:-1;;;11052:18:2;;;11045:39;11101:19;;10236:124:0;10895:231:2;10236:124:0;10577:11;;10553:7;:21;;;:35;;;;:::i;:::-;10528:13;;:20;;10544:4;10528:20;:::i;:::-;10527:62;;;;:::i;:::-;10471:29;;;;10453:47;;:15;:47;:::i;:::-;10452:56;;10504:4;10452:56;:::i;:::-;:137;10431:225;;;;-1:-1:-1;;;10431:225:0;;13208:2:2;10431:225:0;;;13190:21:2;13247:2;13227:18;;;13220:30;13286:34;13266:18;;;13259:62;-1:-1:-1;;;13337:18:2;;;13330:39;13386:19;;10431:225:0;13180:231:2;10431:225:0;10699:21;;;;;;10687:33;;;:61;;-1:-1:-1;10745:3:0;10724:24;;;10687:61;10666:137;;;;-1:-1:-1;;;10666:137:0;;9104:2:2;10666:137:0;;;9086:21:2;9143:2;9123:18;;;9116:30;9182:31;9162:18;;;9155:59;9231:18;;10666:137:0;9076:179:2;10666:137:0;10845:15;10813:29;;;:47;;;10999:1;10947:40;;;:23;;;:40;;;;;;-1:-1:-1;;;;;10947:40:0;:54;10926:131;;;;-1:-1:-1;;;10926:131:0;;12849:2:2;10926:131:0;;;12831:21:2;12888:2;12868:18;;;12861:30;12927:32;12907:18;;;12900:60;12977:18;;10926:131:0;12821:180:2;10926:131:0;11199:21;;11180:15;11199:14;11161:35;;;:18;;;;:35;;;;;;;;:59;;;11230:36;;;;;;;;;;;;;;;;;11276:40;;;:23;;;:40;;;;;11319:12;11276:55;;11341:20;;;:37;;;;;:46;;11381:6;;11341:46;:::i;:::-;-1:-1:-1;11421:15:0;11397:40;;;;:23;;;;:40;;;;;:53;;-1:-1:-1;;;;;;11397:53:0;11440:10;11397:53;;;11541:18;:36;;;;11587:24;;;:26;;;;;;:::i;:::-;;;;-1:-1:-1;;11623:43:0;;;;:33;;;:43;;;;;:45;;;;;;:::i;:::-;;;;;;11683:158;11706:8;11728:15;11757:6;;11777;11797:10;11821;11683:158;;;;;;;;;;;;:::i;:::-;;;;;;;;9830:2018;;;;;;;:::o;7314:468::-;7424:10;7382:25;7410;;;:13;:25;;;;;7466:21;;;;:32;-1:-1:-1;7466:32:0;7445:106;;;;-1:-1:-1;;;7445:106:0;;13618:2:2;7445:106:0;;;13600:21:2;13657:2;13637:18;;;13630:30;13696:29;13676:18;;;13669:57;13743:18;;7445:106:0;13590:177:2;7445:106:0;7581:15;7561:35;;7606:21;;;:32;;7631:7;;7606:21;7561:17;;7606:32;;7631:7;;7606:32;:::i;:::-;;;;;;;;7673:7;7648;:21;;;:32;;;;;;;:::i;:::-;;;;;;;;7710:7;7690:16;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;7732:43:0;;;7755:10;6354:74:2;;6459:2;6444:18;;6437:34;;;7732:43:0;;6327:18:2;7732:43:0;;;;;;;;7314:468;;:::o;13088:317::-;13225:17;;;;:7;:17;;;;;13327:35;;13178:12;;13225:34;;;;:17;;13327:39;;13365:1;;13327:39;:::i;:::-;13277:107;;;;;;-1:-1:-1;;;13277:107:0;;;;;;;;;;;;;;;;;13225:173;;;;;;;;;;;13206:192;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13088:317;;;:::o;11911:451::-;11992:10;11955:20;11978:25;;;:13;:25;;;;;12108:12;;12124:6;;12090:30;;:15;:30;:::i;:::-;:40;;12082:71;;;;-1:-1:-1;;;12082:71:0;;10215:2:2;12082:71:0;;;10197:21:2;10254:2;10234:18;;;10227:30;-1:-1:-1;;;10273:18:2;;;10266:48;10331:18;;12082:71:0;10187:168:2;12082:71:0;12190:1;12171:2;:16;;;:20;12163:67;;;;-1:-1:-1;;;12163:67:0;;12037:2:2;12163:67:0;;;12019:21:2;12076:2;12056:18;;;12049:30;12115:34;12095:18;;;12088:62;-1:-1:-1;;;12166:18:2;;;12159:32;12208:19;;12163:67:0;12009:224:2;12163:67:0;12240:5;;12267:16;;;;12240:44;;-1:-1:-1;;;12240:44:0;;12255:10;12240:44;;;6354:74:2;6444:18;;;6437:34;;;;-1:-1:-1;;;;;12240:5:0;;;;:14;;6327:18:2;;12240:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12313:1:0;12294:16;;;:20;12329:26;;12344:10;5380:74:2;;12329:26:0;;5368:2:2;5353:18;12329:26:0;5335:125:2;20042:195:0;20184:17;;;;:7;:17;;;;;;;;:46;;;:34;;:46;;;;;20177:53;;20149:12;;20184:46;20177:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20042:195;;;;:::o;4695:313::-;4788:10;;-1:-1:-1;;;;;4788:10:0;4774;:24;4766:70;;;;-1:-1:-1;;;4766:70:0;;;;;;;:::i;:::-;4872:1;4854:15;:19;4846:70;;;;-1:-1:-1;;;4846:70:0;;9808:2:2;4846:70:0;;;9790:21:2;9847:2;9827:18;;;9820:30;9886:34;9866:18;;;9859:62;-1:-1:-1;;;9937:18:2;;;9930:36;9983:19;;4846:70:0;9780:228:2;4846:70:0;4926:11;:29;;;4970:31;;13918:25:2;;;4970:31:0;;13906:2:2;13891:18;4970:31:0;13873:76:2;5124:894:0;5224:10;5182:25;5210;;;:13;:25;;;;;5249:21;;;;:25;5245:553;;5319:7;5294;:21;;;:32;5290:404;;5371:7;5346;:21;;;:32;;;;;;;:::i;:::-;;;;-1:-1:-1;5290:404:0;;-1:-1:-1;5290:404:0;;5446:5;;5575:21;;;;-1:-1:-1;;;;;5446:5:0;;;;:18;;5490:10;;5534:4;;5565:31;;:7;:31;:::i;:::-;5446:172;;-1:-1:-1;;;;;;5446:172:0;;;;;;;-1:-1:-1;;;;;5746:15:2;;;5446:172:0;;;5728:34:2;5798:15;;;;5778:18;;;5771:43;5830:18;;;5823:34;5640:18;;5446:172:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5417:219;;;;;;5678:1;5654:21;;;:25;5290:404;5245:553;;;5732:5;;:54;;-1:-1:-1;;;5732:54:0;;5751:10;5732:54;;;5728:34:2;5771:4:0;5778:18:2;;;5771:43;5830:18;;;5823:34;;;-1:-1:-1;;;;;5732:5:0;;;;:18;;5640::2;;5732:54:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5724:63;;;;;;5827:15;5807:35;;5897:21;;;:32;;5922:7;;5897:21;5807:17;;5897:32;;5922:7;;5897:32;:::i;:::-;;;;;;;;5959:7;5939:16;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;5981:30:0;;;5991:10;6354:74:2;;6459:2;6444:18;;6437:34;;;5981:30:0;;6327:18:2;5981:30:0;6309:168:2;18606:193:0;18726:7;18756:17;;;:7;:17;;;;;:36;;18785:6;;18756:36;;;;-1:-1:-1;;;18756:36:0;;;;;;;;;;;;;;;;;18749:43;;18606:193;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:196:2;82:20;;-1:-1:-1;;;;;131:54:2;;121:65;;111:2;;200:1;197;190:12;215:738;;310:3;303:4;295:6;291:17;287:27;277:2;;332:5;325;318:20;277:2;372:6;359:20;398:18;435:2;431;428:10;425:2;;;441:18;;:::i;:::-;516:2;510:9;484:2;570:13;;-1:-1:-1;;566:22:2;;;590:2;562:31;558:40;546:53;;;614:18;;;634:22;;;611:46;608:2;;;660:18;;:::i;:::-;700:10;696:2;689:22;735:2;727:6;720:18;781:3;774:4;769:2;761:6;757:15;753:26;750:35;747:2;;;802:5;795;788:20;747:2;870;863:4;855:6;851:17;844:4;836:6;832:17;819:54;893:15;;;910:4;889:26;882:41;;;;-1:-1:-1;897:6:2;267:686;-1:-1:-1;;;267:686:2:o;958:196::-;;1070:2;1058:9;1049:7;1045:23;1041:32;1038:2;;;1091:6;1083;1076:22;1038:2;1119:29;1138:9;1119:29;:::i;:::-;1109:39;1028:126;-1:-1:-1;;;1028:126:2:o;1159:270::-;;;1288:2;1276:9;1267:7;1263:23;1259:32;1256:2;;;1309:6;1301;1294:22;1256:2;1337:29;1356:9;1337:29;:::i;:::-;1327:39;;1385:38;1419:2;1408:9;1404:18;1385:38;:::i;:::-;1375:48;;1246:183;;;;;:::o;1434:264::-;;;1563:2;1551:9;1542:7;1538:23;1534:32;1531:2;;;1584:6;1576;1569:22;1531:2;1612:29;1631:9;1612:29;:::i;:::-;1602:39;1688:2;1673:18;;;;1660:32;;-1:-1:-1;;;1521:177:2:o;1703:297::-;;1823:2;1811:9;1802:7;1798:23;1794:32;1791:2;;;1844:6;1836;1829:22;1791:2;1881:9;1875:16;1934:5;1927:13;1920:21;1913:5;1910:32;1900:2;;1961:6;1953;1946:22;2005:190;;2117:2;2105:9;2096:7;2092:23;2088:32;2085:2;;;2138:6;2130;2123:22;2085:2;-1:-1:-1;2166:23:2;;2075:120;-1:-1:-1;2075:120:2:o;2200:986::-;;;;;;2391:3;2379:9;2370:7;2366:23;2362:33;2359:2;;;2413:6;2405;2398:22;2359:2;2454:9;2441:23;2431:33;;2515:2;2504:9;2500:18;2487:32;2538:18;2579:2;2571:6;2568:14;2565:2;;;2600:6;2592;2585:22;2565:2;2643:6;2632:9;2628:22;2618:32;;2688:7;2681:4;2677:2;2673:13;2669:27;2659:2;;2715:6;2707;2700:22;2659:2;2760;2747:16;2786:2;2778:6;2775:14;2772:2;;;2807:6;2799;2792:22;2772:2;2857:7;2852:2;2843:6;2839:2;2835:15;2831:24;2828:37;2825:2;;;2883:6;2875;2868:22;2825:2;2919;2915;2911:11;2901:21;;2941:6;2931:16;;;2994:2;2983:9;2979:18;2966:32;2956:42;;3051:2;3040:9;3036:18;3023:32;3007:48;;3080:2;3070:8;3067:16;3064:2;;;3101:6;3093;3086:22;3064:2;;3129:51;3172:7;3161:8;3150:9;3146:24;3129:51;:::i;:::-;3119:61;;;2349:837;;;;;;;;:::o;3191:258::-;;;3320:2;3308:9;3299:7;3295:23;3291:32;3288:2;;;3341:6;3333;3326:22;3288:2;-1:-1:-1;;3369:23:2;;;3439:2;3424:18;;;3411:32;;-1:-1:-1;3278:171:2:o;3649:475::-;;3728:5;3722:12;3755:6;3750:3;3743:19;3780:3;3792:162;3806:6;3803:1;3800:13;3792:162;;;3868:4;3924:13;;;3920:22;;3914:29;3896:11;;;3892:20;;3885:59;3821:12;3792:162;;;3972:6;3969:1;3966:13;3963:2;;;4038:3;4031:4;4022:6;4017:3;4013:16;4009:27;4002:40;3963:2;-1:-1:-1;4106:2:2;4085:15;-1:-1:-1;;4081:29:2;4072:39;;;;4113:4;4068:50;;3698:426;-1:-1:-1;;3698:426:2:o;4129:1100::-;;4284:3;4319:6;4313:13;4349:3;4371:1;4399:9;4395:2;4391:18;4381:28;;4459:2;4448:9;4444:18;4481;4471:2;;4525:4;4517:6;4513:17;4503:27;;4471:2;4551;4599;4591:6;4588:14;4568:18;4565:38;4562:2;;;-1:-1:-1;;;4626:33:2;;4682:4;4679:1;4672:15;4712:4;4633:3;4700:17;4562:2;4743:18;4770:104;;;;4888:1;4883:321;;;;4736:468;;4770:104;-1:-1:-1;;4803:24:2;;4791:37;;4848:16;;;;-1:-1:-1;4770:104:2;;4883:321;14422:126;14487:17;;;14537:4;14521:21;;4977:3;4993:165;5007:6;5004:1;5001:13;4993:165;;;5085:14;;5072:11;;;5065:35;5128:16;;;;5022:10;;4993:165;;;4997:3;;5187:6;5182:3;5178:16;5171:23;;4736:468;-1:-1:-1;5220:3:2;;4263:966;-1:-1:-1;;;;;;;;4263:966:2:o;6735:889::-;;7050:6;7039:9;7032:25;7093:6;7088:2;7077:9;7073:18;7066:34;7136:3;7131:2;7120:9;7116:18;7109:31;7177:6;7171:3;7160:9;7156:19;7149:35;7235:6;7227;7221:3;7210:9;7206:19;7193:49;7292:4;7286:3;7277:6;7266:9;7262:22;7258:32;7251:46;7356:2;7352:7;7347:2;7339:6;7335:15;7331:29;7320:9;7316:45;7397:6;7392:2;7381:9;7377:18;7370:34;7465:3;7453:9;7449:2;7445:18;7441:28;7435:3;7424:9;7420:19;7413:57;7487:38;7520:3;7516:2;7512:12;7504:6;7487:38;:::i;:::-;7479:46;;;-1:-1:-1;;;;;7566:6:2;7562:55;7556:3;7545:9;7541:19;7534:84;7022:602;;;;;;;;;;:::o;7629:217::-;;7776:2;7765:9;7758:21;7796:44;7836:2;7825:9;7821:18;7813:6;7796:44;:::i;8500:397::-;8702:2;8684:21;;;8741:2;8721:18;;;8714:30;8780:34;8775:2;8760:18;;8753:62;-1:-1:-1;;;8846:2:2;8831:18;;8824:31;8887:3;8872:19;;8674:223::o;14553:128::-;;14624:1;14620:6;14617:1;14614:13;14611:2;;;14630:18;;:::i;:::-;-1:-1:-1;14666:9:2;;14601:80::o;14686:217::-;;14752:1;14742:2;;-1:-1:-1;;;14777:31:2;;14831:4;14828:1;14821:15;14859:4;14784:1;14849:15;14742:2;-1:-1:-1;14888:9:2;;14732:171::o;14908:168::-;;15014:1;15010;15006:6;15002:14;14999:1;14996:21;14991:1;14984:9;14977:17;14973:45;14970:2;;;15021:18;;:::i;:::-;-1:-1:-1;15061:9:2;;14960:116::o;15081:125::-;;15149:1;15146;15143:8;15140:2;;;15154:18;;:::i;:::-;-1:-1:-1;15191:9:2;;15130:76::o;15211:380::-;15290:1;15286:12;;;;15333;;;15354:2;;15408:4;15400:6;15396:17;15386:27;;15354:2;15461;15453:6;15450:14;15430:18;15427:38;15424:2;;;15507:10;15502:3;15498:20;15495:1;15488:31;15542:4;15539:1;15532:15;15570:4;15567:1;15560:15;15424:2;;15266:325;;;:::o;15596:135::-;;-1:-1:-1;;15656:17:2;;15653:2;;;15676:18;;:::i;:::-;-1:-1:-1;15723:1:2;15712:13;;15643:88::o;15736:127::-;15797:10;15792:3;15788:20;15785:1;15778:31;15828:4;15825:1;15818:15;15852:4;15849:1;15842:15;15868:127;15929:10;15924:3;15920:20;15917:1;15910:31;15960:4;15957:1;15950:15;15984:4;15981:1;15974:15"
            },
            "methodIdentifiers": {
              "changeGovernanceAddress(address)": "0636769e",
              "changeReportingLock(uint256)": "5d183cfa",
              "changeStakeAmount(uint256)": "ca79b5a9",
              "depositStake(uint256)": "cb82cc8f",
              "getBlockNumberByTimestamp(bytes32,uint256)": "935408d0",
              "getCurrentValue(bytes32)": "adf1639d",
              "getGovernanceAddress()": "73252494",
              "getNewValueCountbyQueryId(bytes32)": "77b03e0d",
              "getReportDetails(bytes32,uint256)": "2b6696a7",
              "getReporterByTimestamp(bytes32,uint256)": "e07c5486",
              "getReporterLastTimestamp(address)": "50005b83",
              "getReportingLock()": "460c33a2",
              "getReportsSubmittedByAddress(address)": "3878293e",
              "getReportsSubmittedByAddressAndQueryId(address,bytes32)": "11938e08",
              "getStakeAmount()": "722580b6",
              "getStakerInfo(address)": "733bdef0",
              "getTimeOfLastNewValue()": "c0f95d52",
              "getTimestampIndexByTimestamp(bytes32,uint256)": "9d9b16ed",
              "getTimestampbyQueryIdandIndex(bytes32,uint256)": "ce5e11bf",
              "getTokenAddress()": "10fe9ae8",
              "getTotalStakeAmount()": "14c2a1bc",
              "governance()": "5aa6e675",
              "removeValue(bytes32,uint256)": "5b5edcfc",
              "reportingLock()": "3321fc41",
              "requestStakingWithdraw(uint256)": "8929f4c6",
              "retrieveData(bytes32,uint256)": "c5958af9",
              "slashReporter(address,address)": "4dfc2a34",
              "stakeAmount()": "60c7dc47",
              "submitValue(bytes32,bytes,uint256,bytes)": "5eaa9ced",
              "timeOfLastNewValue()": "6fd4f229",
              "token()": "fc0c546a",
              "totalStakeAmount()": "94409a56",
              "withdrawStake()": "bed9d861"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_governance\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reportingLock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newGovernanceAddress\",\"type\":\"address\"}],\"name\":\"NewGovernanceAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_value\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_queryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_reporter\",\"type\":\"address\"}],\"name\":\"NewReport\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newReportingLock\",\"type\":\"uint256\"}],\"name\":\"NewReportingLock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newStakeAmount\",\"type\":\"uint256\"}],\"name\":\"NewStakeAmount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"NewStaker\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_reporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_slashAmount\",\"type\":\"uint256\"}],\"name\":\"ReporterSlashed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"ValueRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newGovernanceAddress\",\"type\":\"address\"}],\"name\":\"changeGovernanceAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newReportingLock\",\"type\":\"uint256\"}],\"name\":\"changeReportingLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newStakeAmount\",\"type\":\"uint256\"}],\"name\":\"changeStakeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getBlockNumberByTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"}],\"name\":\"getCurrentValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGovernanceAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"}],\"name\":\"getNewValueCountbyQueryId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getReportDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getReporterByTimestamp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reporter\",\"type\":\"address\"}],\"name\":\"getReporterLastTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReportingLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reporter\",\"type\":\"address\"}],\"name\":\"getReportsSubmittedByAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reporter\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"}],\"name\":\"getReportsSubmittedByAddressAndQueryId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"getStakerInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeOfLastNewValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getTimestampIndexByTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getTimestampbyQueryIdandIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"removeValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reportingLock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"requestStakingWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"retrieveData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reporter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"slashReporter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_value\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_queryData\",\"type\":\"bytes\"}],\"name\":\"submitValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeOfLastNewValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Tellor Inc.\",\"details\":\"This is a streamlined Tellor oracle system which handles staking, reporting, slashing, and user data getters in one contract. This contract is controlled by a single address known as 'governance', which could be an externally owned account or a contract, allowing for a flexible, modular design.\",\"kind\":\"dev\",\"methods\":{\"changeGovernanceAddress(address)\":{\"details\":\"Changes governance address\",\"params\":{\"_newGovernanceAddress\":\"new governance address\"}},\"changeReportingLock(uint256)\":{\"details\":\"Changes base amount of time (seconds) before reporter is allowed to report again\",\"params\":{\"_newReportingLock\":\"new reporter lock time in seconds\"}},\"changeStakeAmount(uint256)\":{\"details\":\"Changes amount of token stake required to report values\",\"params\":{\"_newStakeAmount\":\"new reporter stake amount\"}},\"constructor\":{\"details\":\"Initializes system parameters\",\"params\":{\"_governance\":\"address which controls system\",\"_reportingLock\":\"base amount of time (seconds) before reporter is able to report again\",\"_stakeAmount\":\"amount of token needed to report oracle values\",\"_token\":\"address of token used for staking\"}},\"depositStake(uint256)\":{\"details\":\"Allows a reporter to submit stake\",\"params\":{\"_amount\":\"amount of tokens to stake\"}},\"getBlockNumberByTimestamp(bytes32,uint256)\":{\"details\":\"Returns the block number at a given timestamp\",\"params\":{\"_queryId\":\"is ID of the specific data feed\",\"_timestamp\":\"is the timestamp to find the corresponding block number for\"},\"returns\":{\"_0\":\"uint256 block number of the timestamp for the given data ID\"}},\"getCurrentValue(bytes32)\":{\"details\":\"Returns the current value of a data feed given a specific ID\",\"params\":{\"_queryId\":\"is the ID of the specific data feed\"},\"returns\":{\"_0\":\"bytes memory of the current value of data\"}},\"getGovernanceAddress()\":{\"details\":\"Returns governance address\",\"returns\":{\"_0\":\"address governance\"}},\"getNewValueCountbyQueryId(bytes32)\":{\"details\":\"Counts the number of values that have been submitted for the request.\",\"params\":{\"_queryId\":\"the id to look up\"},\"returns\":{\"_0\":\"uint256 count of the number of values received for the id\"}},\"getReportDetails(bytes32,uint256)\":{\"details\":\"Returns reporter address and whether a value was removed for a given queryId and timestamp\",\"params\":{\"_queryId\":\"the id to look up\",\"_timestamp\":\"is the timestamp of the value to look up\"},\"returns\":{\"_0\":\"address reporter who submitted the value\",\"_1\":\"bool true if the value was removed\"}},\"getReporterByTimestamp(bytes32,uint256)\":{\"details\":\"Returns the address of the reporter who submitted a value for a data ID at a specific time\",\"params\":{\"_queryId\":\"is ID of the specific data feed\",\"_timestamp\":\"is the timestamp to find a corresponding reporter for\"},\"returns\":{\"_0\":\"address of the reporter who reported the value for the data ID at the given timestamp\"}},\"getReporterLastTimestamp(address)\":{\"details\":\"Returns the timestamp of the reporter's last submission\",\"params\":{\"_reporter\":\"is address of the reporter\"},\"returns\":{\"_0\":\"uint256 timestamp of the reporter's last submission\"}},\"getReportingLock()\":{\"details\":\"Returns the reporting lock time, the amount of time a reporter must wait to submit again\",\"returns\":{\"_0\":\"uint256 reporting lock time\"}},\"getReportsSubmittedByAddress(address)\":{\"details\":\"Returns the number of values submitted by a specific reporter address\",\"params\":{\"_reporter\":\"is the address of a reporter\"},\"returns\":{\"_0\":\"uint256 of the number of values submitted by the given reporter\"}},\"getReportsSubmittedByAddressAndQueryId(address,bytes32)\":{\"details\":\"Returns the number of values submitted to a specific queryId by a specific reporter address\",\"params\":{\"_queryId\":\"is the ID of the specific data feed\",\"_reporter\":\"is the address of a reporter\"},\"returns\":{\"_0\":\"uint256 of the number of values submitted by the given reporter to the given queryId\"}},\"getStakeAmount()\":{\"details\":\"Returns amount required to report oracle values\",\"returns\":{\"_0\":\"uint256 stake amount\"}},\"getStakerInfo(address)\":{\"details\":\"Allows users to retrieve all information about a staker\",\"params\":{\"_staker\":\"address of staker inquiring about\"},\"returns\":{\"_0\":\"uint startDate of staking\",\"_1\":\"uint current amount staked\",\"_2\":\"uint current amount locked for withdrawal\",\"_3\":\"uint reporter's last reported timestamp\",\"_4\":\"uint total number of reports submitted by reporter\"}},\"getTimeOfLastNewValue()\":{\"details\":\"Returns the timestamp for the last value of any ID from the oracle\",\"returns\":{\"_0\":\"uint256 of timestamp of the last oracle value\"}},\"getTimestampIndexByTimestamp(bytes32,uint256)\":{\"details\":\"Returns the index of a reporter timestamp in the timestamp array for a specific data ID\",\"params\":{\"_queryId\":\"is ID of the specific data feed\",\"_timestamp\":\"is the timestamp to find in the timestamps array\"},\"returns\":{\"_0\":\"uint256 of the index of the reporter timestamp in the array for specific ID\"}},\"getTimestampbyQueryIdandIndex(bytes32,uint256)\":{\"details\":\"Gets the timestamp for the value based on their index\",\"params\":{\"_index\":\"is the value index to look up\",\"_queryId\":\"is the id to look up\"},\"returns\":{\"_0\":\"uint256 timestamp\"}},\"getTokenAddress()\":{\"details\":\"Returns the address of the token used for staking\",\"returns\":{\"_0\":\"address of the token used for staking\"}},\"getTotalStakeAmount()\":{\"details\":\"Returns total amount of token staked for reporting\",\"returns\":{\"_0\":\"uint256 total amount of token staked\"}},\"removeValue(bytes32,uint256)\":{\"details\":\"Removes a value from the oracle. Note: this function is only callable by the Governance contract.\",\"params\":{\"_queryId\":\"is ID of the specific data feed\",\"_timestamp\":\"is the timestamp of the data value to remove\"}},\"requestStakingWithdraw(uint256)\":{\"details\":\"Allows a reporter to request to withdraw their stake\",\"params\":{\"_amount\":\"amount of staked tokens requesting to withdraw\"}},\"retrieveData(bytes32,uint256)\":{\"details\":\"Retrieve value from oracle based on timestamp\",\"params\":{\"_queryId\":\"being requested\",\"_timestamp\":\"to retrieve data/value from\"},\"returns\":{\"_0\":\"bytes value for timestamp submitted\"}},\"slashReporter(address,address)\":{\"details\":\"Slashes a reporter and transfers their stake amount to the given recipient Note: this function is only callable by the governance address.\",\"params\":{\"_recipient\":\"is the address receiving the reporter's stake\",\"_reporter\":\"is the address of the reporter being slashed\"},\"returns\":{\"_0\":\"uint256 amount of token slashed and sent to recipient address\"}},\"submitValue(bytes32,bytes,uint256,bytes)\":{\"details\":\"Allows a reporter to submit a value to the oracle\",\"params\":{\"_nonce\":\"is the current value count for the query id\",\"_queryData\":\"is the data used to fulfill the data query\",\"_queryId\":\"is ID of the specific data feed. Equals keccak256(_queryData) for non-legacy IDs\",\"_value\":\"is the value the user submits to the oracle\"}},\"withdrawStake()\":{\"details\":\"Withdraws a reporter's stake\"}},\"title\":\"TellorFlex\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oldContracts/contracts/TellorFlex.sol\":\"TellorFlex\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"contracts/oldContracts/contracts/TellorFlex.sol\":{\"keccak256\":\"0x6c0fda4681a3324dc6c3681a69752746308cc122b2799ec4517ec13110c52a03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ccdaec68c775b6052368e1770a3108bee2049725aec881b0b21a1f7772503cc\",\"dweb:/ipfs/QmeLxPa15qeusydTZsdAFWQEuqKBSmrdubfuMCZgfbQjzN\"]},\"contracts/oldContracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x9733bf963884d056c234cfb697a9a0121f8436fb8b28a08972b5944ca776c92e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5adb1281d06f9a7602766ec9109866187a913a7b6f0e3435d5b9832735230de\",\"dweb:/ipfs/Qma5wjhUW3Eo3vDoTGG5RjXXs9QQtcozMqYoZtQRVkfRiw\"]}},\"version\":1}"
        }
      },
      "contracts/oldContracts/contracts/interfaces/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "balanceOf(address)": "70a08231",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oldContracts/contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"contracts/oldContracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x9733bf963884d056c234cfb697a9a0121f8436fb8b28a08972b5944ca776c92e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5adb1281d06f9a7602766ec9109866187a913a7b6f0e3435d5b9832735230de\",\"dweb:/ipfs/Qma5wjhUW3Eo3vDoTGG5RjXXs9QQtcozMqYoZtQRVkfRiw\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "contracts/oldContracts/contracts/TellorFlex.sol": {
        "ast": {
          "absolutePath": "contracts/oldContracts/contracts/TellorFlex.sol",
          "exportedSymbols": {
            "IERC20": [
              1264
            ],
            "TellorFlex": [
              1234
            ]
          },
          "id": 1235,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.8",
                ".3"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:0"
            },
            {
              "absolutePath": "contracts/oldContracts/contracts/interfaces/IERC20.sol",
              "file": "./interfaces/IERC20.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1235,
              "sourceUnit": 1265,
              "src": "56:33:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "91:357:0",
                "text": "@author Tellor Inc.\n@title TellorFlex\n@dev This is a streamlined Tellor oracle system which handles staking, reporting,\n slashing, and user data getters in one contract. This contract is controlled\n by a single address known as 'governance', which could be an externally owned\n account or a contract, allowing for a flexible, modular design."
              },
              "fullyImplemented": true,
              "id": 1234,
              "linearizedBaseContracts": [
                1234
              ],
              "name": "TellorFlex",
              "nameLocation": "458:10:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "fc0c546a",
                  "id": 6,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "489:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1234,
                  "src": "475:19:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1264",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 5,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1264,
                      "src": "475:6:0"
                    },
                    "referencedDeclaration": 1264,
                    "src": "475:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1264",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5aa6e675",
                  "id": 8,
                  "mutability": "mutable",
                  "name": "governance",
                  "nameLocation": "515:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1234,
                  "src": "500:25:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "60c7dc47",
                  "id": 10,
                  "mutability": "mutable",
                  "name": "stakeAmount",
                  "nameLocation": "546:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1234,
                  "src": "531:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "531:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "94409a56",
                  "id": 12,
                  "mutability": "mutable",
                  "name": "totalStakeAmount",
                  "nameLocation": "611:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1234,
                  "src": "596:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "596:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "3321fc41",
                  "id": 14,
                  "mutability": "mutable",
                  "name": "reportingLock",
                  "nameLocation": "704:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1234,
                  "src": "689:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "6fd4f229",
                  "id": 18,
                  "mutability": "mutable",
                  "name": "timeOfLastNewValue",
                  "nameLocation": "811:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1234,
                  "src": "796:51:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "expression": {
                      "id": 16,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "832:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "832:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "reports",
                  "nameLocation": "967:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1234,
                  "src": "932:42:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                    "typeString": "mapping(bytes32 => struct TellorFlex.Report)"
                  },
                  "typeName": {
                    "id": 22,
                    "keyType": {
                      "id": 19,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "940:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "932:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                      "typeString": "mapping(bytes32 => struct TellorFlex.Report)"
                    },
                    "valueType": {
                      "id": 21,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 20,
                        "name": "Report",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 48,
                        "src": "951:6:0"
                      },
                      "referencedDeclaration": 48,
                      "src": "951:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                        "typeString": "struct TellorFlex.Report"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "stakerDetails",
                  "nameLocation": "1046:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1234,
                  "src": "1016:43:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$63_storage_$",
                    "typeString": "mapping(address => struct TellorFlex.StakeInfo)"
                  },
                  "typeName": {
                    "id": 27,
                    "keyType": {
                      "id": 24,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1024:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1016:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$63_storage_$",
                      "typeString": "mapping(address => struct TellorFlex.StakeInfo)"
                    },
                    "valueType": {
                      "id": 26,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 25,
                        "name": "StakeInfo",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 63,
                        "src": "1035:9:0"
                      },
                      "referencedDeclaration": 63,
                      "src": "1035:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                        "typeString": "struct TellorFlex.StakeInfo"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "canonicalName": "TellorFlex.Report",
                  "id": 48,
                  "members": [
                    {
                      "constant": false,
                      "id": 31,
                      "mutability": "mutable",
                      "name": "timestamps",
                      "nameLocation": "1170:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 48,
                      "src": "1160:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 29,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1160:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30,
                        "nodeType": "ArrayTypeName",
                        "src": "1160:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 35,
                      "mutability": "mutable",
                      "name": "timestampIndex",
                      "nameLocation": "1262:14:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 48,
                      "src": "1234:42:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      },
                      "typeName": {
                        "id": 34,
                        "keyType": {
                          "id": 32,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1242:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1234:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        },
                        "valueType": {
                          "id": 33,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1253:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39,
                      "mutability": "mutable",
                      "name": "timestampToBlockNum",
                      "nameLocation": "1361:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 48,
                      "src": "1333:47:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      },
                      "typeName": {
                        "id": 38,
                        "keyType": {
                          "id": 36,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1341:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1333:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        },
                        "valueType": {
                          "id": 37,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1352:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 43,
                      "mutability": "mutable",
                      "name": "valueByTimestamp",
                      "nameLocation": "1456:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 48,
                      "src": "1430:42:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                        "typeString": "mapping(uint256 => bytes)"
                      },
                      "typeName": {
                        "id": 42,
                        "keyType": {
                          "id": 40,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1438:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1430:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                          "typeString": "mapping(uint256 => bytes)"
                        },
                        "valueType": {
                          "id": 41,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1449:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 47,
                      "mutability": "mutable",
                      "name": "reporterByTimestamp",
                      "nameLocation": "1545:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 48,
                      "src": "1517:47:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      },
                      "typeName": {
                        "id": 46,
                        "keyType": {
                          "id": 44,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1525:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1517:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        },
                        "valueType": {
                          "id": 45,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1536:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Report",
                  "nameLocation": "1143:6:0",
                  "nodeType": "StructDefinition",
                  "scope": 1234,
                  "src": "1136:473:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "TellorFlex.StakeInfo",
                  "id": 63,
                  "members": [
                    {
                      "constant": false,
                      "id": 50,
                      "mutability": "mutable",
                      "name": "startDate",
                      "nameLocation": "1650:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 63,
                      "src": "1642:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1642:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 52,
                      "mutability": "mutable",
                      "name": "stakedBalance",
                      "nameLocation": "1696:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 63,
                      "src": "1688:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1688:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 54,
                      "mutability": "mutable",
                      "name": "lockedBalance",
                      "nameLocation": "1745:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 63,
                      "src": "1737:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1737:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 56,
                      "mutability": "mutable",
                      "name": "reporterLastTimestamp",
                      "nameLocation": "1808:21:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 63,
                      "src": "1800:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1800:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 58,
                      "mutability": "mutable",
                      "name": "reportsSubmitted",
                      "nameLocation": "1894:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 63,
                      "src": "1886:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 57,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1886:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 62,
                      "mutability": "mutable",
                      "name": "reportsSubmittedByQueryId",
                      "nameLocation": "1997:25:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 63,
                      "src": "1969:53:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                        "typeString": "mapping(bytes32 => uint256)"
                      },
                      "typeName": {
                        "id": 61,
                        "keyType": {
                          "id": 59,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1977:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1969:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        },
                        "valueType": {
                          "id": 60,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1988:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "StakeInfo",
                  "nameLocation": "1622:9:0",
                  "nodeType": "StructDefinition",
                  "scope": 1234,
                  "src": "1615:414:0",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 67,
                  "name": "NewGovernanceAddress",
                  "nameLocation": "2055:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 65,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_newGovernanceAddress",
                        "nameLocation": "2084:21:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2076:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2076:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2075:31:0"
                  },
                  "src": "2049:58:0"
                },
                {
                  "anonymous": false,
                  "id": 81,
                  "name": "NewReport",
                  "nameLocation": "2118:9:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 80,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 69,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_queryId",
                        "nameLocation": "2145:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "2137:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 68,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2137:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 71,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_time",
                        "nameLocation": "2171:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "2163:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2163:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 73,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_value",
                        "nameLocation": "2192:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "2186:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 72,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2186:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 75,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_nonce",
                        "nameLocation": "2216:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "2208:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 74,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2208:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 77,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_queryData",
                        "nameLocation": "2238:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "2232:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 76,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2232:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 79,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_reporter",
                        "nameLocation": "2266:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "2258:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 78,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2258:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2127:154:0"
                  },
                  "src": "2112:170:0"
                },
                {
                  "anonymous": false,
                  "id": 85,
                  "name": "NewReportingLock",
                  "nameLocation": "2293:16:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_newReportingLock",
                        "nameLocation": "2318:17:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 85,
                        "src": "2310:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2310:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2309:27:0"
                  },
                  "src": "2287:50:0"
                },
                {
                  "anonymous": false,
                  "id": 89,
                  "name": "NewStakeAmount",
                  "nameLocation": "2348:14:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 87,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_newStakeAmount",
                        "nameLocation": "2371:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 89,
                        "src": "2363:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 86,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2363:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2362:25:0"
                  },
                  "src": "2342:46:0"
                },
                {
                  "anonymous": false,
                  "id": 95,
                  "name": "NewStaker",
                  "nameLocation": "2399:9:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 94,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 91,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_staker",
                        "nameLocation": "2417:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 95,
                        "src": "2409:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2409:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 93,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "2434:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 95,
                        "src": "2426:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2426:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2408:34:0"
                  },
                  "src": "2393:50:0"
                },
                {
                  "anonymous": false,
                  "id": 103,
                  "name": "ReporterSlashed",
                  "nameLocation": "2454:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 97,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_reporter",
                        "nameLocation": "2487:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "2479:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2479:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 99,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_recipient",
                        "nameLocation": "2514:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "2506:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2506:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 101,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_slashAmount",
                        "nameLocation": "2542:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 103,
                        "src": "2534:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2534:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2469:91:0"
                  },
                  "src": "2448:113:0"
                },
                {
                  "anonymous": false,
                  "id": 109,
                  "name": "StakeWithdrawRequested",
                  "nameLocation": "2572:22:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 105,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_staker",
                        "nameLocation": "2603:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "2595:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 104,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2595:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 107,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "2620:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "2612:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2612:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2594:34:0"
                  },
                  "src": "2566:63:0"
                },
                {
                  "anonymous": false,
                  "id": 113,
                  "name": "StakeWithdrawn",
                  "nameLocation": "2640:14:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 112,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 111,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_staker",
                        "nameLocation": "2663:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 113,
                        "src": "2655:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 110,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2655:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2654:17:0"
                  },
                  "src": "2634:38:0"
                },
                {
                  "anonymous": false,
                  "id": 119,
                  "name": "ValueRemoved",
                  "nameLocation": "2683:12:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 115,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_queryId",
                        "nameLocation": "2704:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 119,
                        "src": "2696:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 114,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2696:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 117,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "_timestamp",
                        "nameLocation": "2722:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 119,
                        "src": "2714:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2714:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2695:38:0"
                  },
                  "src": "2677:57:0"
                },
                {
                  "body": {
                    "id": 169,
                    "nodeType": "Block",
                    "src": "3215:289:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 132,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 122,
                                "src": "3233:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 135,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3251:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 134,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3243:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 133,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3243:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3243:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3233:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d7573742073657420746f6b656e2061646472657373",
                              "id": 138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3255:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f114cd400c5a8fd3294566124a1c5773e7afb0f1e3d66ae9ad952e0269647070",
                                "typeString": "literal_string \"must set token address\""
                              },
                              "value": "must set token address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f114cd400c5a8fd3294566124a1c5773e7afb0f1e3d66ae9ad952e0269647070",
                                "typeString": "literal_string \"must set token address\""
                              }
                            ],
                            "id": 131,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3225:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3225:55:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 140,
                        "nodeType": "ExpressionStatement",
                        "src": "3225:55:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 142,
                                "name": "_governance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 124,
                                "src": "3298:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 145,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3321:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 144,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3313:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 143,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3313:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3313:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3298:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d7573742073657420676f7665726e616e63652061646472657373",
                              "id": 148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3325:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bbe99581b496754cbdf40f2080b3f8a8bd5eb5791b11511c11875b879c05f940",
                                "typeString": "literal_string \"must set governance address\""
                              },
                              "value": "must set governance address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bbe99581b496754cbdf40f2080b3f8a8bd5eb5791b11511c11875b879c05f940",
                                "typeString": "literal_string \"must set governance address\""
                              }
                            ],
                            "id": 141,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3290:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3290:65:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 150,
                        "nodeType": "ExpressionStatement",
                        "src": "3290:65:0"
                      },
                      {
                        "expression": {
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 151,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "3365:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1264",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 153,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 122,
                                "src": "3380:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 152,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1264,
                              "src": "3373:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1264_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3373:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1264",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "3365:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1264",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 156,
                        "nodeType": "ExpressionStatement",
                        "src": "3365:22:0"
                      },
                      {
                        "expression": {
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 157,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3397:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 158,
                            "name": "_governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "3410:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3397:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 160,
                        "nodeType": "ExpressionStatement",
                        "src": "3397:24:0"
                      },
                      {
                        "expression": {
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 161,
                            "name": "stakeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "3431:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 162,
                            "name": "_stakeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "3445:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3431:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "3431:26:0"
                      },
                      {
                        "expression": {
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 165,
                            "name": "reportingLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "3467:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 166,
                            "name": "_reportingLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "3483:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3467:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 168,
                        "nodeType": "ExpressionStatement",
                        "src": "3467:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 120,
                    "nodeType": "StructuredDocumentation",
                    "src": "2740:337:0",
                    "text": " @dev Initializes system parameters\n @param _token address of token used for staking\n @param _governance address which controls system\n @param _stakeAmount amount of token needed to report oracle values\n @param _reportingLock base amount of time (seconds) before reporter is able to report again"
                  },
                  "id": 170,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 129,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 122,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "3111:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "3103:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 121,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3103:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 124,
                        "mutability": "mutable",
                        "name": "_governance",
                        "nameLocation": "3135:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "3127:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3127:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 126,
                        "mutability": "mutable",
                        "name": "_stakeAmount",
                        "nameLocation": "3164:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "3156:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3156:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 128,
                        "mutability": "mutable",
                        "name": "_reportingLock",
                        "nameLocation": "3194:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "3186:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 127,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3186:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3093:121:0"
                  },
                  "returnParameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3215:0:0"
                  },
                  "scope": 1234,
                  "src": "3082:422:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 202,
                    "nodeType": "Block",
                    "src": "3697:308:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 177,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3715:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3715:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 179,
                                "name": "governance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8,
                                "src": "3729:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3715:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "63616c6c6572206d75737420626520676f7665726e616e63652061646472657373",
                              "id": 181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3741:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2fc6a9b17f3032be7c5732e8726a5ecef9cd40af648e6d6a8e6ccf2071f4a1cb",
                                "typeString": "literal_string \"caller must be governance address\""
                              },
                              "value": "caller must be governance address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2fc6a9b17f3032be7c5732e8726a5ecef9cd40af648e6d6a8e6ccf2071f4a1cb",
                                "typeString": "literal_string \"caller must be governance address\""
                              }
                            ],
                            "id": 176,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3707:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3707:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 183,
                        "nodeType": "ExpressionStatement",
                        "src": "3707:70:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 185,
                                "name": "_newGovernanceAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 173,
                                "src": "3808:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 188,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3841:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 187,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3833:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 186,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3833:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3833:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3808:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d7573742073657420676f7665726e616e63652061646472657373",
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3857:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bbe99581b496754cbdf40f2080b3f8a8bd5eb5791b11511c11875b879c05f940",
                                "typeString": "literal_string \"must set governance address\""
                              },
                              "value": "must set governance address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bbe99581b496754cbdf40f2080b3f8a8bd5eb5791b11511c11875b879c05f940",
                                "typeString": "literal_string \"must set governance address\""
                              }
                            ],
                            "id": 184,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3787:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3787:109:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 193,
                        "nodeType": "ExpressionStatement",
                        "src": "3787:109:0"
                      },
                      {
                        "expression": {
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 194,
                            "name": "governance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3906:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 195,
                            "name": "_newGovernanceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "3919:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3906:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 197,
                        "nodeType": "ExpressionStatement",
                        "src": "3906:34:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 199,
                              "name": "_newGovernanceAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 173,
                              "src": "3976:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 198,
                            "name": "NewGovernanceAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "3955:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3955:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 201,
                        "nodeType": "EmitStatement",
                        "src": "3950:48:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 171,
                    "nodeType": "StructuredDocumentation",
                    "src": "3510:109:0",
                    "text": " @dev Changes governance address\n @param _newGovernanceAddress new governance address"
                  },
                  "functionSelector": "0636769e",
                  "id": 203,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeGovernanceAddress",
                  "nameLocation": "3633:23:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 174,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 173,
                        "mutability": "mutable",
                        "name": "_newGovernanceAddress",
                        "nameLocation": "3665:21:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 203,
                        "src": "3657:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 172,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3657:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3656:31:0"
                  },
                  "returnParameters": {
                    "id": 175,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3697:0:0"
                  },
                  "scope": 1234,
                  "src": "3624:381:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 232,
                    "nodeType": "Block",
                    "src": "4251:298:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 210,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4269:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4269:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 212,
                                "name": "governance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8,
                                "src": "4283:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4269:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "63616c6c6572206d75737420626520676f7665726e616e63652061646472657373",
                              "id": 214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4295:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2fc6a9b17f3032be7c5732e8726a5ecef9cd40af648e6d6a8e6ccf2071f4a1cb",
                                "typeString": "literal_string \"caller must be governance address\""
                              },
                              "value": "caller must be governance address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2fc6a9b17f3032be7c5732e8726a5ecef9cd40af648e6d6a8e6ccf2071f4a1cb",
                                "typeString": "literal_string \"caller must be governance address\""
                              }
                            ],
                            "id": 209,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4261:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4261:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 216,
                        "nodeType": "ExpressionStatement",
                        "src": "4261:70:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 218,
                                "name": "_newReportingLock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 206,
                                "src": "4362:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4382:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4362:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7265706f7274696e67206c6f636b206d7573742062652067726561746572207468616e207a65726f",
                              "id": 221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4397:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cb2905567c66577046abb9c5db6a5e52162cad2a3fd5cafe7f5837343aacc143",
                                "typeString": "literal_string \"reporting lock must be greater than zero\""
                              },
                              "value": "reporting lock must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cb2905567c66577046abb9c5db6a5e52162cad2a3fd5cafe7f5837343aacc143",
                                "typeString": "literal_string \"reporting lock must be greater than zero\""
                              }
                            ],
                            "id": 217,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4341:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4341:108:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 223,
                        "nodeType": "ExpressionStatement",
                        "src": "4341:108:0"
                      },
                      {
                        "expression": {
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 224,
                            "name": "reportingLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "4459:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 225,
                            "name": "_newReportingLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 206,
                            "src": "4475:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4459:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 227,
                        "nodeType": "ExpressionStatement",
                        "src": "4459:33:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 229,
                              "name": "_newReportingLock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 206,
                              "src": "4524:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 228,
                            "name": "NewReportingLock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "4507:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4507:35:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 231,
                        "nodeType": "EmitStatement",
                        "src": "4502:40:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 204,
                    "nodeType": "StructuredDocumentation",
                    "src": "4011:170:0",
                    "text": " @dev Changes base amount of time (seconds) before reporter is allowed to report again\n @param _newReportingLock new reporter lock time in seconds"
                  },
                  "functionSelector": "5d183cfa",
                  "id": 233,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeReportingLock",
                  "nameLocation": "4195:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 207,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 206,
                        "mutability": "mutable",
                        "name": "_newReportingLock",
                        "nameLocation": "4223:17:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 233,
                        "src": "4215:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 205,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4215:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4214:27:0"
                  },
                  "returnParameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4251:0:0"
                  },
                  "scope": 1234,
                  "src": "4186:363:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 262,
                    "nodeType": "Block",
                    "src": "4756:252:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 240,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4774:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4774:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 242,
                                "name": "governance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8,
                                "src": "4788:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4774:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "63616c6c6572206d75737420626520676f7665726e616e63652061646472657373",
                              "id": 244,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4800:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2fc6a9b17f3032be7c5732e8726a5ecef9cd40af648e6d6a8e6ccf2071f4a1cb",
                                "typeString": "literal_string \"caller must be governance address\""
                              },
                              "value": "caller must be governance address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2fc6a9b17f3032be7c5732e8726a5ecef9cd40af648e6d6a8e6ccf2071f4a1cb",
                                "typeString": "literal_string \"caller must be governance address\""
                              }
                            ],
                            "id": 239,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4766:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4766:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 246,
                        "nodeType": "ExpressionStatement",
                        "src": "4766:70:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 248,
                                "name": "_newStakeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 236,
                                "src": "4854:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 249,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4872:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4854:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7374616b6520616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
                              "id": 251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4875:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4fcea4fb0313a745edc64b881b016c9f3a568de1393f3bf2136337a2e3f04def",
                                "typeString": "literal_string \"stake amount must be greater than zero\""
                              },
                              "value": "stake amount must be greater than zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4fcea4fb0313a745edc64b881b016c9f3a568de1393f3bf2136337a2e3f04def",
                                "typeString": "literal_string \"stake amount must be greater than zero\""
                              }
                            ],
                            "id": 247,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4846:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4846:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 253,
                        "nodeType": "ExpressionStatement",
                        "src": "4846:70:0"
                      },
                      {
                        "expression": {
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 254,
                            "name": "stakeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "4926:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 255,
                            "name": "_newStakeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 236,
                            "src": "4940:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4926:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 257,
                        "nodeType": "ExpressionStatement",
                        "src": "4926:29:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 259,
                              "name": "_newStakeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 236,
                              "src": "4985:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 258,
                            "name": "NewStakeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89,
                            "src": "4970:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4970:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 261,
                        "nodeType": "EmitStatement",
                        "src": "4965:36:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 234,
                    "nodeType": "StructuredDocumentation",
                    "src": "4555:135:0",
                    "text": " @dev Changes amount of token stake required to report values\n @param _newStakeAmount new reporter stake amount"
                  },
                  "functionSelector": "ca79b5a9",
                  "id": 263,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeStakeAmount",
                  "nameLocation": "4704:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "_newStakeAmount",
                        "nameLocation": "4730:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "4722:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4722:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4721:25:0"
                  },
                  "returnParameters": {
                    "id": 238,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4756:0:0"
                  },
                  "scope": 1234,
                  "src": "4695:313:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 355,
                    "nodeType": "Block",
                    "src": "5172:846:0",
                    "statements": [
                      {
                        "assignments": [
                          271
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 271,
                            "mutability": "mutable",
                            "name": "_staker",
                            "nameLocation": "5200:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 355,
                            "src": "5182:25:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                              "typeString": "struct TellorFlex.StakeInfo"
                            },
                            "typeName": {
                              "id": 270,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 269,
                                "name": "StakeInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 63,
                                "src": "5182:9:0"
                              },
                              "referencedDeclaration": 63,
                              "src": "5182:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                "typeString": "struct TellorFlex.StakeInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 276,
                        "initialValue": {
                          "baseExpression": {
                            "id": 272,
                            "name": "stakerDetails",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "5210:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$63_storage_$",
                              "typeString": "mapping(address => struct TellorFlex.StakeInfo storage ref)"
                            }
                          },
                          "id": 275,
                          "indexExpression": {
                            "expression": {
                              "id": 273,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5224:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5224:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5210:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakeInfo_$63_storage",
                            "typeString": "struct TellorFlex.StakeInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5182:53:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 277,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 271,
                              "src": "5249:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                "typeString": "struct TellorFlex.StakeInfo storage pointer"
                              }
                            },
                            "id": 278,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lockedBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54,
                            "src": "5249:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5273:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5249:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 330,
                          "nodeType": "Block",
                          "src": "5710:88:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 320,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "5751:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 321,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "5751:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "id": 324,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "5771:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_TellorFlex_$1234",
                                              "typeString": "contract TellorFlex"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_TellorFlex_$1234",
                                              "typeString": "contract TellorFlex"
                                            }
                                          ],
                                          "id": 323,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "5763:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 322,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "5763:7:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 325,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5763:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 326,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 266,
                                        "src": "5778:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 318,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6,
                                        "src": "5732:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$1264",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 319,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transferFrom",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1263,
                                      "src": "5732:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 327,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5732:54:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 317,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5724:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5724:63:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 329,
                              "nodeType": "ExpressionStatement",
                              "src": "5724:63:0"
                            }
                          ]
                        },
                        "id": 331,
                        "nodeType": "IfStatement",
                        "src": "5245:553:0",
                        "trueBody": {
                          "id": 316,
                          "nodeType": "Block",
                          "src": "5276:428:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 281,
                                    "name": "_staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 271,
                                    "src": "5294:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                      "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                    }
                                  },
                                  "id": 282,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lockedBalance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54,
                                  "src": "5294:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 283,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 266,
                                  "src": "5319:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5294:32:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 314,
                                "nodeType": "Block",
                                "src": "5399:295:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 295,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "5490:3:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 296,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "5490:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "id": 299,
                                                  "name": "this",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -28,
                                                  "src": "5534:4:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_TellorFlex_$1234",
                                                    "typeString": "contract TellorFlex"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_TellorFlex_$1234",
                                                    "typeString": "contract TellorFlex"
                                                  }
                                                ],
                                                "id": 298,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "5526:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 297,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "5526:7:0",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 300,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "5526:13:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 304,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 301,
                                                "name": "_amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 266,
                                                "src": "5565:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "expression": {
                                                  "id": 302,
                                                  "name": "_staker",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 271,
                                                  "src": "5575:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                                    "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                                  }
                                                },
                                                "id": 303,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "lockedBalance",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 54,
                                                "src": "5575:21:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "5565:31:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 293,
                                              "name": "token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 6,
                                              "src": "5446:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$1264",
                                                "typeString": "contract IERC20"
                                              }
                                            },
                                            "id": 294,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transferFrom",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1263,
                                            "src": "5446:18:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (address,address,uint256) external returns (bool)"
                                            }
                                          },
                                          "id": 305,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5446:172:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        ],
                                        "id": 292,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "5417:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                          "typeString": "function (bool) pure"
                                        }
                                      },
                                      "id": 306,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5417:219:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 307,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5417:219:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 312,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 308,
                                          "name": "_staker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 271,
                                          "src": "5654:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                            "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                          }
                                        },
                                        "id": 310,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "lockedBalance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 54,
                                        "src": "5654:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 311,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5678:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "5654:25:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 313,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5654:25:0"
                                  }
                                ]
                              },
                              "id": 315,
                              "nodeType": "IfStatement",
                              "src": "5290:404:0",
                              "trueBody": {
                                "id": 291,
                                "nodeType": "Block",
                                "src": "5328:65:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 289,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 285,
                                          "name": "_staker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 271,
                                          "src": "5346:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                            "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                          }
                                        },
                                        "id": 287,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "lockedBalance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 54,
                                        "src": "5346:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "id": 288,
                                        "name": "_amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 266,
                                        "src": "5371:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5346:32:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 290,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5346:32:0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 332,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 271,
                              "src": "5807:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                "typeString": "struct TellorFlex.StakeInfo storage pointer"
                              }
                            },
                            "id": 334,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "startDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50,
                            "src": "5807:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 335,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5827:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5827:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5807:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 338,
                        "nodeType": "ExpressionStatement",
                        "src": "5807:35:0"
                      },
                      {
                        "expression": {
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 339,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 271,
                              "src": "5897:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                "typeString": "struct TellorFlex.StakeInfo storage pointer"
                              }
                            },
                            "id": 341,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "stakedBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52,
                            "src": "5897:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 342,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "5922:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5897:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 344,
                        "nodeType": "ExpressionStatement",
                        "src": "5897:32:0"
                      },
                      {
                        "expression": {
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 345,
                            "name": "totalStakeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "5939:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 346,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "5959:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5939:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 348,
                        "nodeType": "ExpressionStatement",
                        "src": "5939:27:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 350,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5991:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 351,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5991:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 352,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "6003:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 349,
                            "name": "NewStaker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "5981:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5981:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 354,
                        "nodeType": "EmitStatement",
                        "src": "5976:35:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 264,
                    "nodeType": "StructuredDocumentation",
                    "src": "5014:105:0",
                    "text": " @dev Allows a reporter to submit stake\n @param _amount amount of tokens to stake"
                  },
                  "functionSelector": "cb82cc8f",
                  "id": 356,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "depositStake",
                  "nameLocation": "5133:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "5154:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "5146:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5146:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5145:17:0"
                  },
                  "returnParameters": {
                    "id": 268,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5172:0:0"
                  },
                  "scope": 1234,
                  "src": "5124:894:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 474,
                    "nodeType": "Block",
                    "src": "6350:808:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 365,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6368:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 366,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6368:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 367,
                                "name": "governance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8,
                                "src": "6382:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6368:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "63616c6c6572206d75737420626520676f7665726e616e63652061646472657373",
                              "id": 369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6394:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2fc6a9b17f3032be7c5732e8726a5ecef9cd40af648e6d6a8e6ccf2071f4a1cb",
                                "typeString": "literal_string \"caller must be governance address\""
                              },
                              "value": "caller must be governance address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2fc6a9b17f3032be7c5732e8726a5ecef9cd40af648e6d6a8e6ccf2071f4a1cb",
                                "typeString": "literal_string \"caller must be governance address\""
                              }
                            ],
                            "id": 364,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6360:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6360:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 371,
                        "nodeType": "ExpressionStatement",
                        "src": "6360:70:0"
                      },
                      {
                        "assignments": [
                          374
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 374,
                            "mutability": "mutable",
                            "name": "rep",
                            "nameLocation": "6455:3:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 474,
                            "src": "6440:18:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                              "typeString": "struct TellorFlex.Report"
                            },
                            "typeName": {
                              "id": 373,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 372,
                                "name": "Report",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 48,
                                "src": "6440:6:0"
                              },
                              "referencedDeclaration": 48,
                              "src": "6440:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                "typeString": "struct TellorFlex.Report"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 378,
                        "initialValue": {
                          "baseExpression": {
                            "id": 375,
                            "name": "reports",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "6461:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                              "typeString": "mapping(bytes32 => struct TellorFlex.Report storage ref)"
                            }
                          },
                          "id": 377,
                          "indexExpression": {
                            "id": 376,
                            "name": "_queryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "6469:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6461:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Report_$48_storage",
                            "typeString": "struct TellorFlex.Report storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6440:38:0"
                      },
                      {
                        "assignments": [
                          380
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 380,
                            "mutability": "mutable",
                            "name": "_index",
                            "nameLocation": "6496:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 474,
                            "src": "6488:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 379,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6488:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 385,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "id": 381,
                              "name": "rep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 374,
                              "src": "6505:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                "typeString": "struct TellorFlex.Report storage pointer"
                              }
                            },
                            "id": 382,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestampIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35,
                            "src": "6505:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 384,
                          "indexExpression": {
                            "id": 383,
                            "name": "_timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "6524:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6505:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6488:47:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 387,
                                "name": "_timestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 361,
                                "src": "6553:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 388,
                                    "name": "rep",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 374,
                                    "src": "6567:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                      "typeString": "struct TellorFlex.Report storage pointer"
                                    }
                                  },
                                  "id": 389,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamps",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 31,
                                  "src": "6567:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 391,
                                "indexExpression": {
                                  "id": 390,
                                  "name": "_index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 380,
                                  "src": "6582:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6567:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6553:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e76616c69642074696d657374616d70",
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6591:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3a07df7939b5ccbd3c356d849b8deaf4b43e0de6adbd96a0feb242ccf507b152",
                                "typeString": "literal_string \"invalid timestamp\""
                              },
                              "value": "invalid timestamp"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3a07df7939b5ccbd3c356d849b8deaf4b43e0de6adbd96a0feb242ccf507b152",
                                "typeString": "literal_string \"invalid timestamp\""
                              }
                            ],
                            "id": 386,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6545:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6545:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 395,
                        "nodeType": "ExpressionStatement",
                        "src": "6545:66:0"
                      },
                      {
                        "body": {
                          "id": 434,
                          "nodeType": "Block",
                          "src": "6751:125:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 410,
                                      "name": "rep",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 374,
                                      "src": "6765:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                        "typeString": "struct TellorFlex.Report storage pointer"
                                      }
                                    },
                                    "id": 413,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamps",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 31,
                                    "src": "6765:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 414,
                                  "indexExpression": {
                                    "id": 412,
                                    "name": "_i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 397,
                                    "src": "6780:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6765:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 415,
                                      "name": "rep",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 374,
                                      "src": "6786:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                        "typeString": "struct TellorFlex.Report storage pointer"
                                      }
                                    },
                                    "id": 416,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamps",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 31,
                                    "src": "6786:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 420,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 417,
                                      "name": "_i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 397,
                                      "src": "6801:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 418,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6806:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "6801:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6786:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6765:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 422,
                              "nodeType": "ExpressionStatement",
                              "src": "6765:43:0"
                            },
                            {
                              "expression": {
                                "id": 432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 423,
                                      "name": "rep",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 374,
                                      "src": "6822:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                        "typeString": "struct TellorFlex.Report storage pointer"
                                      }
                                    },
                                    "id": 429,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestampIndex",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 35,
                                    "src": "6822:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 430,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 425,
                                        "name": "rep",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 374,
                                        "src": "6841:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                          "typeString": "struct TellorFlex.Report storage pointer"
                                        }
                                      },
                                      "id": 426,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "timestamps",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 31,
                                      "src": "6841:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 428,
                                    "indexExpression": {
                                      "id": 427,
                                      "name": "_i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 397,
                                      "src": "6856:2:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6841:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6822:38:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "hexValue": "31",
                                  "id": 431,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6864:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "6822:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 433,
                              "nodeType": "ExpressionStatement",
                              "src": "6822:43:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 400,
                            "name": "_i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "6713:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "id": 401,
                                  "name": "rep",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 374,
                                  "src": "6718:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                    "typeString": "struct TellorFlex.Report storage pointer"
                                  }
                                },
                                "id": 402,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamps",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 31,
                                "src": "6718:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "6718:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6742:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "6718:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6713:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 435,
                        "initializationExpression": {
                          "assignments": [
                            397
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 397,
                              "mutability": "mutable",
                              "name": "_i",
                              "nameLocation": "6700:2:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 435,
                              "src": "6692:10:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 396,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6692:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 399,
                          "initialValue": {
                            "id": 398,
                            "name": "_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 380,
                            "src": "6705:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6692:19:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6745:4:0",
                            "subExpression": {
                              "id": 407,
                              "name": "_i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "6745:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 409,
                          "nodeType": "ExpressionStatement",
                          "src": "6745:4:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "6687:189:0"
                      },
                      {
                        "expression": {
                          "id": 444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "6933:48:0",
                          "subExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 436,
                                "name": "rep",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 374,
                                "src": "6940:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                  "typeString": "struct TellorFlex.Report storage pointer"
                                }
                              },
                              "id": 437,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31,
                              "src": "6940:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 443,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 438,
                                    "name": "rep",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 374,
                                    "src": "6955:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                      "typeString": "struct TellorFlex.Report storage pointer"
                                    }
                                  },
                                  "id": 439,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamps",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 31,
                                  "src": "6955:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "6955:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6979:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "6955:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6940:41:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 445,
                        "nodeType": "ExpressionStatement",
                        "src": "6933:48:0"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "id": 446,
                                "name": "rep",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 374,
                                "src": "6991:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                  "typeString": "struct TellorFlex.Report storage pointer"
                                }
                              },
                              "id": 449,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31,
                              "src": "6991:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "6991:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer)"
                            }
                          },
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6991:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 452,
                        "nodeType": "ExpressionStatement",
                        "src": "6991:20:0"
                      },
                      {
                        "expression": {
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 453,
                                "name": "rep",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 374,
                                "src": "7021:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                  "typeString": "struct TellorFlex.Report storage pointer"
                                }
                              },
                              "id": 456,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "valueByTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43,
                              "src": "7021:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                                "typeString": "mapping(uint256 => bytes storage ref)"
                              }
                            },
                            "id": 457,
                            "indexExpression": {
                              "id": 455,
                              "name": "_timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 361,
                              "src": "7042:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7021:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "",
                            "id": 458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7056:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "src": "7021:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 460,
                        "nodeType": "ExpressionStatement",
                        "src": "7021:37:0"
                      },
                      {
                        "expression": {
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 461,
                                "name": "rep",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 374,
                                "src": "7068:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                  "typeString": "struct TellorFlex.Report storage pointer"
                                }
                              },
                              "id": 464,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestampIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35,
                              "src": "7068:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 465,
                            "indexExpression": {
                              "id": 463,
                              "name": "_timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 361,
                              "src": "7087:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7068:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7101:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7068:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 468,
                        "nodeType": "ExpressionStatement",
                        "src": "7068:34:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 470,
                              "name": "_queryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "7130:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 471,
                              "name": "_timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 361,
                              "src": "7140:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 469,
                            "name": "ValueRemoved",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 119,
                            "src": "7117:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (bytes32,uint256)"
                            }
                          },
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7117:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 473,
                        "nodeType": "EmitStatement",
                        "src": "7112:39:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 357,
                    "nodeType": "StructuredDocumentation",
                    "src": "6024:253:0",
                    "text": " @dev Removes a value from the oracle.\n Note: this function is only callable by the Governance contract.\n @param _queryId is ID of the specific data feed\n @param _timestamp is the timestamp of the data value to remove"
                  },
                  "functionSelector": "5b5edcfc",
                  "id": 475,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeValue",
                  "nameLocation": "6291:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 362,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 359,
                        "mutability": "mutable",
                        "name": "_queryId",
                        "nameLocation": "6311:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "6303:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 358,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6303:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 361,
                        "mutability": "mutable",
                        "name": "_timestamp",
                        "nameLocation": "6329:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 475,
                        "src": "6321:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 360,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6321:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6302:38:0"
                  },
                  "returnParameters": {
                    "id": 363,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6350:0:0"
                  },
                  "scope": 1234,
                  "src": "6282:876:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 526,
                    "nodeType": "Block",
                    "src": "7372:410:0",
                    "statements": [
                      {
                        "assignments": [
                          483
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 483,
                            "mutability": "mutable",
                            "name": "_staker",
                            "nameLocation": "7400:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 526,
                            "src": "7382:25:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                              "typeString": "struct TellorFlex.StakeInfo"
                            },
                            "typeName": {
                              "id": 482,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 481,
                                "name": "StakeInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 63,
                                "src": "7382:9:0"
                              },
                              "referencedDeclaration": 63,
                              "src": "7382:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                "typeString": "struct TellorFlex.StakeInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 488,
                        "initialValue": {
                          "baseExpression": {
                            "id": 484,
                            "name": "stakerDetails",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "7410:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$63_storage_$",
                              "typeString": "mapping(address => struct TellorFlex.StakeInfo storage ref)"
                            }
                          },
                          "id": 487,
                          "indexExpression": {
                            "expression": {
                              "id": 485,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7424:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7424:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7410:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakeInfo_$63_storage",
                            "typeString": "struct TellorFlex.StakeInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7382:53:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 490,
                                  "name": "_staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 483,
                                  "src": "7466:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                    "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                  }
                                },
                                "id": 491,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "stakedBalance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 52,
                                "src": "7466:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 492,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 478,
                                "src": "7491:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7466:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "696e73756666696369656e74207374616b65642062616c616e6365",
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7512:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d8d4cb8e01b84ee20a4e50dd6369720cccce60f70a5f340975bb2a78d6c776db",
                                "typeString": "literal_string \"insufficient staked balance\""
                              },
                              "value": "insufficient staked balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d8d4cb8e01b84ee20a4e50dd6369720cccce60f70a5f340975bb2a78d6c776db",
                                "typeString": "literal_string \"insufficient staked balance\""
                              }
                            ],
                            "id": 489,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7445:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7445:106:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 496,
                        "nodeType": "ExpressionStatement",
                        "src": "7445:106:0"
                      },
                      {
                        "expression": {
                          "id": 502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 497,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 483,
                              "src": "7561:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                "typeString": "struct TellorFlex.StakeInfo storage pointer"
                              }
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "startDate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50,
                            "src": "7561:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 500,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7581:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "7581:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7561:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 503,
                        "nodeType": "ExpressionStatement",
                        "src": "7561:35:0"
                      },
                      {
                        "expression": {
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 504,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 483,
                              "src": "7606:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                "typeString": "struct TellorFlex.StakeInfo storage pointer"
                              }
                            },
                            "id": 506,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lockedBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54,
                            "src": "7606:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 507,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "7631:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7606:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 509,
                        "nodeType": "ExpressionStatement",
                        "src": "7606:32:0"
                      },
                      {
                        "expression": {
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 510,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 483,
                              "src": "7648:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                "typeString": "struct TellorFlex.StakeInfo storage pointer"
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "stakedBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 52,
                            "src": "7648:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 513,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "7673:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7648:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 515,
                        "nodeType": "ExpressionStatement",
                        "src": "7648:32:0"
                      },
                      {
                        "expression": {
                          "id": 518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 516,
                            "name": "totalStakeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "7690:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 517,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 478,
                            "src": "7710:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7690:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 519,
                        "nodeType": "ExpressionStatement",
                        "src": "7690:27:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 521,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7755:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7755:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 523,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 478,
                              "src": "7767:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 520,
                            "name": "StakeWithdrawRequested",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 109,
                            "src": "7732:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7732:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 525,
                        "nodeType": "EmitStatement",
                        "src": "7727:48:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 476,
                    "nodeType": "StructuredDocumentation",
                    "src": "7164:145:0",
                    "text": " @dev Allows a reporter to request to withdraw their stake\n @param _amount amount of staked tokens requesting to withdraw"
                  },
                  "functionSelector": "8929f4c6",
                  "id": 527,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "requestStakingWithdraw",
                  "nameLocation": "7323:22:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "7354:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 527,
                        "src": "7346:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7346:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7345:17:0"
                  },
                  "returnParameters": {
                    "id": 480,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7372:0:0"
                  },
                  "scope": 1234,
                  "src": "7314:468:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 659,
                    "nodeType": "Block",
                    "src": "8288:1156:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 538,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8306:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8306:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 540,
                                "name": "governance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8,
                                "src": "8320:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8306:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6f6e6c7920676f7665726e616e63652063616e20736c617368207265706f72746572",
                              "id": 542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8332:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_23d2505d9b9a455858ac547072cc1fb48e6613ddf816d1d5af3621bf20b50229",
                                "typeString": "literal_string \"only governance can slash reporter\""
                              },
                              "value": "only governance can slash reporter"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_23d2505d9b9a455858ac547072cc1fb48e6613ddf816d1d5af3621bf20b50229",
                                "typeString": "literal_string \"only governance can slash reporter\""
                              }
                            ],
                            "id": 537,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8298:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8298:71:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 544,
                        "nodeType": "ExpressionStatement",
                        "src": "8298:71:0"
                      },
                      {
                        "assignments": [
                          547
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 547,
                            "mutability": "mutable",
                            "name": "_staker",
                            "nameLocation": "8397:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 659,
                            "src": "8379:25:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                              "typeString": "struct TellorFlex.StakeInfo"
                            },
                            "typeName": {
                              "id": 546,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 545,
                                "name": "StakeInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 63,
                                "src": "8379:9:0"
                              },
                              "referencedDeclaration": 63,
                              "src": "8379:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                "typeString": "struct TellorFlex.StakeInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 551,
                        "initialValue": {
                          "baseExpression": {
                            "id": 548,
                            "name": "stakerDetails",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "8407:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$63_storage_$",
                              "typeString": "mapping(address => struct TellorFlex.StakeInfo storage ref)"
                            }
                          },
                          "id": 550,
                          "indexExpression": {
                            "id": 549,
                            "name": "_reporter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "8421:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8407:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakeInfo_$63_storage",
                            "typeString": "struct TellorFlex.StakeInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8379:52:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 553,
                                    "name": "_staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 547,
                                    "src": "8462:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                      "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                    }
                                  },
                                  "id": 554,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "stakedBalance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 52,
                                  "src": "8462:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "expression": {
                                    "id": 555,
                                    "name": "_staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 547,
                                    "src": "8486:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                      "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                    }
                                  },
                                  "id": 556,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lockedBalance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54,
                                  "src": "8486:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8462:45:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8510:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8462:49:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7a65726f207374616b65722062616c616e6365",
                              "id": 560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8525:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a3a4c5b477f2cbe1c094512a4b8095c70ddae050077cd51c2c2e7685b3ec68d6",
                                "typeString": "literal_string \"zero staker balance\""
                              },
                              "value": "zero staker balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a3a4c5b477f2cbe1c094512a4b8095c70ddae050077cd51c2c2e7685b3ec68d6",
                                "typeString": "literal_string \"zero staker balance\""
                              }
                            ],
                            "id": 552,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8441:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8441:115:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 562,
                        "nodeType": "ExpressionStatement",
                        "src": "8441:115:0"
                      },
                      {
                        "assignments": [
                          564
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 564,
                            "mutability": "mutable",
                            "name": "_slashAmount",
                            "nameLocation": "8574:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 659,
                            "src": "8566:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 563,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8566:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 565,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8566:20:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 566,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "8600:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                "typeString": "struct TellorFlex.StakeInfo storage pointer"
                              }
                            },
                            "id": 567,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lockedBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54,
                            "src": "8600:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 568,
                            "name": "stakeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "8625:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8600:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 581,
                                  "name": "_staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 547,
                                  "src": "8762:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                    "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                  }
                                },
                                "id": 582,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lockedBalance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 54,
                                "src": "8762:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "expression": {
                                  "id": 583,
                                  "name": "_staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 547,
                                  "src": "8786:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                    "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                  }
                                },
                                "id": 584,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "stakedBalance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 52,
                                "src": "8786:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8762:45:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 586,
                              "name": "stakeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "8811:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8762:60:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 640,
                            "nodeType": "Block",
                            "src": "9072:218:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 621,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 615,
                                    "name": "_slashAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 564,
                                    "src": "9086:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 620,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 616,
                                        "name": "_staker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 547,
                                        "src": "9101:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                          "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                        }
                                      },
                                      "id": 617,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "stakedBalance",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 52,
                                      "src": "9101:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 618,
                                        "name": "_staker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 547,
                                        "src": "9125:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                          "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                        }
                                      },
                                      "id": 619,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lockedBalance",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 54,
                                      "src": "9125:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9101:45:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9086:60:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 622,
                                "nodeType": "ExpressionStatement",
                                "src": "9086:60:0"
                              },
                              {
                                "expression": {
                                  "id": 626,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 623,
                                    "name": "totalStakeAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12,
                                    "src": "9160:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "-=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 624,
                                      "name": "_staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 547,
                                      "src": "9180:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                        "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                      }
                                    },
                                    "id": 625,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "stakedBalance",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 52,
                                    "src": "9180:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9160:41:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 627,
                                "nodeType": "ExpressionStatement",
                                "src": "9160:41:0"
                              },
                              {
                                "expression": {
                                  "id": 632,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "id": 628,
                                      "name": "_staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 547,
                                      "src": "9215:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                        "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                      }
                                    },
                                    "id": 630,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "stakedBalance",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 52,
                                    "src": "9215:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "30",
                                    "id": 631,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9239:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9215:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 633,
                                "nodeType": "ExpressionStatement",
                                "src": "9215:25:0"
                              },
                              {
                                "expression": {
                                  "id": 638,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "id": 634,
                                      "name": "_staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 547,
                                      "src": "9254:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                        "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                      }
                                    },
                                    "id": 636,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "lockedBalance",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 54,
                                    "src": "9254:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "30",
                                    "id": 637,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9278:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9254:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 639,
                                "nodeType": "ExpressionStatement",
                                "src": "9254:25:0"
                              }
                            ]
                          },
                          "id": 641,
                          "nodeType": "IfStatement",
                          "src": "8745:545:0",
                          "trueBody": {
                            "id": 614,
                            "nodeType": "Block",
                            "src": "8833:233:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 590,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 588,
                                    "name": "_slashAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 564,
                                    "src": "8847:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 589,
                                    "name": "stakeAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10,
                                    "src": "8862:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8847:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 591,
                                "nodeType": "ExpressionStatement",
                                "src": "8847:26:0"
                              },
                              {
                                "expression": {
                                  "id": 599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "id": 592,
                                      "name": "_staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 547,
                                      "src": "8887:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                        "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                      }
                                    },
                                    "id": 594,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "stakedBalance",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 52,
                                    "src": "8887:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "-=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 598,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 595,
                                      "name": "stakeAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10,
                                      "src": "8912:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 596,
                                        "name": "_staker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 547,
                                        "src": "8926:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                          "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                        }
                                      },
                                      "id": 597,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lockedBalance",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 54,
                                      "src": "8926:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8912:35:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8887:60:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 600,
                                "nodeType": "ExpressionStatement",
                                "src": "8887:60:0"
                              },
                              {
                                "expression": {
                                  "id": 606,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 601,
                                    "name": "totalStakeAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12,
                                    "src": "8961:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "-=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 605,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 602,
                                      "name": "stakeAmount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10,
                                      "src": "8981:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 603,
                                        "name": "_staker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 547,
                                        "src": "8995:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                          "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                        }
                                      },
                                      "id": 604,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lockedBalance",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 54,
                                      "src": "8995:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "8981:35:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8961:55:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 607,
                                "nodeType": "ExpressionStatement",
                                "src": "8961:55:0"
                              },
                              {
                                "expression": {
                                  "id": 612,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "id": 608,
                                      "name": "_staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 547,
                                      "src": "9030:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                        "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                      }
                                    },
                                    "id": 610,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "lockedBalance",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 54,
                                    "src": "9030:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "hexValue": "30",
                                    "id": 611,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9054:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9030:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 613,
                                "nodeType": "ExpressionStatement",
                                "src": "9030:25:0"
                              }
                            ]
                          }
                        },
                        "id": 642,
                        "nodeType": "IfStatement",
                        "src": "8596:694:0",
                        "trueBody": {
                          "id": 580,
                          "nodeType": "Block",
                          "src": "8638:101:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 570,
                                  "name": "_slashAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 564,
                                  "src": "8652:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 571,
                                  "name": "stakeAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "8667:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8652:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 573,
                              "nodeType": "ExpressionStatement",
                              "src": "8652:26:0"
                            },
                            {
                              "expression": {
                                "id": 578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 574,
                                    "name": "_staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 547,
                                    "src": "8692:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                      "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                    }
                                  },
                                  "id": 576,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "lockedBalance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 54,
                                  "src": "8692:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 577,
                                  "name": "stakeAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10,
                                  "src": "8717:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8692:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 579,
                              "nodeType": "ExpressionStatement",
                              "src": "8692:36:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 646,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "9314:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 647,
                              "name": "_slashAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 564,
                              "src": "9326:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 643,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "9299:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1264",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1252,
                            "src": "9299:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9299:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 649,
                        "nodeType": "ExpressionStatement",
                        "src": "9299:40:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 651,
                              "name": "_reporter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 530,
                              "src": "9370:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 652,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "9381:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 653,
                              "name": "_slashAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 564,
                              "src": "9393:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 650,
                            "name": "ReporterSlashed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103,
                            "src": "9354:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9354:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 655,
                        "nodeType": "EmitStatement",
                        "src": "9349:57:0"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 656,
                              "name": "_slashAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 564,
                              "src": "9424:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 657,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "9423:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 536,
                        "id": 658,
                        "nodeType": "Return",
                        "src": "9416:21:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 528,
                    "nodeType": "StructuredDocumentation",
                    "src": "7788:386:0",
                    "text": " @dev Slashes a reporter and transfers their stake amount to the given recipient\n Note: this function is only callable by the governance address.\n @param _reporter is the address of the reporter being slashed\n @param _recipient is the address receiving the reporter's stake\n @return uint256 amount of token slashed and sent to recipient address"
                  },
                  "functionSelector": "4dfc2a34",
                  "id": 660,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "slashReporter",
                  "nameLocation": "8188:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 533,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 530,
                        "mutability": "mutable",
                        "name": "_reporter",
                        "nameLocation": "8210:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 660,
                        "src": "8202:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 529,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8202:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 532,
                        "mutability": "mutable",
                        "name": "_recipient",
                        "nameLocation": "8229:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 660,
                        "src": "8221:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8221:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8201:39:0"
                  },
                  "returnParameters": {
                    "id": 536,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 535,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 660,
                        "src": "8275:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 534,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8275:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8274:9:0"
                  },
                  "scope": 1234,
                  "src": "8179:1265:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 845,
                    "nodeType": "Block",
                    "src": "9980:1868:0",
                    "statements": [
                      {
                        "assignments": [
                          674
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 674,
                            "mutability": "mutable",
                            "name": "rep",
                            "nameLocation": "10005:3:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 845,
                            "src": "9990:18:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                              "typeString": "struct TellorFlex.Report"
                            },
                            "typeName": {
                              "id": 673,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 672,
                                "name": "Report",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 48,
                                "src": "9990:6:0"
                              },
                              "referencedDeclaration": 48,
                              "src": "9990:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                "typeString": "struct TellorFlex.Report"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 678,
                        "initialValue": {
                          "baseExpression": {
                            "id": 675,
                            "name": "reports",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "10011:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                              "typeString": "mapping(bytes32 => struct TellorFlex.Report storage ref)"
                            }
                          },
                          "id": 677,
                          "indexExpression": {
                            "id": 676,
                            "name": "_queryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "10019:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10011:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Report_$48_storage",
                            "typeString": "struct TellorFlex.Report storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9990:38:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 688,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 684,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 680,
                                  "name": "_nonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 667,
                                  "src": "10059:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 681,
                                      "name": "rep",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 674,
                                      "src": "10069:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                        "typeString": "struct TellorFlex.Report storage pointer"
                                      }
                                    },
                                    "id": 682,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamps",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 31,
                                    "src": "10069:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 683,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "10069:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10059:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 685,
                                  "name": "_nonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 667,
                                  "src": "10094:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 686,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10104:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "10094:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "10059:46:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6e6f6e6365206d757374206d617463682074696d657374616d7020696e646578",
                              "id": 689,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10119:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7b15e51d279d80d81e1fc0908dcc556966bdf31135ced551977dc05553339722",
                                "typeString": "literal_string \"nonce must match timestamp index\""
                              },
                              "value": "nonce must match timestamp index"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7b15e51d279d80d81e1fc0908dcc556966bdf31135ced551977dc05553339722",
                                "typeString": "literal_string \"nonce must match timestamp index\""
                              }
                            ],
                            "id": 679,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10038:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10038:125:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 691,
                        "nodeType": "ExpressionStatement",
                        "src": "10038:125:0"
                      },
                      {
                        "assignments": [
                          694
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 694,
                            "mutability": "mutable",
                            "name": "_staker",
                            "nameLocation": "10191:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 845,
                            "src": "10173:25:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                              "typeString": "struct TellorFlex.StakeInfo"
                            },
                            "typeName": {
                              "id": 693,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 692,
                                "name": "StakeInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 63,
                                "src": "10173:9:0"
                              },
                              "referencedDeclaration": 63,
                              "src": "10173:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                "typeString": "struct TellorFlex.StakeInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 699,
                        "initialValue": {
                          "baseExpression": {
                            "id": 695,
                            "name": "stakerDetails",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "10201:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$63_storage_$",
                              "typeString": "mapping(address => struct TellorFlex.StakeInfo storage ref)"
                            }
                          },
                          "id": 698,
                          "indexExpression": {
                            "expression": {
                              "id": 696,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10215:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 697,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10215:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10201:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakeInfo_$63_storage",
                            "typeString": "struct TellorFlex.StakeInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10173:53:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 701,
                                  "name": "_staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 694,
                                  "src": "10257:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                    "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                  }
                                },
                                "id": 702,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "stakedBalance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 52,
                                "src": "10257:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 703,
                                "name": "stakeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "10282:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10257:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "62616c616e6365206d7573742062652067726561746572207468616e207374616b6520616d6f756e74",
                              "id": 705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10307:43:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7e1efbb043fa6ec74f24242163f1616774ee8060f734746ea5be09c5f4cc0a3b",
                                "typeString": "literal_string \"balance must be greater than stake amount\""
                              },
                              "value": "balance must be greater than stake amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7e1efbb043fa6ec74f24242163f1616774ee8060f734746ea5be09c5f4cc0a3b",
                                "typeString": "literal_string \"balance must be greater than stake amount\""
                              }
                            ],
                            "id": 700,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10236:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10236:124:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 707,
                        "nodeType": "ExpressionStatement",
                        "src": "10236:124:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 716,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 713,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 709,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -4,
                                          "src": "10453:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 710,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "10453:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 711,
                                          "name": "_staker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 694,
                                          "src": "10471:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                            "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                          }
                                        },
                                        "id": 712,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "reporterLastTimestamp",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 56,
                                        "src": "10471:29:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10453:47:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 714,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "10452:49:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31303030",
                                  "id": 715,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10504:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "src": "10452:56:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 719,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 717,
                                        "name": "reportingLock",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 14,
                                        "src": "10528:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "31303030",
                                        "id": 718,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10544:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000_by_1",
                                          "typeString": "int_const 1000"
                                        },
                                        "value": "1000"
                                      },
                                      "src": "10528:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 720,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "10527:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 724,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 721,
                                          "name": "_staker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 694,
                                          "src": "10553:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                            "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                          }
                                        },
                                        "id": 722,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "stakedBalance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 52,
                                        "src": "10553:21:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 723,
                                        "name": "stakeAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10,
                                        "src": "10577:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10553:35:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 725,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "10552:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10527:62:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10452:137:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7374696c6c20696e207265706f727465722074696d65206c6f636b2c20706c65617365207761697421",
                              "id": 728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10603:43:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d81ec119481359bdd127efa2e03f66c477f0a2ffdb643db5706370fef44fb00e",
                                "typeString": "literal_string \"still in reporter time lock, please wait!\""
                              },
                              "value": "still in reporter time lock, please wait!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d81ec119481359bdd127efa2e03f66c477f0a2ffdb643db5706370fef44fb00e",
                                "typeString": "literal_string \"still in reporter time lock, please wait!\""
                              }
                            ],
                            "id": 708,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10431:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10431:225:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 730,
                        "nodeType": "ExpressionStatement",
                        "src": "10431:225:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 736,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 732,
                                  "name": "_queryId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 663,
                                  "src": "10687:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 734,
                                      "name": "_queryData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 669,
                                      "src": "10709:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 733,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "10699:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 735,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10699:21:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "10687:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 742,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 739,
                                      "name": "_queryId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 663,
                                      "src": "10732:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "id": 738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10724:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 737,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10724:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 740,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10724:17:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 741,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10745:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "10724:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "10687:61:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6964206d7573742062652068617368206f662062797465732064617461",
                              "id": 744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10762:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_365165a3cc331b03e63440264952201ac1cbb1ccd5c356779f410908d37b2f0f",
                                "typeString": "literal_string \"id must be hash of bytes data\""
                              },
                              "value": "id must be hash of bytes data"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_365165a3cc331b03e63440264952201ac1cbb1ccd5c356779f410908d37b2f0f",
                                "typeString": "literal_string \"id must be hash of bytes data\""
                              }
                            ],
                            "id": 731,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10666:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10666:137:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 746,
                        "nodeType": "ExpressionStatement",
                        "src": "10666:137:0"
                      },
                      {
                        "expression": {
                          "id": 752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 747,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "10813:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                "typeString": "struct TellorFlex.StakeInfo storage pointer"
                              }
                            },
                            "id": 749,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "reporterLastTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 56,
                            "src": "10813:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 750,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10845:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10845:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10813:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 753,
                        "nodeType": "ExpressionStatement",
                        "src": "10813:47:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 755,
                                    "name": "rep",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 674,
                                    "src": "10947:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                      "typeString": "struct TellorFlex.Report storage pointer"
                                    }
                                  },
                                  "id": 756,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "reporterByTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 47,
                                  "src": "10947:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                    "typeString": "mapping(uint256 => address)"
                                  }
                                },
                                "id": 759,
                                "indexExpression": {
                                  "expression": {
                                    "id": 757,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "10971:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 758,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "10971:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10947:40:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 762,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10999:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 761,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10991:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 760,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10991:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10991:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "10947:54:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "74696d657374616d7020616c7265616479207265706f7274656420666f72",
                              "id": 765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11015:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d541686ca6297aaf5fdbb7b57ddce3782e7a3f89c7d209c488e689b7919b2c40",
                                "typeString": "literal_string \"timestamp already reported for\""
                              },
                              "value": "timestamp already reported for"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d541686ca6297aaf5fdbb7b57ddce3782e7a3f89c7d209c488e689b7919b2c40",
                                "typeString": "literal_string \"timestamp already reported for\""
                              }
                            ],
                            "id": 754,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10926:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10926:131:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 767,
                        "nodeType": "ExpressionStatement",
                        "src": "10926:131:0"
                      },
                      {
                        "expression": {
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 768,
                                "name": "rep",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 674,
                                "src": "11161:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                  "typeString": "struct TellorFlex.Report storage pointer"
                                }
                              },
                              "id": 772,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestampIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35,
                              "src": "11161:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 773,
                            "indexExpression": {
                              "expression": {
                                "id": 770,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "11180:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "11180:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11161:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 774,
                                "name": "rep",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 674,
                                "src": "11199:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                  "typeString": "struct TellorFlex.Report storage pointer"
                                }
                              },
                              "id": 775,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31,
                              "src": "11199:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11199:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11161:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 778,
                        "nodeType": "ExpressionStatement",
                        "src": "11161:59:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 784,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "11250:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "11250:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 779,
                                "name": "rep",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 674,
                                "src": "11230:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                  "typeString": "struct TellorFlex.Report storage pointer"
                                }
                              },
                              "id": 782,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31,
                              "src": "11230:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "11230:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11230:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 787,
                        "nodeType": "ExpressionStatement",
                        "src": "11230:36:0"
                      },
                      {
                        "expression": {
                          "id": 796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 788,
                                "name": "rep",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 674,
                                "src": "11276:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                  "typeString": "struct TellorFlex.Report storage pointer"
                                }
                              },
                              "id": 792,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestampToBlockNum",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 39,
                              "src": "11276:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 793,
                            "indexExpression": {
                              "expression": {
                                "id": 790,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "11300:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "11300:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11276:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 794,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11319:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "11319:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11276:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 797,
                        "nodeType": "ExpressionStatement",
                        "src": "11276:55:0"
                      },
                      {
                        "expression": {
                          "id": 805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 798,
                                "name": "rep",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 674,
                                "src": "11341:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                  "typeString": "struct TellorFlex.Report storage pointer"
                                }
                              },
                              "id": 802,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "valueByTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43,
                              "src": "11341:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                                "typeString": "mapping(uint256 => bytes storage ref)"
                              }
                            },
                            "id": 803,
                            "indexExpression": {
                              "expression": {
                                "id": 800,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "11362:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "11362:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11341:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 804,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 665,
                            "src": "11381:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "src": "11341:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 806,
                        "nodeType": "ExpressionStatement",
                        "src": "11341:46:0"
                      },
                      {
                        "expression": {
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "expression": {
                                "id": 807,
                                "name": "rep",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 674,
                                "src": "11397:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Report_$48_storage_ptr",
                                  "typeString": "struct TellorFlex.Report storage pointer"
                                }
                              },
                              "id": 811,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "reporterByTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 47,
                              "src": "11397:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 812,
                            "indexExpression": {
                              "expression": {
                                "id": 809,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "11421:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "11421:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11397:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 813,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11440:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11440:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11397:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 816,
                        "nodeType": "ExpressionStatement",
                        "src": "11397:53:0"
                      },
                      {
                        "expression": {
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 817,
                            "name": "timeOfLastNewValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "11541:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 818,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11562:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "11562:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11541:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 821,
                        "nodeType": "ExpressionStatement",
                        "src": "11541:36:0"
                      },
                      {
                        "expression": {
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "11587:26:0",
                          "subExpression": {
                            "expression": {
                              "id": 822,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "11587:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                "typeString": "struct TellorFlex.StakeInfo storage pointer"
                              }
                            },
                            "id": 824,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "reportsSubmitted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "11587:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 826,
                        "nodeType": "ExpressionStatement",
                        "src": "11587:26:0"
                      },
                      {
                        "expression": {
                          "id": 832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "11623:45:0",
                          "subExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 827,
                                "name": "_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 694,
                                "src": "11623:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                  "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                }
                              },
                              "id": 830,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "reportsSubmittedByQueryId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62,
                              "src": "11623:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                "typeString": "mapping(bytes32 => uint256)"
                              }
                            },
                            "id": 831,
                            "indexExpression": {
                              "id": 829,
                              "name": "_queryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 663,
                              "src": "11657:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11623:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 833,
                        "nodeType": "ExpressionStatement",
                        "src": "11623:45:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 835,
                              "name": "_queryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 663,
                              "src": "11706:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 836,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "11728:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "11728:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 838,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 665,
                              "src": "11757:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "id": 839,
                              "name": "_nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 667,
                              "src": "11777:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 840,
                              "name": "_queryData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 669,
                              "src": "11797:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 841,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11821:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11821:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 834,
                            "name": "NewReport",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81,
                            "src": "11683:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$_t_bytes_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,uint256,bytes memory,uint256,bytes memory,address)"
                            }
                          },
                          "id": 843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11683:158:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 844,
                        "nodeType": "EmitStatement",
                        "src": "11678:163:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 661,
                    "nodeType": "StructuredDocumentation",
                    "src": "9450:375:0",
                    "text": " @dev Allows a reporter to submit a value to the oracle\n @param _queryId is ID of the specific data feed. Equals keccak256(_queryData) for non-legacy IDs\n @param _value is the value the user submits to the oracle\n @param _nonce is the current value count for the query id\n @param _queryData is the data used to fulfill the data query"
                  },
                  "functionSelector": "5eaa9ced",
                  "id": 846,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "submitValue",
                  "nameLocation": "9839:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 670,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 663,
                        "mutability": "mutable",
                        "name": "_queryId",
                        "nameLocation": "9868:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 846,
                        "src": "9860:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 662,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "9860:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 665,
                        "mutability": "mutable",
                        "name": "_value",
                        "nameLocation": "9901:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 846,
                        "src": "9886:21:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 664,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9886:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 667,
                        "mutability": "mutable",
                        "name": "_nonce",
                        "nameLocation": "9925:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 846,
                        "src": "9917:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 666,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9917:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 669,
                        "mutability": "mutable",
                        "name": "_queryData",
                        "nameLocation": "9954:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 846,
                        "src": "9941:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 668,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "9941:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9850:120:0"
                  },
                  "returnParameters": {
                    "id": 671,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9980:0:0"
                  },
                  "scope": 1234,
                  "src": "9830:2018:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 897,
                    "nodeType": "Block",
                    "src": "11945:417:0",
                    "statements": [
                      {
                        "assignments": [
                          852
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 852,
                            "mutability": "mutable",
                            "name": "_s",
                            "nameLocation": "11973:2:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 897,
                            "src": "11955:20:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                              "typeString": "struct TellorFlex.StakeInfo"
                            },
                            "typeName": {
                              "id": 851,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 850,
                                "name": "StakeInfo",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 63,
                                "src": "11955:9:0"
                              },
                              "referencedDeclaration": 63,
                              "src": "11955:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                "typeString": "struct TellorFlex.StakeInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 857,
                        "initialValue": {
                          "baseExpression": {
                            "id": 853,
                            "name": "stakerDetails",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "11978:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$63_storage_$",
                              "typeString": "mapping(address => struct TellorFlex.StakeInfo storage ref)"
                            }
                          },
                          "id": 856,
                          "indexExpression": {
                            "expression": {
                              "id": 854,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11992:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11992:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11978:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakeInfo_$63_storage",
                            "typeString": "struct TellorFlex.StakeInfo storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11955:48:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 859,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "12090:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 860,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "12090:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 861,
                                    "name": "_s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 852,
                                    "src": "12108:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                      "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                    }
                                  },
                                  "id": 862,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "startDate",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50,
                                  "src": "12108:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12090:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "hexValue": "37",
                                "id": 864,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12124:6:0",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_604800_by_1",
                                  "typeString": "int_const 604800"
                                },
                                "value": "7"
                              },
                              "src": "12090:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "372064617973206469646e27742070617373",
                              "id": 866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12132:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5164376a34f3fc53325bb8adc1cd7d656523d5ae2d49ee3ed4e8e2f54a5d3790",
                                "typeString": "literal_string \"7 days didn't pass\""
                              },
                              "value": "7 days didn't pass"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5164376a34f3fc53325bb8adc1cd7d656523d5ae2d49ee3ed4e8e2f54a5d3790",
                                "typeString": "literal_string \"7 days didn't pass\""
                              }
                            ],
                            "id": 858,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12082:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12082:71:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 868,
                        "nodeType": "ExpressionStatement",
                        "src": "12082:71:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 870,
                                  "name": "_s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 852,
                                  "src": "12171:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                    "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                  }
                                },
                                "id": 871,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lockedBalance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 54,
                                "src": "12171:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12190:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12171:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7265706f72746572206e6f74206c6f636b656420666f72207769746864726177616c",
                              "id": 874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12193:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c41f72c59331ebb81fb9f07a8ed7914d4a048f238f80301189e2a9368bbeb774",
                                "typeString": "literal_string \"reporter not locked for withdrawal\""
                              },
                              "value": "reporter not locked for withdrawal"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c41f72c59331ebb81fb9f07a8ed7914d4a048f238f80301189e2a9368bbeb774",
                                "typeString": "literal_string \"reporter not locked for withdrawal\""
                              }
                            ],
                            "id": 869,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12163:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12163:67:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 876,
                        "nodeType": "ExpressionStatement",
                        "src": "12163:67:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 880,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12255:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12255:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 882,
                                "name": "_s",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 852,
                                "src": "12267:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                  "typeString": "struct TellorFlex.StakeInfo storage pointer"
                                }
                              },
                              "id": 883,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lockedBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54,
                              "src": "12267:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 877,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "12240:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1264",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 879,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1252,
                            "src": "12240:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12240:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 885,
                        "nodeType": "ExpressionStatement",
                        "src": "12240:44:0"
                      },
                      {
                        "expression": {
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 886,
                              "name": "_s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 852,
                              "src": "12294:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage_ptr",
                                "typeString": "struct TellorFlex.StakeInfo storage pointer"
                              }
                            },
                            "id": 888,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lockedBalance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 54,
                            "src": "12294:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 889,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12313:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12294:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 891,
                        "nodeType": "ExpressionStatement",
                        "src": "12294:20:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 893,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12344:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12344:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 892,
                            "name": "StakeWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "12329:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12329:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 896,
                        "nodeType": "EmitStatement",
                        "src": "12324:31:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 847,
                    "nodeType": "StructuredDocumentation",
                    "src": "11854:52:0",
                    "text": " @dev Withdraws a reporter's stake"
                  },
                  "functionSelector": "bed9d861",
                  "id": 898,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdrawStake",
                  "nameLocation": "11920:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 848,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11933:2:0"
                  },
                  "returnParameters": {
                    "id": 849,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11945:0:0"
                  },
                  "scope": 1234,
                  "src": "11911:451:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 915,
                    "nodeType": "Block",
                    "src": "12804:73:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 908,
                                "name": "reports",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "12821:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                                  "typeString": "mapping(bytes32 => struct TellorFlex.Report storage ref)"
                                }
                              },
                              "id": 910,
                              "indexExpression": {
                                "id": 909,
                                "name": "_queryId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 901,
                                "src": "12829:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12821:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Report_$48_storage",
                                "typeString": "struct TellorFlex.Report storage ref"
                              }
                            },
                            "id": 911,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestampToBlockNum",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "12821:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 913,
                          "indexExpression": {
                            "id": 912,
                            "name": "_timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "12859:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12821:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 907,
                        "id": 914,
                        "nodeType": "Return",
                        "src": "12814:56:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 899,
                    "nodeType": "StructuredDocumentation",
                    "src": "12382:284:0",
                    "text": " @dev Returns the block number at a given timestamp\n @param _queryId is ID of the specific data feed\n @param _timestamp is the timestamp to find the corresponding block number for\n @return uint256 block number of the timestamp for the given data ID"
                  },
                  "functionSelector": "935408d0",
                  "id": 916,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBlockNumberByTimestamp",
                  "nameLocation": "12680:25:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 904,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 901,
                        "mutability": "mutable",
                        "name": "_queryId",
                        "nameLocation": "12714:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 916,
                        "src": "12706:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 900,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "12706:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 903,
                        "mutability": "mutable",
                        "name": "_timestamp",
                        "nameLocation": "12732:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 916,
                        "src": "12724:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 902,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12724:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12705:38:0"
                  },
                  "returnParameters": {
                    "id": 907,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 906,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 916,
                        "src": "12791:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12791:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12790:9:0"
                  },
                  "scope": 1234,
                  "src": "12671:206:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 942,
                    "nodeType": "Block",
                    "src": "13196:209:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 924,
                                "name": "reports",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "13225:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                                  "typeString": "mapping(bytes32 => struct TellorFlex.Report storage ref)"
                                }
                              },
                              "id": 926,
                              "indexExpression": {
                                "id": 925,
                                "name": "_queryId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 919,
                                "src": "13233:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13225:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Report_$48_storage",
                                "typeString": "struct TellorFlex.Report storage ref"
                              }
                            },
                            "id": 927,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "valueByTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43,
                            "src": "13225:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                              "typeString": "mapping(uint256 => bytes storage ref)"
                            }
                          },
                          "id": 940,
                          "indexExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 928,
                                  "name": "reports",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23,
                                  "src": "13277:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                                    "typeString": "mapping(bytes32 => struct TellorFlex.Report storage ref)"
                                  }
                                },
                                "id": 930,
                                "indexExpression": {
                                  "id": 929,
                                  "name": "_queryId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 919,
                                  "src": "13285:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13277:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Report_$48_storage",
                                  "typeString": "struct TellorFlex.Report storage ref"
                                }
                              },
                              "id": 931,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamps",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 31,
                              "src": "13277:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 939,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 932,
                                      "name": "reports",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23,
                                      "src": "13327:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                                        "typeString": "mapping(bytes32 => struct TellorFlex.Report storage ref)"
                                      }
                                    },
                                    "id": 934,
                                    "indexExpression": {
                                      "id": 933,
                                      "name": "_queryId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 919,
                                      "src": "13335:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13327:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Report_$48_storage",
                                      "typeString": "struct TellorFlex.Report storage ref"
                                    }
                                  },
                                  "id": 935,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamps",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 31,
                                  "src": "13327:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                    "typeString": "uint256[] storage ref"
                                  }
                                },
                                "id": 936,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "13327:35:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 937,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13365:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "13327:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13277:107:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13225:173:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "functionReturnParameters": 923,
                        "id": 941,
                        "nodeType": "Return",
                        "src": "13206:192:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 917,
                    "nodeType": "StructuredDocumentation",
                    "src": "12883:200:0",
                    "text": " @dev Returns the current value of a data feed given a specific ID\n @param _queryId is the ID of the specific data feed\n @return bytes memory of the current value of data"
                  },
                  "functionSelector": "adf1639d",
                  "id": 943,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentValue",
                  "nameLocation": "13097:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 920,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 919,
                        "mutability": "mutable",
                        "name": "_queryId",
                        "nameLocation": "13121:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "13113:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 918,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "13113:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13112:18:0"
                  },
                  "returnParameters": {
                    "id": 923,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 922,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 943,
                        "src": "13178:12:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 921,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "13178:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13177:14:0"
                  },
                  "scope": 1234,
                  "src": "13088:317:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 951,
                    "nodeType": "Block",
                    "src": "13564:34:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 949,
                          "name": "governance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "13581:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 948,
                        "id": 950,
                        "nodeType": "Return",
                        "src": "13574:17:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 944,
                    "nodeType": "StructuredDocumentation",
                    "src": "13411:84:0",
                    "text": " @dev Returns governance address\n @return address governance"
                  },
                  "functionSelector": "73252494",
                  "id": 952,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGovernanceAddress",
                  "nameLocation": "13509:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 945,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13529:2:0"
                  },
                  "returnParameters": {
                    "id": 948,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 947,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 952,
                        "src": "13555:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 946,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13555:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13554:9:0"
                  },
                  "scope": 1234,
                  "src": "13500:98:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 966,
                    "nodeType": "Block",
                    "src": "13929:59:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 960,
                                "name": "reports",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "13946:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                                  "typeString": "mapping(bytes32 => struct TellorFlex.Report storage ref)"
                                }
                              },
                              "id": 962,
                              "indexExpression": {
                                "id": 961,
                                "name": "_queryId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 955,
                                "src": "13954:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13946:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Report_$48_storage",
                                "typeString": "struct TellorFlex.Report storage ref"
                              }
                            },
                            "id": 963,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamps",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "13946:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "13946:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 959,
                        "id": 965,
                        "nodeType": "Return",
                        "src": "13939:42:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 953,
                    "nodeType": "StructuredDocumentation",
                    "src": "13604:207:0",
                    "text": " @dev Counts the number of values that have been submitted for the request.\n @param _queryId the id to look up\n @return uint256 count of the number of values received for the id"
                  },
                  "functionSelector": "77b03e0d",
                  "id": 967,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNewValueCountbyQueryId",
                  "nameLocation": "13825:25:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 956,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 955,
                        "mutability": "mutable",
                        "name": "_queryId",
                        "nameLocation": "13859:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 967,
                        "src": "13851:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 954,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "13851:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13850:18:0"
                  },
                  "returnParameters": {
                    "id": 959,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 958,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 967,
                        "src": "13916:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 957,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13916:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13915:9:0"
                  },
                  "scope": 1234,
                  "src": "13816:172:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1027,
                    "nodeType": "Block",
                    "src": "14456:354:0",
                    "statements": [
                      {
                        "assignments": [
                          980
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 980,
                            "mutability": "mutable",
                            "name": "_wasRemoved",
                            "nameLocation": "14471:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1027,
                            "src": "14466:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 979,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "14466:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1017,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 981,
                                      "name": "reports",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23,
                                      "src": "14485:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                                        "typeString": "mapping(bytes32 => struct TellorFlex.Report storage ref)"
                                      }
                                    },
                                    "id": 983,
                                    "indexExpression": {
                                      "id": 982,
                                      "name": "_queryId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 970,
                                      "src": "14493:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14485:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Report_$48_storage",
                                      "typeString": "struct TellorFlex.Report storage ref"
                                    }
                                  },
                                  "id": 984,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestampIndex",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 35,
                                  "src": "14485:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                    "typeString": "mapping(uint256 => uint256)"
                                  }
                                },
                                "id": 986,
                                "indexExpression": {
                                  "id": 985,
                                  "name": "_timestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 972,
                                  "src": "14518:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14485:44:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 987,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14533:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "14485:49:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 1003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 990,
                                          "name": "reports",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23,
                                          "src": "14560:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                                            "typeString": "mapping(bytes32 => struct TellorFlex.Report storage ref)"
                                          }
                                        },
                                        "id": 992,
                                        "indexExpression": {
                                          "id": 991,
                                          "name": "_queryId",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 970,
                                          "src": "14568:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14560:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Report_$48_storage",
                                          "typeString": "struct TellorFlex.Report storage ref"
                                        }
                                      },
                                      "id": 993,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "valueByTimestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 43,
                                      "src": "14560:34:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                                        "typeString": "mapping(uint256 => bytes storage ref)"
                                      }
                                    },
                                    "id": 995,
                                    "indexExpression": {
                                      "id": 994,
                                      "name": "_timestamp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 972,
                                      "src": "14595:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14560:46:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    }
                                  ],
                                  "id": 989,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "14550:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14550:57:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "",
                                        "id": 1000,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14639:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        },
                                        "value": ""
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                          "typeString": "literal_string \"\""
                                        }
                                      ],
                                      "id": 999,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "14633:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 998,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "14633:5:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1001,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14633:9:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 997,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "14623:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 1002,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14623:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "14550:93:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "14485:158:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1015,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1005,
                                    "name": "reports",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23,
                                    "src": "14659:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                                      "typeString": "mapping(bytes32 => struct TellorFlex.Report storage ref)"
                                    }
                                  },
                                  "id": 1007,
                                  "indexExpression": {
                                    "id": 1006,
                                    "name": "_queryId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 970,
                                    "src": "14667:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14659:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Report_$48_storage",
                                    "typeString": "struct TellorFlex.Report storage ref"
                                  }
                                },
                                "id": 1008,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "reporterByTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 47,
                                "src": "14659:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 1010,
                              "indexExpression": {
                                "id": 1009,
                                "name": "_timestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 972,
                                "src": "14697:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14659:49:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1013,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14720:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1012,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14712:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1011,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14712:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1014,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14712:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "14659:63:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14485:237:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14466:256:0"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1018,
                                    "name": "reports",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23,
                                    "src": "14740:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                                      "typeString": "mapping(bytes32 => struct TellorFlex.Report storage ref)"
                                    }
                                  },
                                  "id": 1020,
                                  "indexExpression": {
                                    "id": 1019,
                                    "name": "_queryId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 970,
                                    "src": "14748:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14740:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Report_$48_storage",
                                    "typeString": "struct TellorFlex.Report storage ref"
                                  }
                                },
                                "id": 1021,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "reporterByTimestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 47,
                                "src": "14740:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                  "typeString": "mapping(uint256 => address)"
                                }
                              },
                              "id": 1023,
                              "indexExpression": {
                                "id": 1022,
                                "name": "_timestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 972,
                                "src": "14778:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14740:49:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1024,
                              "name": "_wasRemoved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 980,
                              "src": "14791:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1025,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14739:64:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                            "typeString": "tuple(address,bool)"
                          }
                        },
                        "functionReturnParameters": 978,
                        "id": 1026,
                        "nodeType": "Return",
                        "src": "14732:71:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 968,
                    "nodeType": "StructuredDocumentation",
                    "src": "13994:327:0",
                    "text": " @dev Returns reporter address and whether a value was removed for a given queryId and timestamp\n @param _queryId the id to look up\n @param _timestamp is the timestamp of the value to look up\n @return address reporter who submitted the value\n @return bool true if the value was removed"
                  },
                  "functionSelector": "2b6696a7",
                  "id": 1028,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReportDetails",
                  "nameLocation": "14335:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 973,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 970,
                        "mutability": "mutable",
                        "name": "_queryId",
                        "nameLocation": "14360:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1028,
                        "src": "14352:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 969,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "14352:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 972,
                        "mutability": "mutable",
                        "name": "_timestamp",
                        "nameLocation": "14378:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1028,
                        "src": "14370:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 971,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14370:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14351:38:0"
                  },
                  "returnParameters": {
                    "id": 978,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 975,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1028,
                        "src": "14437:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 974,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14437:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 977,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1028,
                        "src": "14446:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 976,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "14446:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14436:15:0"
                  },
                  "scope": 1234,
                  "src": "14326:484:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1045,
                    "nodeType": "Block",
                    "src": "15300:73:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1038,
                                "name": "reports",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "15317:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                                  "typeString": "mapping(bytes32 => struct TellorFlex.Report storage ref)"
                                }
                              },
                              "id": 1040,
                              "indexExpression": {
                                "id": 1039,
                                "name": "_queryId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1031,
                                "src": "15325:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15317:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Report_$48_storage",
                                "typeString": "struct TellorFlex.Report storage ref"
                              }
                            },
                            "id": 1041,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reporterByTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47,
                            "src": "15317:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 1043,
                          "indexExpression": {
                            "id": 1042,
                            "name": "_timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1033,
                            "src": "15355:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15317:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1037,
                        "id": 1044,
                        "nodeType": "Return",
                        "src": "15310:56:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1029,
                    "nodeType": "StructuredDocumentation",
                    "src": "14816:349:0",
                    "text": " @dev Returns the address of the reporter who submitted a value for a data ID at a specific time\n @param _queryId is ID of the specific data feed\n @param _timestamp is the timestamp to find a corresponding reporter for\n @return address of the reporter who reported the value for the data ID at the given timestamp"
                  },
                  "functionSelector": "e07c5486",
                  "id": 1046,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReporterByTimestamp",
                  "nameLocation": "15179:22:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1034,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1031,
                        "mutability": "mutable",
                        "name": "_queryId",
                        "nameLocation": "15210:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "15202:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1030,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "15202:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1033,
                        "mutability": "mutable",
                        "name": "_timestamp",
                        "nameLocation": "15228:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "15220:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15220:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15201:38:0"
                  },
                  "returnParameters": {
                    "id": 1037,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1036,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "15287:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1035,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15287:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15286:9:0"
                  },
                  "scope": 1234,
                  "src": "15170:203:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1059,
                    "nodeType": "Block",
                    "src": "15694:70:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1054,
                              "name": "stakerDetails",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "15711:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$63_storage_$",
                                "typeString": "mapping(address => struct TellorFlex.StakeInfo storage ref)"
                              }
                            },
                            "id": 1056,
                            "indexExpression": {
                              "id": 1055,
                              "name": "_reporter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1049,
                              "src": "15725:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "15711:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeInfo_$63_storage",
                              "typeString": "struct TellorFlex.StakeInfo storage ref"
                            }
                          },
                          "id": 1057,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reporterLastTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56,
                          "src": "15711:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1053,
                        "id": 1058,
                        "nodeType": "Return",
                        "src": "15704:53:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1047,
                    "nodeType": "StructuredDocumentation",
                    "src": "15379:197:0",
                    "text": " @dev Returns the timestamp of the reporter's last submission\n @param _reporter is address of the reporter\n @return uint256 timestamp of the reporter's last submission"
                  },
                  "functionSelector": "50005b83",
                  "id": 1060,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReporterLastTimestamp",
                  "nameLocation": "15590:24:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1049,
                        "mutability": "mutable",
                        "name": "_reporter",
                        "nameLocation": "15623:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "15615:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15615:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15614:19:0"
                  },
                  "returnParameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1052,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1060,
                        "src": "15681:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1051,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15681:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15680:9:0"
                  },
                  "scope": 1234,
                  "src": "15581:183:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1068,
                    "nodeType": "Block",
                    "src": "15990:37:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1066,
                          "name": "reportingLock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "16007:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1065,
                        "id": 1067,
                        "nodeType": "Return",
                        "src": "16000:20:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1061,
                    "nodeType": "StructuredDocumentation",
                    "src": "15770:155:0",
                    "text": " @dev Returns the reporting lock time, the amount of time a reporter must wait to submit again\n @return uint256 reporting lock time"
                  },
                  "functionSelector": "460c33a2",
                  "id": 1069,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReportingLock",
                  "nameLocation": "15939:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1062,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15955:2:0"
                  },
                  "returnParameters": {
                    "id": 1065,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1064,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1069,
                        "src": "15981:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1063,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15981:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15980:9:0"
                  },
                  "scope": 1234,
                  "src": "15930:97:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1082,
                    "nodeType": "Block",
                    "src": "16380:65:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1077,
                              "name": "stakerDetails",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "16397:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$63_storage_$",
                                "typeString": "mapping(address => struct TellorFlex.StakeInfo storage ref)"
                              }
                            },
                            "id": 1079,
                            "indexExpression": {
                              "id": 1078,
                              "name": "_reporter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1072,
                              "src": "16411:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16397:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakeInfo_$63_storage",
                              "typeString": "struct TellorFlex.StakeInfo storage ref"
                            }
                          },
                          "id": 1080,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "reportsSubmitted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58,
                          "src": "16397:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1076,
                        "id": 1081,
                        "nodeType": "Return",
                        "src": "16390:48:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1070,
                    "nodeType": "StructuredDocumentation",
                    "src": "16033:225:0",
                    "text": " @dev Returns the number of values submitted by a specific reporter address\n @param _reporter is the address of a reporter\n @return uint256 of the number of values submitted by the given reporter"
                  },
                  "functionSelector": "3878293e",
                  "id": 1083,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReportsSubmittedByAddress",
                  "nameLocation": "16272:28:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1073,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1072,
                        "mutability": "mutable",
                        "name": "_reporter",
                        "nameLocation": "16309:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1083,
                        "src": "16301:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1071,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16301:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16300:19:0"
                  },
                  "returnParameters": {
                    "id": 1076,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1075,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1083,
                        "src": "16367:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1074,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16367:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16366:9:0"
                  },
                  "scope": 1234,
                  "src": "16263:182:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1100,
                    "nodeType": "Block",
                    "src": "16922:84:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1093,
                                "name": "stakerDetails",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "16939:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$63_storage_$",
                                  "typeString": "mapping(address => struct TellorFlex.StakeInfo storage ref)"
                                }
                              },
                              "id": 1095,
                              "indexExpression": {
                                "id": 1094,
                                "name": "_reporter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1086,
                                "src": "16953:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16939:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_StakeInfo_$63_storage",
                                "typeString": "struct TellorFlex.StakeInfo storage ref"
                              }
                            },
                            "id": 1096,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "reportsSubmittedByQueryId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 62,
                            "src": "16939:50:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 1098,
                          "indexExpression": {
                            "id": 1097,
                            "name": "_queryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1088,
                            "src": "16990:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16939:60:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1092,
                        "id": 1099,
                        "nodeType": "Return",
                        "src": "16932:67:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1084,
                    "nodeType": "StructuredDocumentation",
                    "src": "16451:327:0",
                    "text": " @dev Returns the number of values submitted to a specific queryId by a specific reporter address\n @param _reporter is the address of a reporter\n @param _queryId is the ID of the specific data feed\n @return uint256 of the number of values submitted by the given reporter to the given queryId"
                  },
                  "functionSelector": "11938e08",
                  "id": 1101,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReportsSubmittedByAddressAndQueryId",
                  "nameLocation": "16792:38:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1089,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1086,
                        "mutability": "mutable",
                        "name": "_reporter",
                        "nameLocation": "16848:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1101,
                        "src": "16840:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1085,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16840:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1088,
                        "mutability": "mutable",
                        "name": "_queryId",
                        "nameLocation": "16875:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1101,
                        "src": "16867:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1087,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "16867:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16830:59:0"
                  },
                  "returnParameters": {
                    "id": 1092,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1091,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1101,
                        "src": "16913:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1090,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16913:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16912:9:0"
                  },
                  "scope": 1234,
                  "src": "16783:223:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1109,
                    "nodeType": "Block",
                    "src": "17182:35:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1107,
                          "name": "stakeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "17199:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1106,
                        "id": 1108,
                        "nodeType": "Return",
                        "src": "17192:18:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1102,
                    "nodeType": "StructuredDocumentation",
                    "src": "17012:107:0",
                    "text": " @dev Returns amount required to report oracle values\n @return uint256 stake amount"
                  },
                  "functionSelector": "722580b6",
                  "id": 1110,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStakeAmount",
                  "nameLocation": "17133:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1103,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17147:2:0"
                  },
                  "returnParameters": {
                    "id": 1106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1105,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1110,
                        "src": "17173:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1104,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17173:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17172:9:0"
                  },
                  "scope": 1234,
                  "src": "17124:93:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1148,
                    "nodeType": "Block",
                    "src": "17830:291:0",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1126,
                                  "name": "stakerDetails",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28,
                                  "src": "17861:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$63_storage_$",
                                    "typeString": "mapping(address => struct TellorFlex.StakeInfo storage ref)"
                                  }
                                },
                                "id": 1128,
                                "indexExpression": {
                                  "id": 1127,
                                  "name": "_staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1113,
                                  "src": "17875:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17861:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakeInfo_$63_storage",
                                  "typeString": "struct TellorFlex.StakeInfo storage ref"
                                }
                              },
                              "id": 1129,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "startDate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 50,
                              "src": "17861:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1130,
                                  "name": "stakerDetails",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28,
                                  "src": "17907:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$63_storage_$",
                                    "typeString": "mapping(address => struct TellorFlex.StakeInfo storage ref)"
                                  }
                                },
                                "id": 1132,
                                "indexExpression": {
                                  "id": 1131,
                                  "name": "_staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1113,
                                  "src": "17921:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17907:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakeInfo_$63_storage",
                                  "typeString": "struct TellorFlex.StakeInfo storage ref"
                                }
                              },
                              "id": 1133,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "stakedBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 52,
                              "src": "17907:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1134,
                                  "name": "stakerDetails",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28,
                                  "src": "17957:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$63_storage_$",
                                    "typeString": "mapping(address => struct TellorFlex.StakeInfo storage ref)"
                                  }
                                },
                                "id": 1136,
                                "indexExpression": {
                                  "id": 1135,
                                  "name": "_staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1113,
                                  "src": "17971:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17957:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakeInfo_$63_storage",
                                  "typeString": "struct TellorFlex.StakeInfo storage ref"
                                }
                              },
                              "id": 1137,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lockedBalance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 54,
                              "src": "17957:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1138,
                                  "name": "stakerDetails",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28,
                                  "src": "18007:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$63_storage_$",
                                    "typeString": "mapping(address => struct TellorFlex.StakeInfo storage ref)"
                                  }
                                },
                                "id": 1140,
                                "indexExpression": {
                                  "id": 1139,
                                  "name": "_staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1113,
                                  "src": "18021:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "18007:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakeInfo_$63_storage",
                                  "typeString": "struct TellorFlex.StakeInfo storage ref"
                                }
                              },
                              "id": 1141,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "reporterLastTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56,
                              "src": "18007:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1142,
                                  "name": "stakerDetails",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28,
                                  "src": "18065:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakeInfo_$63_storage_$",
                                    "typeString": "mapping(address => struct TellorFlex.StakeInfo storage ref)"
                                  }
                                },
                                "id": 1144,
                                "indexExpression": {
                                  "id": 1143,
                                  "name": "_staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1113,
                                  "src": "18079:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "18065:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_StakeInfo_$63_storage",
                                  "typeString": "struct TellorFlex.StakeInfo storage ref"
                                }
                              },
                              "id": 1145,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "reportsSubmitted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58,
                              "src": "18065:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1146,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17847:267:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256,uint256,uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 1125,
                        "id": 1147,
                        "nodeType": "Return",
                        "src": "17840:274:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1111,
                    "nodeType": "StructuredDocumentation",
                    "src": "17223:396:0",
                    "text": " @dev Allows users to retrieve all information about a staker\n @param _staker address of staker inquiring about\n @return uint startDate of staking\n @return uint current amount staked\n @return uint current amount locked for withdrawal\n @return uint reporter's last reported timestamp\n @return uint total number of reports submitted by reporter"
                  },
                  "functionSelector": "733bdef0",
                  "id": 1149,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStakerInfo",
                  "nameLocation": "17633:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1113,
                        "mutability": "mutable",
                        "name": "_staker",
                        "nameLocation": "17655:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1149,
                        "src": "17647:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1112,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17647:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17646:17:0"
                  },
                  "returnParameters": {
                    "id": 1125,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1116,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1149,
                        "src": "17724:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1115,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17724:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1118,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1149,
                        "src": "17745:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1117,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17745:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1120,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1149,
                        "src": "17766:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1119,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17766:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1122,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1149,
                        "src": "17787:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1121,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17787:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1124,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1149,
                        "src": "17808:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1123,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17808:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17710:115:0"
                  },
                  "scope": 1234,
                  "src": "17624:497:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1157,
                    "nodeType": "Block",
                    "src": "18348:42:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1155,
                          "name": "timeOfLastNewValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "18365:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1154,
                        "id": 1156,
                        "nodeType": "Return",
                        "src": "18358:25:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1150,
                    "nodeType": "StructuredDocumentation",
                    "src": "18127:151:0",
                    "text": " @dev Returns the timestamp for the last value of any ID from the oracle\n @return uint256 of timestamp of the last oracle value"
                  },
                  "functionSelector": "c0f95d52",
                  "id": 1158,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTimeOfLastNewValue",
                  "nameLocation": "18292:21:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1151,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "18313:2:0"
                  },
                  "returnParameters": {
                    "id": 1154,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1153,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1158,
                        "src": "18339:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1152,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18339:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18338:9:0"
                  },
                  "scope": 1234,
                  "src": "18283:107:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1175,
                    "nodeType": "Block",
                    "src": "18739:60:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1168,
                                "name": "reports",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "18756:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                                  "typeString": "mapping(bytes32 => struct TellorFlex.Report storage ref)"
                                }
                              },
                              "id": 1170,
                              "indexExpression": {
                                "id": 1169,
                                "name": "_queryId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1161,
                                "src": "18764:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "18756:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Report_$48_storage",
                                "typeString": "struct TellorFlex.Report storage ref"
                              }
                            },
                            "id": 1171,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamps",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31,
                            "src": "18756:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1173,
                          "indexExpression": {
                            "id": 1172,
                            "name": "_index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1163,
                            "src": "18785:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18756:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1167,
                        "id": 1174,
                        "nodeType": "Return",
                        "src": "18749:43:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1159,
                    "nodeType": "StructuredDocumentation",
                    "src": "18396:205:0",
                    "text": " @dev Gets the timestamp for the value based on their index\n @param _queryId is the id to look up\n @param _index is the value index to look up\n @return uint256 timestamp"
                  },
                  "functionSelector": "ce5e11bf",
                  "id": 1176,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTimestampbyQueryIdandIndex",
                  "nameLocation": "18615:29:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1161,
                        "mutability": "mutable",
                        "name": "_queryId",
                        "nameLocation": "18653:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1176,
                        "src": "18645:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1160,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "18645:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1163,
                        "mutability": "mutable",
                        "name": "_index",
                        "nameLocation": "18671:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1176,
                        "src": "18663:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1162,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18663:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18644:34:0"
                  },
                  "returnParameters": {
                    "id": 1167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1166,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1176,
                        "src": "18726:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18726:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18725:9:0"
                  },
                  "scope": 1234,
                  "src": "18606:193:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1193,
                    "nodeType": "Block",
                    "src": "19277:68:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1186,
                                "name": "reports",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "19294:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                                  "typeString": "mapping(bytes32 => struct TellorFlex.Report storage ref)"
                                }
                              },
                              "id": 1188,
                              "indexExpression": {
                                "id": 1187,
                                "name": "_queryId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1179,
                                "src": "19302:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19294:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Report_$48_storage",
                                "typeString": "struct TellorFlex.Report storage ref"
                              }
                            },
                            "id": 1189,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestampIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35,
                            "src": "19294:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 1191,
                          "indexExpression": {
                            "id": 1190,
                            "name": "_timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1181,
                            "src": "19327:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19294:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1185,
                        "id": 1192,
                        "nodeType": "Return",
                        "src": "19287:51:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1177,
                    "nodeType": "StructuredDocumentation",
                    "src": "18805:331:0",
                    "text": " @dev Returns the index of a reporter timestamp in the timestamp array for a specific data ID\n @param _queryId is ID of the specific data feed\n @param _timestamp is the timestamp to find in the timestamps array\n @return uint256 of the index of the reporter timestamp in the array for specific ID"
                  },
                  "functionSelector": "9d9b16ed",
                  "id": 1194,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTimestampIndexByTimestamp",
                  "nameLocation": "19150:28:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1182,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1179,
                        "mutability": "mutable",
                        "name": "_queryId",
                        "nameLocation": "19187:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1194,
                        "src": "19179:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1178,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "19179:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1181,
                        "mutability": "mutable",
                        "name": "_timestamp",
                        "nameLocation": "19205:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1194,
                        "src": "19197:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1180,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19197:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19178:38:0"
                  },
                  "returnParameters": {
                    "id": 1185,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1184,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1194,
                        "src": "19264:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1183,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19264:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19263:9:0"
                  },
                  "scope": 1234,
                  "src": "19141:204:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1205,
                    "nodeType": "Block",
                    "src": "19541:38:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1202,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6,
                              "src": "19566:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1264",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1264",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "id": 1201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19558:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1200,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19558:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19558:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1199,
                        "id": 1204,
                        "nodeType": "Return",
                        "src": "19551:21:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1195,
                    "nodeType": "StructuredDocumentation",
                    "src": "19351:126:0",
                    "text": " @dev Returns the address of the token used for staking\n @return address of the token used for staking"
                  },
                  "functionSelector": "10fe9ae8",
                  "id": 1206,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTokenAddress",
                  "nameLocation": "19491:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1196,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19506:2:0"
                  },
                  "returnParameters": {
                    "id": 1199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1198,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1206,
                        "src": "19532:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1197,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19532:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19531:9:0"
                  },
                  "scope": 1234,
                  "src": "19482:97:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1214,
                    "nodeType": "Block",
                    "src": "19779:40:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1212,
                          "name": "totalStakeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "19796:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1211,
                        "id": 1213,
                        "nodeType": "Return",
                        "src": "19789:23:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1207,
                    "nodeType": "StructuredDocumentation",
                    "src": "19585:126:0",
                    "text": " @dev Returns total amount of token staked for reporting\n @return uint256 total amount of token staked"
                  },
                  "functionSelector": "14c2a1bc",
                  "id": 1215,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalStakeAmount",
                  "nameLocation": "19725:19:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1208,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19744:2:0"
                  },
                  "returnParameters": {
                    "id": 1211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1210,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1215,
                        "src": "19770:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1209,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19770:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19769:9:0"
                  },
                  "scope": 1234,
                  "src": "19716:103:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1232,
                    "nodeType": "Block",
                    "src": "20167:70:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1225,
                                "name": "reports",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "20184:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Report_$48_storage_$",
                                  "typeString": "mapping(bytes32 => struct TellorFlex.Report storage ref)"
                                }
                              },
                              "id": 1227,
                              "indexExpression": {
                                "id": 1226,
                                "name": "_queryId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1218,
                                "src": "20192:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20184:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Report_$48_storage",
                                "typeString": "struct TellorFlex.Report storage ref"
                              }
                            },
                            "id": 1228,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "valueByTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43,
                            "src": "20184:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes_storage_$",
                              "typeString": "mapping(uint256 => bytes storage ref)"
                            }
                          },
                          "id": 1230,
                          "indexExpression": {
                            "id": 1229,
                            "name": "_timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1220,
                            "src": "20219:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "20184:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "functionReturnParameters": 1224,
                        "id": 1231,
                        "nodeType": "Return",
                        "src": "20177:53:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1216,
                    "nodeType": "StructuredDocumentation",
                    "src": "19825:212:0",
                    "text": " @dev Retrieve value from oracle based on timestamp\n @param _queryId being requested\n @param _timestamp to retrieve data/value from\n @return bytes value for timestamp submitted"
                  },
                  "functionSelector": "c5958af9",
                  "id": 1233,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "retrieveData",
                  "nameLocation": "20051:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1221,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1218,
                        "mutability": "mutable",
                        "name": "_queryId",
                        "nameLocation": "20072:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1233,
                        "src": "20064:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1217,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "20064:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1220,
                        "mutability": "mutable",
                        "name": "_timestamp",
                        "nameLocation": "20090:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1233,
                        "src": "20082:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1219,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20082:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20063:38:0"
                  },
                  "returnParameters": {
                    "id": 1224,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1223,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1233,
                        "src": "20149:12:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1222,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "20149:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "20148:14:0"
                  },
                  "scope": 1234,
                  "src": "20042:195:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1235,
              "src": "449:19790:0"
            }
          ],
          "src": "32:20207:0"
        },
        "id": 0
      },
      "contracts/oldContracts/contracts/interfaces/IERC20.sol": {
        "ast": {
          "absolutePath": "contracts/oldContracts/contracts/interfaces/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1264
            ]
          },
          "id": 1265,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1236,
              "literals": [
                "solidity",
                "0.8",
                ".3"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:22:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 1264,
              "linearizedBaseContracts": [
                1264
              ],
              "name": "IERC20",
              "nameLocation": "66:6:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "70a08231",
                  "id": 1243,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "88:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1238,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "106:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1243,
                        "src": "98:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1237,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "98:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "97:17:1"
                  },
                  "returnParameters": {
                    "id": 1242,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1241,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1243,
                        "src": "138:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1240,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "138:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "137:9:1"
                  },
                  "scope": 1264,
                  "src": "79:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a9059cbb",
                  "id": 1252,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "162:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1245,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "179:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1252,
                        "src": "171:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1244,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "171:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1247,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "198:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1252,
                        "src": "190:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1246,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "190:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "170:35:1"
                  },
                  "returnParameters": {
                    "id": 1251,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1250,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1252,
                        "src": "240:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1249,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "240:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "239:6:1"
                  },
                  "scope": 1264,
                  "src": "153:93:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "23b872dd",
                  "id": 1263,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "261:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1254,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "291:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "283:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1253,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "283:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1256,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "315:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "307:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1255,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "307:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1258,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "342:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "334:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1257,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "334:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "273:81:1"
                  },
                  "returnParameters": {
                    "id": 1262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1261,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "373:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1260,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "373:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "372:6:1"
                  },
                  "scope": 1264,
                  "src": "252:127:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1265,
              "src": "56:325:1"
            }
          ],
          "src": "32:349:1"
        },
        "id": 1
      }
    }
  }
}
